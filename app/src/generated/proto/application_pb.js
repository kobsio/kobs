// source: application.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.application.Application', null, global);
goog.exportSymbol('proto.application.ApplicationLink', null, global);
goog.exportSymbol('proto.application.ApplicationLogs', null, global);
goog.exportSymbol('proto.application.ApplicationLogsQuery', null, global);
goog.exportSymbol('proto.application.ApplicationMetrics', null, global);
goog.exportSymbol('proto.application.ApplicationMetricsChart', null, global);
goog.exportSymbol('proto.application.ApplicationMetricsQuery', null, global);
goog.exportSymbol('proto.application.ApplicationMetricsVariable', null, global);
goog.exportSymbol('proto.application.ApplicationResources', null, global);
goog.exportSymbol('proto.application.ApplicationTraces', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.Application = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.application.Application.repeatedFields_, null);
};
goog.inherits(proto.application.Application, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.Application.displayName = 'proto.application.Application';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.ApplicationLink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.application.ApplicationLink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.ApplicationLink.displayName = 'proto.application.ApplicationLink';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.ApplicationResources = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.application.ApplicationResources.repeatedFields_, null);
};
goog.inherits(proto.application.ApplicationResources, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.ApplicationResources.displayName = 'proto.application.ApplicationResources';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.ApplicationMetrics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.application.ApplicationMetrics.repeatedFields_, null);
};
goog.inherits(proto.application.ApplicationMetrics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.ApplicationMetrics.displayName = 'proto.application.ApplicationMetrics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.ApplicationMetricsVariable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.application.ApplicationMetricsVariable.repeatedFields_, null);
};
goog.inherits(proto.application.ApplicationMetricsVariable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.ApplicationMetricsVariable.displayName = 'proto.application.ApplicationMetricsVariable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.ApplicationMetricsChart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.application.ApplicationMetricsChart.repeatedFields_, null);
};
goog.inherits(proto.application.ApplicationMetricsChart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.ApplicationMetricsChart.displayName = 'proto.application.ApplicationMetricsChart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.ApplicationMetricsQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.application.ApplicationMetricsQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.ApplicationMetricsQuery.displayName = 'proto.application.ApplicationMetricsQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.ApplicationLogs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.application.ApplicationLogs.repeatedFields_, null);
};
goog.inherits(proto.application.ApplicationLogs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.ApplicationLogs.displayName = 'proto.application.ApplicationLogs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.ApplicationLogsQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.application.ApplicationLogsQuery.repeatedFields_, null);
};
goog.inherits(proto.application.ApplicationLogsQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.ApplicationLogsQuery.displayName = 'proto.application.ApplicationLogsQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.application.ApplicationTraces = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.application.ApplicationTraces, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.application.ApplicationTraces.displayName = 'proto.application.ApplicationTraces';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.application.Application.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.Application.prototype.toObject = function(opt_includeInstance) {
  return proto.application.Application.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.Application} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.Application.toObject = function(includeInstance, msg) {
  var f, obj = {
    cluster: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    linksList: jspb.Message.toObjectList(msg.getLinksList(),
    proto.application.ApplicationLink.toObject, includeInstance),
    resourcesList: jspb.Message.toObjectList(msg.getResourcesList(),
    proto.application.ApplicationResources.toObject, includeInstance),
    metrics: (f = msg.getMetrics()) && proto.application.ApplicationMetrics.toObject(includeInstance, f),
    logs: (f = msg.getLogs()) && proto.application.ApplicationLogs.toObject(includeInstance, f),
    traces: (f = msg.getTraces()) && proto.application.ApplicationTraces.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.Application}
 */
proto.application.Application.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.Application;
  return proto.application.Application.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.Application} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.Application}
 */
proto.application.Application.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCluster(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.application.ApplicationLink;
      reader.readMessage(value,proto.application.ApplicationLink.deserializeBinaryFromReader);
      msg.addLinks(value);
      break;
    case 5:
      var value = new proto.application.ApplicationResources;
      reader.readMessage(value,proto.application.ApplicationResources.deserializeBinaryFromReader);
      msg.addResources(value);
      break;
    case 6:
      var value = new proto.application.ApplicationMetrics;
      reader.readMessage(value,proto.application.ApplicationMetrics.deserializeBinaryFromReader);
      msg.setMetrics(value);
      break;
    case 7:
      var value = new proto.application.ApplicationLogs;
      reader.readMessage(value,proto.application.ApplicationLogs.deserializeBinaryFromReader);
      msg.setLogs(value);
      break;
    case 8:
      var value = new proto.application.ApplicationTraces;
      reader.readMessage(value,proto.application.ApplicationTraces.deserializeBinaryFromReader);
      msg.setTraces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.Application.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.Application.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.Application} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.Application.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCluster();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.application.ApplicationLink.serializeBinaryToWriter
    );
  }
  f = message.getResourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.application.ApplicationResources.serializeBinaryToWriter
    );
  }
  f = message.getMetrics();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.application.ApplicationMetrics.serializeBinaryToWriter
    );
  }
  f = message.getLogs();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.application.ApplicationLogs.serializeBinaryToWriter
    );
  }
  f = message.getTraces();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.application.ApplicationTraces.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cluster = 1;
 * @return {string}
 */
proto.application.Application.prototype.getCluster = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.Application} returns this
 */
proto.application.Application.prototype.setCluster = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.application.Application.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.Application} returns this
 */
proto.application.Application.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.application.Application.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.Application} returns this
 */
proto.application.Application.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated ApplicationLink links = 4;
 * @return {!Array<!proto.application.ApplicationLink>}
 */
proto.application.Application.prototype.getLinksList = function() {
  return /** @type{!Array<!proto.application.ApplicationLink>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.application.ApplicationLink, 4));
};


/**
 * @param {!Array<!proto.application.ApplicationLink>} value
 * @return {!proto.application.Application} returns this
*/
proto.application.Application.prototype.setLinksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.application.ApplicationLink=} opt_value
 * @param {number=} opt_index
 * @return {!proto.application.ApplicationLink}
 */
proto.application.Application.prototype.addLinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.application.ApplicationLink, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.Application} returns this
 */
proto.application.Application.prototype.clearLinksList = function() {
  return this.setLinksList([]);
};


/**
 * repeated ApplicationResources resources = 5;
 * @return {!Array<!proto.application.ApplicationResources>}
 */
proto.application.Application.prototype.getResourcesList = function() {
  return /** @type{!Array<!proto.application.ApplicationResources>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.application.ApplicationResources, 5));
};


/**
 * @param {!Array<!proto.application.ApplicationResources>} value
 * @return {!proto.application.Application} returns this
*/
proto.application.Application.prototype.setResourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.application.ApplicationResources=} opt_value
 * @param {number=} opt_index
 * @return {!proto.application.ApplicationResources}
 */
proto.application.Application.prototype.addResources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.application.ApplicationResources, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.Application} returns this
 */
proto.application.Application.prototype.clearResourcesList = function() {
  return this.setResourcesList([]);
};


/**
 * optional ApplicationMetrics metrics = 6;
 * @return {?proto.application.ApplicationMetrics}
 */
proto.application.Application.prototype.getMetrics = function() {
  return /** @type{?proto.application.ApplicationMetrics} */ (
    jspb.Message.getWrapperField(this, proto.application.ApplicationMetrics, 6));
};


/**
 * @param {?proto.application.ApplicationMetrics|undefined} value
 * @return {!proto.application.Application} returns this
*/
proto.application.Application.prototype.setMetrics = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.application.Application} returns this
 */
proto.application.Application.prototype.clearMetrics = function() {
  return this.setMetrics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.application.Application.prototype.hasMetrics = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ApplicationLogs logs = 7;
 * @return {?proto.application.ApplicationLogs}
 */
proto.application.Application.prototype.getLogs = function() {
  return /** @type{?proto.application.ApplicationLogs} */ (
    jspb.Message.getWrapperField(this, proto.application.ApplicationLogs, 7));
};


/**
 * @param {?proto.application.ApplicationLogs|undefined} value
 * @return {!proto.application.Application} returns this
*/
proto.application.Application.prototype.setLogs = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.application.Application} returns this
 */
proto.application.Application.prototype.clearLogs = function() {
  return this.setLogs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.application.Application.prototype.hasLogs = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ApplicationTraces traces = 8;
 * @return {?proto.application.ApplicationTraces}
 */
proto.application.Application.prototype.getTraces = function() {
  return /** @type{?proto.application.ApplicationTraces} */ (
    jspb.Message.getWrapperField(this, proto.application.ApplicationTraces, 8));
};


/**
 * @param {?proto.application.ApplicationTraces|undefined} value
 * @return {!proto.application.Application} returns this
*/
proto.application.Application.prototype.setTraces = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.application.Application} returns this
 */
proto.application.Application.prototype.clearTraces = function() {
  return this.setTraces(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.application.Application.prototype.hasTraces = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.ApplicationLink.prototype.toObject = function(opt_includeInstance) {
  return proto.application.ApplicationLink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.ApplicationLink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationLink.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    link: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.ApplicationLink}
 */
proto.application.ApplicationLink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.ApplicationLink;
  return proto.application.ApplicationLink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.ApplicationLink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.ApplicationLink}
 */
proto.application.ApplicationLink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.ApplicationLink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.ApplicationLink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.ApplicationLink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationLink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLink();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.application.ApplicationLink.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationLink} returns this
 */
proto.application.ApplicationLink.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string link = 2;
 * @return {string}
 */
proto.application.ApplicationLink.prototype.getLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationLink} returns this
 */
proto.application.ApplicationLink.prototype.setLink = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.application.ApplicationResources.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.ApplicationResources.prototype.toObject = function(opt_includeInstance) {
  return proto.application.ApplicationResources.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.ApplicationResources} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationResources.toObject = function(includeInstance, msg) {
  var f, obj = {
    kindsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    selector: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.ApplicationResources}
 */
proto.application.ApplicationResources.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.ApplicationResources;
  return proto.application.ApplicationResources.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.ApplicationResources} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.ApplicationResources}
 */
proto.application.ApplicationResources.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKinds(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelector(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.ApplicationResources.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.ApplicationResources.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.ApplicationResources} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationResources.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKindsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSelector();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated string kinds = 1;
 * @return {!Array<string>}
 */
proto.application.ApplicationResources.prototype.getKindsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.application.ApplicationResources} returns this
 */
proto.application.ApplicationResources.prototype.setKindsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.application.ApplicationResources} returns this
 */
proto.application.ApplicationResources.prototype.addKinds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.ApplicationResources} returns this
 */
proto.application.ApplicationResources.prototype.clearKindsList = function() {
  return this.setKindsList([]);
};


/**
 * optional string selector = 2;
 * @return {string}
 */
proto.application.ApplicationResources.prototype.getSelector = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationResources} returns this
 */
proto.application.ApplicationResources.prototype.setSelector = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.application.ApplicationMetrics.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.ApplicationMetrics.prototype.toObject = function(opt_includeInstance) {
  return proto.application.ApplicationMetrics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.ApplicationMetrics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationMetrics.toObject = function(includeInstance, msg) {
  var f, obj = {
    datasource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    health: (f = msg.getHealth()) && proto.application.ApplicationMetricsChart.toObject(includeInstance, f),
    variablesList: jspb.Message.toObjectList(msg.getVariablesList(),
    proto.application.ApplicationMetricsVariable.toObject, includeInstance),
    chartsList: jspb.Message.toObjectList(msg.getChartsList(),
    proto.application.ApplicationMetricsChart.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.ApplicationMetrics}
 */
proto.application.ApplicationMetrics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.ApplicationMetrics;
  return proto.application.ApplicationMetrics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.ApplicationMetrics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.ApplicationMetrics}
 */
proto.application.ApplicationMetrics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasource(value);
      break;
    case 2:
      var value = new proto.application.ApplicationMetricsChart;
      reader.readMessage(value,proto.application.ApplicationMetricsChart.deserializeBinaryFromReader);
      msg.setHealth(value);
      break;
    case 3:
      var value = new proto.application.ApplicationMetricsVariable;
      reader.readMessage(value,proto.application.ApplicationMetricsVariable.deserializeBinaryFromReader);
      msg.addVariables(value);
      break;
    case 4:
      var value = new proto.application.ApplicationMetricsChart;
      reader.readMessage(value,proto.application.ApplicationMetricsChart.deserializeBinaryFromReader);
      msg.addCharts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.ApplicationMetrics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.ApplicationMetrics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.ApplicationMetrics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationMetrics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatasource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHealth();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.application.ApplicationMetricsChart.serializeBinaryToWriter
    );
  }
  f = message.getVariablesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.application.ApplicationMetricsVariable.serializeBinaryToWriter
    );
  }
  f = message.getChartsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.application.ApplicationMetricsChart.serializeBinaryToWriter
    );
  }
};


/**
 * optional string datasource = 1;
 * @return {string}
 */
proto.application.ApplicationMetrics.prototype.getDatasource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationMetrics} returns this
 */
proto.application.ApplicationMetrics.prototype.setDatasource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ApplicationMetricsChart health = 2;
 * @return {?proto.application.ApplicationMetricsChart}
 */
proto.application.ApplicationMetrics.prototype.getHealth = function() {
  return /** @type{?proto.application.ApplicationMetricsChart} */ (
    jspb.Message.getWrapperField(this, proto.application.ApplicationMetricsChart, 2));
};


/**
 * @param {?proto.application.ApplicationMetricsChart|undefined} value
 * @return {!proto.application.ApplicationMetrics} returns this
*/
proto.application.ApplicationMetrics.prototype.setHealth = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.application.ApplicationMetrics} returns this
 */
proto.application.ApplicationMetrics.prototype.clearHealth = function() {
  return this.setHealth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.application.ApplicationMetrics.prototype.hasHealth = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ApplicationMetricsVariable variables = 3;
 * @return {!Array<!proto.application.ApplicationMetricsVariable>}
 */
proto.application.ApplicationMetrics.prototype.getVariablesList = function() {
  return /** @type{!Array<!proto.application.ApplicationMetricsVariable>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.application.ApplicationMetricsVariable, 3));
};


/**
 * @param {!Array<!proto.application.ApplicationMetricsVariable>} value
 * @return {!proto.application.ApplicationMetrics} returns this
*/
proto.application.ApplicationMetrics.prototype.setVariablesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.application.ApplicationMetricsVariable=} opt_value
 * @param {number=} opt_index
 * @return {!proto.application.ApplicationMetricsVariable}
 */
proto.application.ApplicationMetrics.prototype.addVariables = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.application.ApplicationMetricsVariable, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.ApplicationMetrics} returns this
 */
proto.application.ApplicationMetrics.prototype.clearVariablesList = function() {
  return this.setVariablesList([]);
};


/**
 * repeated ApplicationMetricsChart charts = 4;
 * @return {!Array<!proto.application.ApplicationMetricsChart>}
 */
proto.application.ApplicationMetrics.prototype.getChartsList = function() {
  return /** @type{!Array<!proto.application.ApplicationMetricsChart>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.application.ApplicationMetricsChart, 4));
};


/**
 * @param {!Array<!proto.application.ApplicationMetricsChart>} value
 * @return {!proto.application.ApplicationMetrics} returns this
*/
proto.application.ApplicationMetrics.prototype.setChartsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.application.ApplicationMetricsChart=} opt_value
 * @param {number=} opt_index
 * @return {!proto.application.ApplicationMetricsChart}
 */
proto.application.ApplicationMetrics.prototype.addCharts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.application.ApplicationMetricsChart, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.ApplicationMetrics} returns this
 */
proto.application.ApplicationMetrics.prototype.clearChartsList = function() {
  return this.setChartsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.application.ApplicationMetricsVariable.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.ApplicationMetricsVariable.prototype.toObject = function(opt_includeInstance) {
  return proto.application.ApplicationMetricsVariable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.ApplicationMetricsVariable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationMetricsVariable.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    query: jspb.Message.getFieldWithDefault(msg, 3, ""),
    allowall: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    value: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.ApplicationMetricsVariable}
 */
proto.application.ApplicationMetricsVariable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.ApplicationMetricsVariable;
  return proto.application.ApplicationMetricsVariable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.ApplicationMetricsVariable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.ApplicationMetricsVariable}
 */
proto.application.ApplicationMetricsVariable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowall(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.ApplicationMetricsVariable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.ApplicationMetricsVariable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.ApplicationMetricsVariable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationMetricsVariable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAllowall();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.application.ApplicationMetricsVariable.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationMetricsVariable} returns this
 */
proto.application.ApplicationMetricsVariable.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.application.ApplicationMetricsVariable.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationMetricsVariable} returns this
 */
proto.application.ApplicationMetricsVariable.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string query = 3;
 * @return {string}
 */
proto.application.ApplicationMetricsVariable.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationMetricsVariable} returns this
 */
proto.application.ApplicationMetricsVariable.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool allowAll = 4;
 * @return {boolean}
 */
proto.application.ApplicationMetricsVariable.prototype.getAllowall = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.application.ApplicationMetricsVariable} returns this
 */
proto.application.ApplicationMetricsVariable.prototype.setAllowall = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated string values = 5;
 * @return {!Array<string>}
 */
proto.application.ApplicationMetricsVariable.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.application.ApplicationMetricsVariable} returns this
 */
proto.application.ApplicationMetricsVariable.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.application.ApplicationMetricsVariable} returns this
 */
proto.application.ApplicationMetricsVariable.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.ApplicationMetricsVariable} returns this
 */
proto.application.ApplicationMetricsVariable.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional string value = 6;
 * @return {string}
 */
proto.application.ApplicationMetricsVariable.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationMetricsVariable} returns this
 */
proto.application.ApplicationMetricsVariable.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.application.ApplicationMetricsChart.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.ApplicationMetricsChart.prototype.toObject = function(opt_includeInstance) {
  return proto.application.ApplicationMetricsChart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.ApplicationMetricsChart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationMetricsChart.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    unit: jspb.Message.getFieldWithDefault(msg, 3, ""),
    stacked: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    size: jspb.Message.getFieldWithDefault(msg, 5, 0),
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.application.ApplicationMetricsQuery.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.ApplicationMetricsChart}
 */
proto.application.ApplicationMetricsChart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.ApplicationMetricsChart;
  return proto.application.ApplicationMetricsChart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.ApplicationMetricsChart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.ApplicationMetricsChart}
 */
proto.application.ApplicationMetricsChart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnit(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStacked(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 6:
      var value = new proto.application.ApplicationMetricsQuery;
      reader.readMessage(value,proto.application.ApplicationMetricsQuery.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.ApplicationMetricsChart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.ApplicationMetricsChart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.ApplicationMetricsChart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationMetricsChart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUnit();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStacked();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.application.ApplicationMetricsQuery.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.application.ApplicationMetricsChart.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationMetricsChart} returns this
 */
proto.application.ApplicationMetricsChart.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.application.ApplicationMetricsChart.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationMetricsChart} returns this
 */
proto.application.ApplicationMetricsChart.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string unit = 3;
 * @return {string}
 */
proto.application.ApplicationMetricsChart.prototype.getUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationMetricsChart} returns this
 */
proto.application.ApplicationMetricsChart.prototype.setUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool stacked = 4;
 * @return {boolean}
 */
proto.application.ApplicationMetricsChart.prototype.getStacked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.application.ApplicationMetricsChart} returns this
 */
proto.application.ApplicationMetricsChart.prototype.setStacked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int64 size = 5;
 * @return {number}
 */
proto.application.ApplicationMetricsChart.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.application.ApplicationMetricsChart} returns this
 */
proto.application.ApplicationMetricsChart.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated ApplicationMetricsQuery queries = 6;
 * @return {!Array<!proto.application.ApplicationMetricsQuery>}
 */
proto.application.ApplicationMetricsChart.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.application.ApplicationMetricsQuery>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.application.ApplicationMetricsQuery, 6));
};


/**
 * @param {!Array<!proto.application.ApplicationMetricsQuery>} value
 * @return {!proto.application.ApplicationMetricsChart} returns this
*/
proto.application.ApplicationMetricsChart.prototype.setQueriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.application.ApplicationMetricsQuery=} opt_value
 * @param {number=} opt_index
 * @return {!proto.application.ApplicationMetricsQuery}
 */
proto.application.ApplicationMetricsChart.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.application.ApplicationMetricsQuery, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.ApplicationMetricsChart} returns this
 */
proto.application.ApplicationMetricsChart.prototype.clearQueriesList = function() {
  return this.setQueriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.ApplicationMetricsQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.application.ApplicationMetricsQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.ApplicationMetricsQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationMetricsQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.ApplicationMetricsQuery}
 */
proto.application.ApplicationMetricsQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.ApplicationMetricsQuery;
  return proto.application.ApplicationMetricsQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.ApplicationMetricsQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.ApplicationMetricsQuery}
 */
proto.application.ApplicationMetricsQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.ApplicationMetricsQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.ApplicationMetricsQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.ApplicationMetricsQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationMetricsQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.application.ApplicationMetricsQuery.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationMetricsQuery} returns this
 */
proto.application.ApplicationMetricsQuery.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.application.ApplicationMetricsQuery.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationMetricsQuery} returns this
 */
proto.application.ApplicationMetricsQuery.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.application.ApplicationLogs.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.ApplicationLogs.prototype.toObject = function(opt_includeInstance) {
  return proto.application.ApplicationLogs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.ApplicationLogs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationLogs.toObject = function(includeInstance, msg) {
  var f, obj = {
    datasource: jspb.Message.getFieldWithDefault(msg, 1, ""),
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.application.ApplicationLogsQuery.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.ApplicationLogs}
 */
proto.application.ApplicationLogs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.ApplicationLogs;
  return proto.application.ApplicationLogs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.ApplicationLogs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.ApplicationLogs}
 */
proto.application.ApplicationLogs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasource(value);
      break;
    case 2:
      var value = new proto.application.ApplicationLogsQuery;
      reader.readMessage(value,proto.application.ApplicationLogsQuery.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.ApplicationLogs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.ApplicationLogs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.ApplicationLogs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationLogs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatasource();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.application.ApplicationLogsQuery.serializeBinaryToWriter
    );
  }
};


/**
 * optional string datasource = 1;
 * @return {string}
 */
proto.application.ApplicationLogs.prototype.getDatasource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationLogs} returns this
 */
proto.application.ApplicationLogs.prototype.setDatasource = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ApplicationLogsQuery queries = 2;
 * @return {!Array<!proto.application.ApplicationLogsQuery>}
 */
proto.application.ApplicationLogs.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.application.ApplicationLogsQuery>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.application.ApplicationLogsQuery, 2));
};


/**
 * @param {!Array<!proto.application.ApplicationLogsQuery>} value
 * @return {!proto.application.ApplicationLogs} returns this
*/
proto.application.ApplicationLogs.prototype.setQueriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.application.ApplicationLogsQuery=} opt_value
 * @param {number=} opt_index
 * @return {!proto.application.ApplicationLogsQuery}
 */
proto.application.ApplicationLogs.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.application.ApplicationLogsQuery, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.ApplicationLogs} returns this
 */
proto.application.ApplicationLogs.prototype.clearQueriesList = function() {
  return this.setQueriesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.application.ApplicationLogsQuery.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.ApplicationLogsQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.application.ApplicationLogsQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.ApplicationLogsQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationLogsQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    query: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fieldsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.ApplicationLogsQuery}
 */
proto.application.ApplicationLogsQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.ApplicationLogsQuery;
  return proto.application.ApplicationLogsQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.ApplicationLogsQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.ApplicationLogsQuery}
 */
proto.application.ApplicationLogsQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.ApplicationLogsQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.ApplicationLogsQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.ApplicationLogsQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationLogsQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.application.ApplicationLogsQuery.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationLogsQuery} returns this
 */
proto.application.ApplicationLogsQuery.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string query = 2;
 * @return {string}
 */
proto.application.ApplicationLogsQuery.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.application.ApplicationLogsQuery} returns this
 */
proto.application.ApplicationLogsQuery.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string fields = 3;
 * @return {!Array<string>}
 */
proto.application.ApplicationLogsQuery.prototype.getFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.application.ApplicationLogsQuery} returns this
 */
proto.application.ApplicationLogsQuery.prototype.setFieldsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.application.ApplicationLogsQuery} returns this
 */
proto.application.ApplicationLogsQuery.prototype.addFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.application.ApplicationLogsQuery} returns this
 */
proto.application.ApplicationLogsQuery.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.application.ApplicationTraces.prototype.toObject = function(opt_includeInstance) {
  return proto.application.ApplicationTraces.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.application.ApplicationTraces} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationTraces.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.application.ApplicationTraces}
 */
proto.application.ApplicationTraces.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.application.ApplicationTraces;
  return proto.application.ApplicationTraces.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.application.ApplicationTraces} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.application.ApplicationTraces}
 */
proto.application.ApplicationTraces.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.application.ApplicationTraces.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.application.ApplicationTraces.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.application.ApplicationTraces} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.application.ApplicationTraces.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.application);
