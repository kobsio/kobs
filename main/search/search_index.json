{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"community-plugins/","title":"Getting Started","text":"<p>Community plugins are plugins, which are not part of the kobsio/kobs repository. They are developed and maintained by our awsome community to extend kobs with new functions.</p> <p>In the following you can find a list of community plugins. If you developed your own plugin feel free to add it to the list below.</p> <p>Note</p> <p>You can add a new file with the documentation for your plugin to the <code>docs/community-plugins</code> folder. Just create a new markdown file with the name of your plugin and link it in the <code>mkdocs.yml</code> file in the root directory of this repository.</p>"},{"location":"community-plugins/#community-plugins","title":"Community Plugins","text":"<p>In the following you can find a list of community plugins. You can also search for <code>kobs-plugin</code> at GitHub to find a list of plugins.</p>"},{"location":"contributing/","title":"Getting Started","text":"<p>Every contribution to kobs is welcome, whether it is reporting a bug, submitting a fix, proposing new features or becoming a maintainer. To make contributing to kobs as easy as possible you will find more details for the development flow in our Contribution Guideline.</p> <p>Please also follow our Code of Conduct in all your interactions with the project.</p>"},{"location":"contributing/create-a-plugin/","title":"Create a Plugin","text":"<p>In the following you find some instructions and recommendations which will help you to develop your own plugins for kobs.</p> <p>Notes</p> <p>Please read the following notes, before you start with the development of your own plugins:</p> <ul> <li>Adding a plugin to the kobsio/kobs repository: When you want to create a plugin, which should be added as official plugin to the kobsio/kobs repository, create a new issue first. The issue should contain a description for the plugin you want to develop and an explanation why it makes sens to add it as official plugin.</li> <li>Maintaining a plugin in your own repository: If you develop a public plugin in your own repository you can use the kobsio/plugin-template. Besides that it would be nice to add a markdown file for your plugin to the <code>docs/community-plugins</code> folder. You can also add a <code>kobs-plugin</code> label so that users can find your plugin via GitHub.</li> <li>Private plugins: For private plugins you can also use the kobsio/plugin-template.</li> </ul>"},{"location":"contributing/create-a-plugin/#structure","title":"Structure","text":"<p>Each plugin contains a backend and a frontend part. The backend part is written in Go and provides the API for the frontend. The frontend part is written in TypeScript and will become part of the React UI of kobs via Module Federation.</p> <pre><code>.\n\u251c\u2500\u2500 Dockerfile                       # The Dockerfile which is used to build and distribute the frontend assets for your plugin\n\u251c\u2500\u2500 cmd                              # The entrypoint for the backend code of your plugin\n\u251c\u2500\u2500 go.mod                           # The dependencies for your backend code\n\u251c\u2500\u2500 package.json                     # The dependencies and build instructions for your frontend code\n\u251c\u2500\u2500 pkg                              # Additional packages for your backend code\n\u2514\u2500\u2500 src\n \u00a0\u00a0 \u251c\u2500\u2500 assets\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 icon.png                 # Each plugin should contain an icon, which should be placed in the assets folder\n \u00a0\u00a0 \u251c\u2500\u2500 components\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 instance\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Instance.tsx         # The Instance module\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 page\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Page.tsx             # The Page module\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 panel\n \u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 Panel.tsx            # The Panel module\n \u00a0\u00a0 \u251c\u2500\u2500 setupModuleFederation.js     # The setup for Module Federation, so that the plugin can be used within the frontend\n \u00a0\u00a0 \u2514\u2500\u2500 utils\n \u00a0\u00a0     \u2514\u2500\u2500 constants.ts             # We recommend a constants file with a default description for your plugin\n</code></pre>"},{"location":"contributing/create-a-plugin/#backend-code","title":"Backend Code","text":"<p>For each plugin you develop your should create a new Go package with the name of your plugin. In our case the package will be named <code>helloworld</code> and lives in the <code>cmd</code> folder:</p> <pre><code>package helloworld\n</code></pre> <p>Each plugin must export a <code>PluginType</code> constant, which is the type of the plugin how it can be used in the configuration. The value of the <code>PluginType</code> variable is also used as prefix for the http routes, which are exposed by the plugin.</p> <pre><code>const PluginType = \"helloworld\"\n</code></pre> <p>Finally each plugin must implement a <code>Mount</code> function, which receives the configured plugin instances (<code>plugin.Instance</code>) and the cluster client (<code>clusters.Client</code>) as argument. It must return a <code>chi.Router</code> and an <code>error</code>:</p> <pre><code>func Mount(instances []plugin.Instance, clustersClient clusters.Client) (chi.Router, error) {\nrouter := Router{\nchi.NewRouter(),\n}\n\nreturn router, nil\n}\n</code></pre> <p>A complete example can be found in the following file https://github.com/kobsio/plugin-template/blob/main/cmd/helloworld.go.</p>"},{"location":"contributing/create-a-plugin/#frontend-code","title":"Frontend Code","text":"<p>The frontend code for plugins uses our fork of Create React App to support Module Federation. Each plugin must export three modules: <code>Instance</code>, <code>Page</code> and <code>Panel</code>. These modules are configured in the <code>setupModuleFederation.js</code> file.</p> <p>The <code>Instance</code> module is used to display a card on the plugins page. The component receives the properties defined in the <code>IPluginInstance</code> interface from the <code>@kobsio/shared</code>:</p> <pre><code>export interface IPluginInstance {\n  id: string;\n  satellite: string;\n  type: string;\n  name: string;\n  description?: string;\n  options?: IPluginInstanceOptions;\n  updatedAt: number;\n}\n\nexport interface IPluginInstanceOptions {\n  [key: string]: any;\n}\n</code></pre> <pre><code>import { IPluginInstance, PluginInstance } from '@kobsio/shared';\n\nimport { defaultDescription } from '../../utils/constants';\nimport icon from '../../assets/icon.png';\n\nconst Instance: FunctionComponent&lt;IPluginInstance&gt; = ({ satellite, name, type, description }) =&gt; {\n  return (\n    &lt;PluginInstance\n      satellite={satellite}\n      name={name}\n      type={type}\n      description={description || defaultDescription}\n      icon={icon}\n    /&gt;\n  );\n};\n\nexport default Instance;\n</code></pre> <p>The <code>Page</code> module is used to display a dedicated page for a plugin, when a user selects the plugin instance on the plugins page. The component receives the plugin <code>instance</code> as property.</p> <pre><code>export interface IPluginPageProps {\n  instance: IPluginInstance;\n}\n</code></pre> <p>To have a unified look across all plugins, we recommend to use a <code>PageHeaderSection</code> and <code>PageContentSection</code> component.</p> <pre><code>import { Card, CardBody } from '@patternfly/react-core';\n\nimport { IPluginPageProps, PageContentSection, PageHeaderSection, PluginPageTitle } from '@kobsio/shared';\nimport { defaultDescription } from '../../utils/constants';\n\nconst Page: FunctionComponent&lt;IPluginPageProps&gt; = ({ instance }) =&gt; {\n  return (\n    &lt;Fragment&gt;\n      &lt;PageHeaderSection\n        component={\n          &lt;PluginPageTitle\n            satellite={instance.satellite}\n            name={instance.name}\n            description={instance.description || defaultDescription}\n          /&gt;\n        }\n      /&gt;\n\n      &lt;PageContentSection hasPadding={true} hasDivider={true} toolbarContent={undefined} panelContent={undefined}&gt;\n        &lt;Card isCompact={true}&gt;\n          &lt;CardBody&gt;{JSON.stringify(instance)}&lt;/CardBody&gt;\n        &lt;/Card&gt;\n      &lt;/PageContentSection&gt;\n    &lt;/Fragment&gt;\n  );\n};\n\nexport default Page;\n</code></pre> <p>The <code>Panel</code> module is used to display a plugin within a dashboard. The component receives the properties defined in the <code>IPluginPanelProps</code> interface from the <code>@kobsio/shared</code> package.</p> <pre><code>export interface IPluginPanelProps {\n  title: string;\n  description?: string;\n  options?: any;\n  instance: IPluginInstance;\n  times?: ITimes;\n  setDetails?: (details: ReactNode) =&gt; void;\n}\n</code></pre> <p>You can create a custom interface which extends the <code>IPluginPanelProps</code> interface, so that you can define the options for your plugin. Please always validate the options passed to your plugin, since we can not validate them with the Custom Resource Definition.</p> <pre><code>import { IPluginPanelProps, PluginPanel, PluginPanelError } from '@kobsio/shared';\n\ninterface IHelloWorldPluginPanelProps extends IPluginPanelProps {\n  options?: any;\n}\n\nconst Panel: FunctionComponent&lt;IHelloWorldPluginPanelProps&gt; = ({ title, description, options, instance, times, setDetails }) =&gt; {\n  if (options) {\n    return (\n      &lt;PluginPanel title={title} description={description}&gt;\n        &lt;div&gt;\n          &lt;div&gt;{JSON.stringify(options)}&lt;/div&gt;\n          &lt;div&gt;{JSON.stringify(instance)}&lt;/div&gt;\n          &lt;div&gt;{JSON.stringify(times)}&lt;/div&gt;\n          &lt;div&gt;{JSON.stringify(setDetails)}&lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/PluginPanel&gt;\n    );\n  }\n\n  return (\n    &lt;PluginPanelError\n      title={title}\n      description={description}\n      message=\"Options for HelloWorld panel are missing or invalid\"\n      details=\"The panel doesn't contain the required options to get data from HelloWorld.\"\n      documentation=\"https://kobs.io/main/community-plugins/helloworld\"\n    /&gt;\n  );\n};\n\nexport default Panel;\n</code></pre> <p>A complete example can be found in the kobsio/plugin-template repository within the following files:</p> <ul> <li>https://github.com/kobsio/plugin-template/blob/main/src/setupModuleFederation.js</li> <li>https://github.com/kobsio/plugin-template/blob/main/src/components/instance/Instance.tsx</li> <li>https://github.com/kobsio/plugin-template/blob/main/src/components/page/Page.tsx</li> <li>https://github.com/kobsio/plugin-template/blob/main/src/components/panel/Panel.tsx</li> </ul>"},{"location":"contributing/create-a-plugin/#use-your-plugin","title":"Use your Plugin","text":"<p>To use your created plugin you can use the kobsio/app-template repository. More information can be found in the Use Custom Plugins documentation.</p>"},{"location":"contributing/release/","title":"Release","text":"<p>Before we can create a new tag we have to update the following files, so that they contain the correct version for the new Docker image:</p> <ul> <li>hub Chart.yaml: Update the <code>appVersion</code> field and bump the <code>version</code> field in the Helm chart for the hub.</li> <li>hub values.yaml: Set the new tag in the <code>kobs.image.tag</code> value in the Helm chart for the hub.</li> <li>hub deployment.yaml: Update the Docker image in the Kustomize deployment file for the hub.</li> <li>satellite Chart.yaml: Update the <code>appVersion</code> field and bump the <code>version</code> field in the Helm chart for the satellite.</li> <li>satellite values.yaml: Set the new tag in the <code>kobs.image.tag</code> value in the Helm chart for the satellite.</li> <li>satellite deployment.yaml: Update the Docker image in the Kustomize deployment file for the satellite.</li> <li>helm.md: Update the table with the Helm values for the hub and satellite, so that it contains the new value for the <code>image.tag</code>.</li> </ul> <p>Now we can publish the created draft release, which is automatically updated by the Release GitHub Action. When we create the GitHub release the Create a discussion for this release should be checked, and the discussion should be created in the Announcements category.</p>"},{"location":"contributing/release/#publish-npm-packages","title":"Publish NPM Packages","text":"<p>In the next step we have to publish a new version for our NPM packages. To do that we have to run the following commands, where <code>&lt;version&gt;</code> should be replaced with the version which was just created:</p> <pre><code>yarn build\nnpx lerna publish &lt;version&gt; --force-publish --no-changelog --no-git-tag-version --no-private --no-push\ngit restore .\n</code></pre> <p>Note</p> <p>To check if we are using the correct user to publish the packages we can run <code>npm whoami</code> and <code>npm adduser</code> to use the correct one.</p> <p>If publishing fails with a message like <code>lerna ERR! E402 You must sign up for private packages</code> we have to run <code>npm config set access public</code>.</p>"},{"location":"contributing/release/#publish-new-templates","title":"Publish new Templates","text":"<p>Once the release in the kobsio/kobs repository was created, we have to publish a new version for our templates:</p> <ul> <li>kobsio/app-template</li> <li>kobsio/plugin-template</li> </ul> <p>The version numbers used in the template should follow the versioning of the kobsio/kobs repository.</p>"},{"location":"contributing/use-custom-plugins/","title":"Using custom Plugins","text":"<p>When you want to use custom plugins, e.g. a community plugins or a private plugin, you have to build your own Docker image for kobs. For this we are providing a template repository which can be found at https://github.com/kobsio/app-template.</p> <p>To use this template you can use the Use this template button from the repository to create your own version of kobs.</p>"},{"location":"contributing/use-custom-plugins/#add-a-plugin","title":"Add a Plugin","text":"<p>To add a plugin to your version of kobs your have to adjust the <code>main.go</code> and the <code>Dockerfile</code>.</p>"},{"location":"contributing/use-custom-plugins/#maingo","title":"<code>main.go</code>","text":"<p>The <code>main.go</code> file is used to register the plugin in the backend code. To do this you just have to import the Go package of the plugin and add it to the <code>pluginMounts</code> map. You can also remove once of the plugins which are comming with kobs if you do not need them. In the following example we are adding the <code>helloworld</code> plugin from the kobsio/plugin-template repository and removing the <code>rss</code> plugin, because we do not want to use it:</p> <pre><code>package main\n\nimport (\n    \"github.com/kobsio/kobs/cmd/kobs/root\"\n    \"github.com/kobsio/kobs/pkg/log\"\n    \"github.com/kobsio/kobs/pkg/satellite/plugins/plugin\"\n\n    azure \"github.com/kobsio/kobs/plugins/plugin-azure/cmd\"\n    elasticsearch \"github.com/kobsio/kobs/plugins/plugin-elasticsearch/cmd\"\n    flux \"github.com/kobsio/kobs/plugins/plugin-flux/cmd\"\n    grafana \"github.com/kobsio/kobs/plugins/plugin-grafana/cmd\"\n    harbor \"github.com/kobsio/kobs/plugins/plugin-harbor/cmd\"\n    helm \"github.com/kobsio/kobs/plugins/plugin-helm/cmd\"\n    istio \"github.com/kobsio/kobs/plugins/plugin-istio/cmd\"\n    jaeger \"github.com/kobsio/kobs/plugins/plugin-jaeger/cmd\"\n    kiali \"github.com/kobsio/kobs/plugins/plugin-kiali/cmd\"\n    klogs \"github.com/kobsio/kobs/plugins/plugin-klogs/cmd\"\n    opsgenie \"github.com/kobsio/kobs/plugins/plugin-opsgenie/cmd\"\n    prometheus \"github.com/kobsio/kobs/plugins/plugin-prometheus/cmd\"\n-    rss \"github.com/kobsio/kobs/plugins/plugin-rss/cmd\"\n   sonarqube \"github.com/kobsio/kobs/plugins/plugin-sonarqube/cmd\"\n    sql \"github.com/kobsio/kobs/plugins/plugin-sql/cmd\"\n    techdocs \"github.com/kobsio/kobs/plugins/plugin-techdocs/cmd\"\n\n+    helloworld \"github.com/kobsio/plugin-template/cmd\"\n\n   \"go.uber.org/zap\"\n)\n\nfunc main() {\n    var pluginMounts map[string]plugin.MountFn\n    pluginMounts = make(map[string]plugin.MountFn)\n\n    pluginMounts[azure.PluginType] = azure.Mount\n    pluginMounts[elasticsearch.PluginType] = elasticsearch.Mount\n    pluginMounts[flux.PluginType] = flux.Mount\n    pluginMounts[grafana.PluginType] = grafana.Mount\n    pluginMounts[harbor.PluginType] = harbor.Mount\n    pluginMounts[helm.PluginType] = helm.Mount\n    pluginMounts[istio.PluginType] = istio.Mount\n    pluginMounts[jaeger.PluginType] = jaeger.Mount\n    pluginMounts[kiali.PluginType] = kiali.Mount\n    pluginMounts[klogs.PluginType] = klogs.Mount\n    pluginMounts[opsgenie.PluginType] = opsgenie.Mount\n    pluginMounts[prometheus.PluginType] = prometheus.Mount\n-    pluginMounts[rss.PluginType] = rss.Mount\n   pluginMounts[sonarqube.PluginType] = sonarqube.Mount\n    pluginMounts[sql.PluginType] = sql.Mount\n    pluginMounts[techdocs.PluginType] = techdocs.Mount\n\n+    pluginMounts[helloworld.PluginType] = helloworld.Mount\n\n   if err := root.Command(pluginMounts).Execute(); err != nil {\n        log.Fatal(nil, \"Failed to initialize kobs\", zap.Error(err))\n    }\n}\n</code></pre> <p>When you have adjusted the <code>main.go</code> file run <code>go mod tidy</code> to add it to your <code>go.mod</code> file.</p>"},{"location":"contributing/use-custom-plugins/#dockerfile","title":"<code>Dockerfile</code>","text":"<p>The <code>Dockerfile</code> is used to build your own version of kobs and to copy the frontend files for your plugin. We are using again the <code>helloworld</code> plugin from the kobsio/plugin-template in the following example:</p> <pre><code>FROM kobsio/kobs:v0.11.0 as app\n+FROM kobsio/plugin:main as plugin-helloworld\n\nFROM golang:1.19.0 as api\nWORKDIR /kobs\nCOPY go.mod go.sum /kobs/\nRUN go mod download\nCOPY . .\nRUN export CGO_ENABLED=0 &amp;&amp; make build\n\nFROM alpine:3.16.2\nRUN apk update &amp;&amp; apk add --no-cache ca-certificates\nRUN mkdir /kobs\nCOPY --from=api /kobs/bin/kobs /kobs\nCOPY --from=app /kobs/app /kobs/app\n+COPY --from=plugin-helloworld /kobs/helloworld /kobs/app/plugins/helloworld\nWORKDIR /kobs\nUSER nobody\nENTRYPOINT  [ \"/kobs/kobs\" ]\n</code></pre> <p>The created Docker image can then be used within the Helm chart or Kustomize files from the documentation.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>kobs consists of two components, which are named hub and satellite. A satellite can be used to access the Kubernetes API and several services via plugins. To access one or multiple satellites the hub component is required. It connects to one or multiple satellites to work with the Kubernetes resources or to access the data served by plugins. It also watches the satellites for our resources like Applications, Teams, Users and Dashboards. The hub is also responsible for serving the UI for kobs.</p> <p></p>"},{"location":"getting-started/configuration/cluster/","title":"cluster","text":"<p>The cluster can be configured using a configuration file in yaml format, command-line arguments and environment variables.</p>"},{"location":"getting-started/configuration/cluster/#command-line-arguments-and-environment-variables","title":"Command-line Arguments and Environment Variables","text":"<p>The following command-line arguments and environment variables are available.</p> Command-line Argument Environment Variable Description Default <code>--config</code> <code>KOBS_CONFIG</code> The path to the configuration file for the cluster <code>config.yaml</code> <code>--cluster.debug.enabled</code> <code>KOBS_CLUSTER_DEBUG_ENABLED</code> Start the debug server. <code>false</code> <code>--cluster.debug.address</code> <code>KOBS_CLUSTER_DEBUG_ADDRESS</code> The address where the debug server should listen on. <code>:15225</code> <code>--cluster.log.format</code> <code>KOBS_CLUSTER_LOG_FORMAT</code> Set the output format of the logs. Must be <code>console</code> or <code>json</code>. <code>console</code> <code>--cluster.log.level</code> <code>KOBS_CLUSTER_LOG_LEVEL</code> Set the log level. Must be <code>debug</code>, <code>info</code>, <code>warn</code>, <code>error</code>, <code>fatal</code> or <code>panic</code>. <code>info</code> <code>--cluster.tracer.enabled</code> <code>KOBS_CLUSTER_TRACER_ENABLED</code> Enable tracing. <code>false</code> <code>--cluster.tracer.service</code> <code>KOBS_CLUSTER_TRACER_SERVICE</code> The name of the service which should be used for tracing. <code>kobs</code> <code>--cluster.tracer.provider</code> <code>KOBS_CLUSTER_TRACER_PROVIDER</code> The tracing provider which should be used. Must be <code>jaeger</code> or <code>zipkin</code>. <code>jaeger</code> <code>--cluster.tracer.address</code> <code>KOBS_CLUSTER_TRACER_ADDRESS</code> The address of the tracing provider instance. <code>http://localhost:14268/api/traces</code> <code>--cluster.metrics.address</code> <code>KOBS_CLUSTER_METRICS_ADDRESS</code> Set the address where the metrics server is listen on. <code>:15222</code> <code>--cluster.kubernetes.provider.type</code> <code>KOBS_CLUSTER_KUBERNETES_PROVIDER_TYPE</code> The provider which should be used for the Kubernetes cluster. Must be <code>incluster</code> or <code>kubeconfig</code>. <code>incluster</code> <code>--cluster.kubernetes.provider.kubeconfig.path</code> <code>KOBS_CLUSTER_KUBERNETES_PROVIDER_KUBECONFIG_PATH</code> The path to the Kubeconfig file, which should be used when the provider is <code>kubeconfig</code>. <code>--cluster.kubernetes.provider.kubeconfig.context</code> <code>KOBS_CLUSTER_KUBERNETES_PROVIDER_KUBECONFIG_CONTEXT</code> The context, which should be used from the Kubeconfig file, when the provider is <code>kubeconfig</code>. <code>--cluster.api.address</code> <code>KOBS_CLUSTER_API_ADDRESS</code> The address where the cluster API should listen on. <code>:15221</code> <code>--cluster.api.token</code> <code>KOBS_CLUSTER_API_ADDRESS</code> The token which is used to protect the cluster API."},{"location":"getting-started/configuration/cluster/#configuration-file","title":"Configuration File","text":"<p>The cluster can also be configured via configuration file. By default kobs will look for a <code>config.yaml</code> file in the directory of the kobs binary. To set a custom location of the configuration file your can use the <code>--config</code> command-line flag or the <code>KOBS_CONFIG</code> environment variable.</p> <pre><code>cluster:\n## Set the log format and level for the cluster.\n##\nlog:\nformat: json\nlevel: info\n\n## Set the tracing configuration for the cluster.\n##\ntracer:\nenabled: false\nservice: cluster\nprovider: jaeger\naddress: http://localhost:14268/api/traces\n\n## Set the Kubernetes provider. The provider defines how the Kubernetes API should be accessed. We recommend to use\n## the \"incluster\" provider, when the cluster component is running inside a Kubernetes cluster. For development\n## purposes we recommend the \"kubeconfig\" provider.\n##\nkubernetes:\nprovider:\ntype: incluster\n# type: kubeconfig\n# kubeconfig:\n#   path: /Users/ricoberger/.kube/config\n#   context: kind-kind\n\n## The token, which is used to protect the cluster API.\n##\napi:\ntoken: changeme\n\n## A list of plugins, which can be accessed via the cluster.\nplugins: []\n# - name: prometheus\n#   type: prometheus\n#   options:\n#     address: http://localhost:8481/select/0/prometheus\n</code></pre> <p>You can also use environment variables within the configuration file. To use an environment variable you can place the following placeholder in the config file: <code>${NAME_OF_THE_ENVIRONMENT_VARIABLE}</code>. When kobs reads the file the placeholder will be replaced, with the value of the environment variable. This allows you to provide confidential data via an environment variable, instead of putting them into the file.</p>"},{"location":"getting-started/configuration/hub/","title":"hub","text":"<p>The hub can be configured using a configuration file in yaml format, command-line arguments and environment variables.</p>"},{"location":"getting-started/configuration/hub/#command-line-arguments-and-environment-variables","title":"Command-line Arguments and Environment Variables","text":"<p>The following command-line arguments and environment variables are available.</p> Command-line Argument Environment Variable Description Default <code>--config</code> <code>KOBS_CONFIG</code> The path to the configuration file for the hub <code>config.yaml</code> <code>--hub.debug.enabled</code> <code>KOBS_HUB_DEBUG_ENABLED</code> Start the debug server. <code>false</code> <code>--hub.debug.address</code> <code>KOBS_HUB_DEBUG_ADDRESS</code> The address where the debug server should listen on. <code>:15225</code> <code>--hub.log.format</code> <code>KOBS_HUB_LOG_FORMAT</code> Set the output format of the logs. Must be <code>console</code> or <code>json</code>. <code>console</code> <code>--hub.log.level</code> <code>KOBS_HUB_LOG_LEVEL</code> Set the log level. Must be <code>debug</code>, <code>info</code>, <code>warn</code>, <code>error</code>, <code>fatal</code> or <code>panic</code>. <code>info</code> <code>--hub.tracer.enabled</code> <code>KOBS_HUB_TRACER_ENABLED</code> Enable tracing. <code>false</code> <code>--hub.tracer.service</code> <code>KOBS_HUB_TRACER_SERVICE</code> The name of the service which should be used for tracing. <code>kobs</code> <code>--hub.tracer.provider</code> <code>KOBS_HUB_TRACER_PROVIDER</code> The tracing provider which should be used. Must be <code>jaeger</code> or <code>zipkin</code>. <code>jaeger</code> <code>--hub.tracer.address</code> <code>KOBS_HUB_TRACER_ADDRESS</code> The address of the tracing provider instance. <code>http://localhost:14268/api/traces</code> <code>--hub.metrics.address</code> <code>KOBS_HUB_METRICS_ADDRESS</code> Set the address where the metrics server is listen on. <code>:15222</code> <code>--hub.database.uri</code> <code>KOBS_HUB_DATABASE_URI</code> The connection uri for MongoDB <code>mongodb://localhost:27017</code> <code>--hub.api.address</code> <code>KOBS_HUB_API_ADDRESS</code> The address where the hub API should listen on. <code>:15220</code> <code>--hub.auth.oidc.enabled</code> <code>KOBS_HUB_AUTH_OIDC_ENABLED</code> Enables the OIDC provider, so that uses can sign in via OIDC. <code>false</code> <code>--hub.auth.oidc.issuer</code> <code>KOBS_HUB_AUTH_OIDC_ISSUER</code> The issuer url for the OIDC provider. <code>--hub.auth.oidc.client-id</code> <code>KOBS_HUB_AUTH_OIDC_CLIENT_ID</code> The client id for the OIDC provider. <code>--hub.auth.oidc.client-secret</code> <code>KOBS_HUB_AUTH_OIDC_CLIENT_SECRET</code> The client secret for the OIDC provider. <code>--hub.auth.oidc.redirect-url</code> <code>KOBS_HUB_AUTH_OIDC_REDIRECT_URL</code> The redirect url for the OIDC provider. <code>--hub.auth.oidc.state</code> <code>KOBS_HUB_AUTH_OIDC_STATE</code> The state parameter for the OIDC provider. <code>--hub.auth.oidc.scopes</code> <code>KOBS_HUB_AUTH_OIDC_SCOPES</code> The scopes which should be returned by the OIDC provider. <code>openid,profile,email,groups</code> <code>--hub.auth.session.token</code> <code>KOBS_HUB_AUTH_SESSION_TOKEN</code> The signing token for the session. <code>--hub.auth.session.duration</code> <code>KOBS_HUB_AUTH_SESSION_DURATION</code> The duration for how long a user session is valid. <code>168h</code> <code>--hub.app.address</code> <code>KOBS_HUB_APP_ADDRESS</code> The address where the app server should listen on. <code>:15219</code> <code>--hub.app.assets-dir</code> <code>KOBS_HUB_APP_ASSETS_DIR</code> The directory for the frontend assets, which should be served via the app server. <code>app</code>"},{"location":"getting-started/configuration/hub/#configuration-file","title":"Configuration File","text":"<p>The hub can also be configured via configuration file. By default kobs will look for a <code>config.yaml</code> file in the directory of the kobs binary. To set a custom location of the configuration file your can use the <code>--config</code> command-line flag or the <code>KOBS_CONFIG</code> environment variable.</p> <pre><code>hub:\n## Set the log format and level for the hub.\n##\nlog:\nformat: json\nlevel: info\n\n## Set the tracing configuration for the hub.\n##\ntracer:\nenabled: false\nservice: hub\nprovider: jaeger\naddress: http://localhost:14268/api/traces\n\n## The connection string for the MongoDB, where all applications, users, teams and dashboards are stored.\n##\ndatabase:\nuri: mongodb://root:changeme@localhost:27017\n\n## The \"app\" section in the configuration file is used to configure the frontend for kobs.\n##\napp:\nsettings:\n## Enable / disable the save options, to controll if modifications to resources made via the frontend can be saved\n## by a user or not.\n##\nsave:\nenabled: false\n## Set the items which should be displayed in the navigation sidebar. These settings can be overwritten by a user\n## via a User CR.\n##\ndefaultNavigation:\n- name: Home\nitems:\n- name: Home\nicon: home\nlink: \"/\"\n- name: Search\nicon: search\nlink: \"/search\"\n- name: Resources\nitems:\n- name: Applications\nicon: apps\nlink: \"/applications\"\n- name: Topology\nicon: topology\nlink: \"/topology\"\n- name: Teams\nicon: team\nlink: \"/teams\"\n- name: Kubernetes Resources\nicon: kubernetes\nlink: \"/resources\"\n- name: Plugins\nicon: plugin\nlink: \"/plugins\"\n## Set the dashboards which should be displayed on the home page. These settings can be overwritten by a user via\n## a User CR.\n##\ndefaultDashboards: []\n\nintegrations:\n## The resources configuration section can be used to add integrations for Kubernetes Resources. Currently it is\n## possible to add a list of default dashboards for each Kubernetes Resource via the integrations.\n##\nresources:\ndashboards:\n# - resource: pods\n#   dashboard:\n#     name: resource-usage\n#     namespace: kobs\n#     title: Resource Usage\n#     placeholders:\n#       namespace: \"&lt;% $.metadata.namespace %&gt;\"\n#       pod: \"&lt;% $.metadata.name %&gt;\"\n\nauth:\n## OIDC configuration for kobs. OIDC can be used next to the User CRs to authenticate and authorize users. The OIDC\n## provider must be enabled explizit. If the configuration is wrong kobs will crash during the startup process.\n##\noidc:\nenabled: false\n## The issuer (e.g. \"https://accounts.google.com\"), client id and client secret for your OIDC provider.\n##\nissuer:\nclientID:\nclientSecret:\n## The url where the OIDC provider redirects a user after login. Must be the URL where your kobs instance is\n## running at.\n##\nredirectURL: https://&lt;changeme&gt;/auth/callback\n## A random string to mitigate CSRF attacks.\n##\nstate:\n## The scopes for the OIDC provider. By default we need the \"openid\", \"profile\", \"email\", \"groups\" scope. If your\n## OIDC provider (e.g. Google) does not support the \"groups\" scope you can also omit it.\n##\n## The \"groups\" scope is needed to connect a user with a team, so that you can set the permissions of users in a\n## team and not for each single user.\n##\n## If you are using Google and want to use Google Groups to connect your users with teams, you can use a tool like\n## Dex (https://dexidp.io) to get the groups of a user.\n##\nscopes: [\"openid\", \"profile\", \"email\", \"groups\"]\nsession:\n## The token must be a random string which is used to sign the JWT token, which is generated when a user is\n## authenticated.\n##\ntoken: changeme\n## The interval defines the lifetime of the generated token. When the token is expired the user must authenticate\n## again.\n##\nduration: 168h\n\n## A list of plugins, which should be added to the hub. The hub plugins can be used to register plugins which are not\n## bound to a specific cluster, e.g. the Helm or Flux plugin.\n##\nplugins: []\n# - name: helm\n#   type: helm\n# - name: flux\n#   type: flux\n# - name: rss\n#   type: rss\n\n## A list of clusters, which can be accessed via the hub. To access a cluster the address of the cluster is required.\n## The cluster API is protected by a token, which is also required.\n##\nclusters:\n# - name: mycluster\n#   address: http://mycluster.kobs.io\n#   token: changeme\n</code></pre> <p>You can also use environment variables within the configuration file. To use an environment variable you can place the following placeholder in the config file: <code>${NAME_OF_THE_ENVIRONMENT_VARIABLE}</code>. When kobs reads the file the placeholder will be replaced, with the value of the environment variable. This allows you to provide confidential data via an environment variable, instead of putting them into the file.</p>"},{"location":"getting-started/configuration/watcher/","title":"watcher","text":"<p>The watcher can be configured using a configuration file in yaml format, command-line arguments and environment variables.</p>"},{"location":"getting-started/configuration/watcher/#command-line-arguments-and-environment-variables","title":"Command-line Arguments and Environment Variables","text":"<p>The following command-line arguments and environment variables are available.</p> Command-line Argument Environment Variable Description Default <code>--config</code> <code>KOBS_CONFIG</code> The path to the configuration file for the watcher <code>config.yaml</code> <code>--watcher.debug.enabled</code> <code>KOBS_WATCHER_DEBUG_ENABLED</code> Start the debug server. <code>false</code> <code>--watcher.debug.address</code> <code>KOBS_WATCHER_DEBUG_ADDRESS</code> The address where the debug server should listen on. <code>:15225</code> <code>--watcher.log.format</code> <code>KOBS_WATCHER_LOG_FORMAT</code> Set the output format of the logs. Must be <code>console</code> or <code>json</code>. <code>console</code> <code>--watcher.log.level</code> <code>KOBS_WATCHER_LOG_LEVEL</code> Set the log level. Must be <code>debug</code>, <code>info</code>, <code>warn</code>, <code>error</code>, <code>fatal</code> or <code>panic</code>. <code>info</code> <code>--watcher.tracer.enabled</code> <code>KOBS_WATCHER_TRACER_ENABLED</code> Enable tracing. <code>false</code> <code>--watcher.tracer.service</code> <code>KOBS_WATCHER_TRACER_SERVICE</code> The name of the service which should be used for tracing. <code>kobs</code> <code>--watcher.tracer.provider</code> <code>KOBS_WATCHER_TRACER_PROVIDER</code> The tracing provider which should be used. Must be <code>jaeger</code> or <code>zipkin</code>. <code>jaeger</code> <code>--watcher.tracer.address</code> <code>KOBS_WATCHER_TRACER_ADDRESS</code> The address of the tracing provider instance. <code>http://localhost:14268/api/traces</code> <code>--watcher.metrics.address</code> <code>KOBS_WATCHER_METRICS_ADDRESS</code> Set the address where the metrics server is listen on. <code>:15222</code> <code>--watcher.database.uri</code> <code>KOBS_WATCHER_DATABASE_URI</code> The connection uri for MongoDB <code>mongodb://localhost:27017</code> <code>--watcher.watcher.interval</code> <code>KOBS_WATCHER_WATCHER_INTERVAL</code> Set the interval to sync all resources from the clusters to the hub. <code>300s</code> <code>--watcher.watcher.workers</code> <code>KOBS_WATCHER_WATCHER_WORKERS</code> The number of workers (goroutines) to spawn for the sync process. <code>10</code>"},{"location":"getting-started/configuration/watcher/#configuration-file","title":"Configuration File","text":"<p>The watcher can also be configured via configuration file. By default kobs will look for a <code>config.yaml</code> file in the directory of the kobs binary. To set a custom location of the configuration file your can use the <code>--config</code> command-line flag or the <code>KOBS_CONFIG</code> environment variable.</p> <pre><code>watcher:\n## Set the log format and level for the watcher.\n##\nlog:\nformat: json\nlevel: info\n\n## Set the tracing configuration for the watcher.\n##\ntracer:\nenabled: false\nservice: watcher\nprovider: jaeger\naddress: http://localhost:14268/api/traces\n\n## A list of clusters, which can be synced via the watcher. To sync a cluster the address of the cluster is required.\n## The cluster API is protected by a token, which is also required.\n##\nclusters:\n# - name: mycluster\n#   address: http://mycluster.kobs.io\n#   token: changeme\n</code></pre> <p>You can also use environment variables within the configuration file. To use an environment variable you can place the following placeholder in the config file: <code>${NAME_OF_THE_ENVIRONMENT_VARIABLE}</code>. When kobs reads the file the placeholder will be replaced, with the value of the environment variable. This allows you to provide confidential data via an environment variable, instead of putting them into the file.</p>"},{"location":"getting-started/installation/helm/","title":"Helm","text":"<p>Helm is the package manager for Kubernetes, and you can read detailed background information in the CNCF Helm Project Journey report.</p>"},{"location":"getting-started/installation/helm/#install-the-helm-charts","title":"Install the Helm Charts","text":"<p>To install kobs using Helm you have to add our Helm repository:</p> <pre><code>helm repo add kobs https://helm.kobs.io\nhelm repo list\n</code></pre> <p>When you have added the Helm repository, you can install the kobs cluster, hub and watcher via the following commands:</p> <pre><code>helm install kobs kobs/kobs\n</code></pre>"},{"location":"getting-started/installation/helm/#update-the-helm-charts","title":"Update the Helm Charts","text":"<p>To update the Helm repository and to show all available versions of the Helm chart, you can run the following commands:</p> <pre><code>helm repo update\nhelm search repo -l kobs/\n</code></pre> <p>To update your deployed Helm chart run:</p> <pre><code>helm upgrade --install kobs kobs/kobs\n</code></pre>"},{"location":"getting-started/installation/helm/#values","title":"Values","text":"Value Description Default <code>nameOverride</code> Expand the name of the chart. <code>\"\"</code> <code>fullnameOverride</code> Override the name of the app. <code>\"\"</code> <code>global.imagePullSecrets</code> Specify a list of image pull secrets, to avoid the DockerHub rate limit or to pull the kobs/enovy image from a private registry. <code>[]</code> <code>global.image.repository</code> The repository for the Docker image. <code>kobsio/kobs</code> <code>global.image.tag</code> The tag of the Docker image which should be used. <code>\"\"</code> <code>global.image.pullPolicy</code> The image pull policy for the Docker image. <code>IfNotPresent</code> <code>config.hub</code> The configuration file for the hub <code>config.watcher</code> The configuration file for the watcher <code>config.cluster</code> The configuration file for the cluster <code>hub.enabled</code> Enable the hub deployment. <code>true</code> <code>hub.replicas</code> Number of replicas for the kobs Deployment. <code>1</code> <code>hub.podSecurityContext</code> Specify security settings for the created Pods. To set the security settings for the kobs or envoy Container use the corresponding <code>securityContext</code> field. <code>{}</code> <code>hub.securityContext</code> Specify security settings for the kobs Container. They override settings made at the Pod level via the <code>podSecurityContext</code> when there is overlap. <code>{}</code> <code>hub.resources</code> Set cpu and memory requests and limits for the kobs container. <code>{}</code> <code>hub.nodeSelector</code> Specify a map of key-value pairs, to assign the Pods to a specific set of nodes. <code>{}</code> <code>hub.tolerations</code> Specify the tolerations for the kobs Pods. <code>[]</code> <code>hub.affinity</code> Specify a node affinity or inter-pod affinity / anti-affinity for an advanced scheduling of the kobs Pods. <code>{}</code> <code>hub.topologySpreadConstraints</code> Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in. <code>[]</code> <code>hub.volumes</code> Specify additional volumes for the kobs deployment. <code>[]</code> <code>hub.volumeMounts</code> Specify additional volumeMounts for the kobs container. <code>[]</code> <code>hub.env</code> Set additional environment variables for the kobs container. <code>[]</code> <code>hub.envFrom</code> Set additional environment variables for the kobs container from a Secret or ConfigMap. <code>[]</code> <code>hub.podAnnotations</code> Specify additional annotations for the created Pods. <code>{}</code> <code>hub.podLabels</code> Specify additional labels for the created Pods. <code>{}</code> <code>hub.service.type</code> Set the type for the created Service: <code>ClusterIP</code>, <code>NodePort</code>, <code>LoadBalancer</code>. <code>ClusterIP</code> <code>hub.service.annotations</code> Specify additional annotations for the created Service. <code>{}</code> <code>hub.service.labels</code> Specify additional labels for the created Service. <code>{}</code> <code>hub.podDisruptionBudget</code> Specifies if PodDisruptionBudget should be enabled. <code>{}</code> <code>hub.networkPolicy.enabled</code> Enable the creation of a NetworkPolicy for kobs. <code>false</code> <code>hub.networkPolicy.ingressRules</code> Ingress rules to allow / deny traffic from. <code>[{}]</code> <code>hub.networkPolicy.egressRules</code> Egress rules to allow / deny traffic to. <code>[{}]</code> <code>hub.ingress.enabled</code> Create an Ingress to expose kobs. <code>false</code> <code>hub.ingress.annotations</code> Annotations to add to the ingress. <code>{}</code> <code>hub.ingress.hosts</code> Hosts to use for the ingress. <code>[]</code> <code>hub.ingress.tls</code> TLS configuration for the ingress. <code>[]</code> <code>hub.istio.virtualService.enabled</code> Specifies whether a VirtualService should be created. <code>false</code> <code>hub.istio.virtualService.gateways</code> A list of gateways for the VirtualService. <code>[]</code> <code>hub.istio.virtualService.hosts</code> A list of hosts for the VirtualService. <code>[]</code> <code>hub.istio.virtualService.timeout</code> Timeout for API requests. <code>300s</code> <code>hub.istio.virtualService.additionalRoutes</code> A list of additional routes for the VirtualService. <code>[]</code> <code>hub.serviceMonitor.enabled</code> Create a Service Monitor for kobs. <code>false</code> <code>hub.serviceMonitor.interval</code> Interval at which metrics should be scraped. Fallback to the Prometheus default unless specified. <code>hub.serviceMonitor.scrapeTimeout</code> Timeout after which the scrape is ended. Fallback to the Prometheus default unless specified. <code>hub.serviceMonitor.labels</code> Additional labels for the the Service Monitor. <code>{}</code> <code>hub.serviceMonitor.honorLabels</code> Chooses the metric's labels on collisions with target labels. <code>false</code> <code>hub.serviceMonitor.metricRelabelings</code> Metric relabel config. <code>[]</code> <code>hub.serviceMonitor.relabelings</code> Relabel config. <code>[]</code> <code>watcher.enabled</code> Enable the watcher deployment. <code>true</code> <code>watcher.replicas</code> Number of replicas for the kobs Deployment. <code>1</code> <code>watcher.podSecurityContext</code> Specify security settings for the created Pods. To set the security settings for the kobs or envoy Container use the corresponding <code>securityContext</code> field. <code>{}</code> <code>watcher.securityContext</code> Specify security settings for the kobs Container. They override settings made at the Pod level via the <code>podSecurityContext</code> when there is overlap. <code>{}</code> <code>watcher.resources</code> Set cpu and memory requests and limits for the kobs container. <code>{}</code> <code>watcher.nodeSelector</code> Specify a map of key-value pairs, to assign the Pods to a specific set of nodes. <code>{}</code> <code>watcher.tolerations</code> Specify the tolerations for the kobs Pods. <code>[]</code> <code>watcher.affinity</code> Specify a node affinity or inter-pod affinity / anti-affinity for an advanced scheduling of the kobs Pods. <code>{}</code> <code>watcher.topologySpreadConstraints</code> Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in. <code>[]</code> <code>watcher.volumes</code> Specify additional volumes for the kobs deployment. <code>[]</code> <code>watcher.volumeMounts</code> Specify additional volumeMounts for the kobs container. <code>[]</code> <code>watcher.env</code> Set additional environment variables for the kobs container. <code>[]</code> <code>watcher.envFrom</code> Set additional environment variables for the kobs container from a Secret or ConfigMap. <code>[]</code> <code>watcher.podAnnotations</code> Specify additional annotations for the created Pods. <code>{}</code> <code>watcher.podLabels</code> Specify additional labels for the created Pods. <code>{}</code> <code>watcher.service.type</code> Set the type for the created Service: <code>ClusterIP</code>, <code>NodePort</code>, <code>LoadBalancer</code>. <code>ClusterIP</code> <code>watcher.service.annotations</code> Specify additional annotations for the created Service. <code>{}</code> <code>watcher.service.labels</code> Specify additional labels for the created Service. <code>{}</code> <code>watcher.serviceMonitor.enabled</code> Create a Service Monitor for kobs. <code>false</code> <code>watcher.serviceMonitor.interval</code> Interval at which metrics should be scraped. Fallback to the Prometheus default unless specified. <code>watcher.serviceMonitor.scrapeTimeout</code> Timeout after which the scrape is ended. Fallback to the Prometheus default unless specified. <code>watcher.serviceMonitor.labels</code> Additional labels for the the Service Monitor. <code>{}</code> <code>watcher.serviceMonitor.honorLabels</code> Chooses the metric's labels on collisions with target labels. <code>false</code> <code>watcher.serviceMonitor.metricRelabelings</code> Metric relabel config. <code>[]</code> <code>watcher.serviceMonitor.relabelings</code> Relabel config. <code>[]</code> <code>cluster.enabled</code> Enable the cluster deployment. <code>true</code> <code>cluster.replicas</code> Number of replicas for the kobs Deployment. <code>1</code> <code>cluster.podSecurityContext</code> Specify security settings for the created Pods. To set the security settings for the kobs or envoy Container use the corresponding <code>securityContext</code> field. <code>{}</code> <code>cluster.securityContext</code> Specify security settings for the kobs Container. They override settings made at the Pod level via the <code>podSecurityContext</code> when there is overlap. <code>{}</code> <code>cluster.resources</code> Set cpu and memory requests and limits for the kobs container. <code>{}</code> <code>cluster.nodeSelector</code> Specify a map of key-value pairs, to assign the Pods to a specific set of nodes. <code>{}</code> <code>cluster.tolerations</code> Specify the tolerations for the kobs Pods. <code>[]</code> <code>cluster.affinity</code> Specify a node affinity or inter-pod affinity / anti-affinity for an advanced scheduling of the kobs Pods. <code>{}</code> <code>cluster.topologySpreadConstraints</code> Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in. <code>[]</code> <code>cluster.volumes</code> Specify additional volumes for the kobs deployment. <code>[]</code> <code>cluster.volumeMounts</code> Specify additional volumeMounts for the kobs container. <code>[]</code> <code>cluster.env</code> Set additional environment variables for the kobs container. <code>[]</code> <code>cluster.envFrom</code> Set additional environment variables for the kobs container from a Secret or ConfigMap. <code>[]</code> <code>cluster.podAnnotations</code> Specify additional annotations for the created Pods. <code>{}</code> <code>cluster.podLabels</code> Specify additional labels for the created Pods. <code>{}</code> <code>cluster.service.type</code> Set the type for the created Service: <code>ClusterIP</code>, <code>NodePort</code>, <code>LoadBalancer</code>. <code>ClusterIP</code> <code>cluster.service.annotations</code> Specify additional annotations for the created Service. <code>{}</code> <code>cluster.service.labels</code> Specify additional labels for the created Service. <code>{}</code> <code>cluster.serviceAccount.enabled</code> Specifies whether a service account should be created. <code>true</code> <code>cluster.serviceAccount.annotations</code> Annotations to add to the service account. <code>{}</code> <code>cluster.serviceAccount.name</code> The name of the service account to use. If not set and create is true, a name is generated using the fullname template <code>\"\"</code> <code>cluster.rbac.enabled</code> Specifies whether a cluster role and cluster role binding should be created. <code>true</code> <code>cluster.rbac.name</code> The name of the cluster role and cluster role binding to use. If not set and create is true, a name is generated using the fullname template. <code>\"\"</code> <code>cluster.podDisruptionBudget</code> Specifies if PodDisruptionBudget should be enabled. <code>{}</code> <code>cluster.networkPolicy.enabled</code> Enable the creation of a NetworkPolicy for kobs. <code>false</code> <code>cluster.networkPolicy.ingressRules</code> Ingress rules to allow / deny traffic from. <code>[{}]</code> <code>cluster.networkPolicy.egressRules</code> Egress rules to allow / deny traffic to. <code>[{}]</code> <code>cluster.ingress.enabled</code> Create an Ingress to expose kobs. <code>false</code> <code>cluster.ingress.annotations</code> Annotations to add to the ingress. <code>{}</code> <code>cluster.ingress.hosts</code> Hosts to use for the ingress. <code>[]</code> <code>cluster.ingress.tls</code> TLS configuration for the ingress. <code>[]</code> <code>cluster.istio.virtualService.enabled</code> Specifies whether a VirtualService should be created. <code>false</code> <code>cluster.istio.virtualService.gateways</code> A list of gateways for the VirtualService. <code>[]</code> <code>cluster.istio.virtualService.hosts</code> A list of hosts for the VirtualService. <code>[]</code> <code>cluster.istio.virtualService.timeout</code> Timeout for API requests. <code>300s</code> <code>cluster.istio.virtualService.additionalRoutes</code> A list of additional routes for the VirtualService. <code>[]</code> <code>cluster.serviceMonitor.enabled</code> Create a Service Monitor for kobs. <code>false</code> <code>cluster.serviceMonitor.interval</code> Interval at which metrics should be scraped. Fallback to the Prometheus default unless specified. <code>cluster.serviceMonitor.scrapeTimeout</code> Timeout after which the scrape is ended. Fallback to the Prometheus default unless specified. <code>cluster.serviceMonitor.labels</code> Additional labels for the the Service Monitor. <code>{}</code> <code>cluster.serviceMonitor.honorLabels</code> Chooses the metric's labels on collisions with target labels. <code>false</code> <code>cluster.serviceMonitor.metricRelabelings</code> Metric relabel config. <code>[]</code> <code>cluster.serviceMonitor.relabelings</code> Relabel config. <code>[]</code>"},{"location":"getting-started/installation/kustomize/","title":"Kustomize","text":"<p>Kustomize introduces a template-free way to customize application configuration that simplifies the use of off-the-shelf applications.</p> <p>To install kobs using Kustomize your can run the following command:</p> <pre><code>kubectl create namespace kobs\nkustomize build github.com/kobsio/kobs/deploy/kustomize | kubectl apply -f -\n</code></pre> <p>You can also use the following commands to install all the required components separately:</p> <pre><code>kustomize build github.com/kobsio/kobs/deploy/kustomize/crds | kubectl apply -f -\nkustomize build github.com/kobsio/kobs/deploy/kustomize/cluster | kubectl apply -f -\nkustomize build github.com/kobsio/kobs/deploy/kustomize/hub | kubectl apply -f -\nkustomize build github.com/kobsio/kobs/deploy/kustomize/watcher | kubectl apply -f -\n</code></pre>"},{"location":"plugins/","title":"Getting Started","text":"<p>Plugins can be used to extend the functionality of kobs. For example you can use Prometheus to display metrics, Elasticsearch to display logs or Jaeger to display traces for your application within kobs.</p> <p>All the configured plugins can be found on the home page of kobs. From this page you can use the configured plugins directly.</p> <p></p>"},{"location":"plugins/#specification","title":"Specification","text":"<p>Plugins can also be used as preview for an application or within a dashboard panel:</p> Field Type Description Required cluster string The name of the cluster on which the plugin is configured. This field can be omitted, when the same cluster should be used as for the applicatiom, user, team or dashboard where the plugin is used. No name string The name of the plugin as it is defined in the configuration file for the hub or cluster. Or one of the special values <code>applications</code>, <code>applicationgroups</code>, <code>applicationinsights</code> <code>topology</code>, <code>teams</code>, <code>dashboards</code> or <code>resources</code> for plugins where the type is <code>core</code>. Yes type string The type of the plugin as it is defined in the configuration file for the hub or cluster or <code>core</code> for the built-in plugins. Yes options any Plugin specific options as they are defined at the plugins page (e.g. PromQL query). Yes"},{"location":"plugins/#built-in-plugins","title":"Built-in Plugins","text":"<p>The following built-in plugins can be used when the type of the plugin is set to <code>core</code>.</p>"},{"location":"plugins/#applications","title":"<code>applications</code>","text":"<p>The <code>applications</code> plugin can be used to display a list of applications for a team. The plugin requires the following options:</p> Field Type Description Required team string The name of the team for which the applications should be shown. This must match a value of a teams <code>id</code> property. If the value is not provided the teams of the current user are used. No <pre><code>plugin:\nname: applications\ntype: core\noptions:\nteam: dia@kobs.io\n</code></pre>"},{"location":"plugins/#applicationgroups","title":"<code>applicationgroups</code>","text":"<p>The <code>applicationgroups</code> plugin can be used to display a list of applications for a team grouped by their cluster, namespace and name values. The plugin requires the following options:</p> Field Type Description Required groups []string A list of groups by which the applications should be grouped. The following values can be used <code>cluster</code>, <code>namespace</code> or <code>name</code>. Yes team string The name of the team for which the applications should be shown. This must match a value of a teams <code>id</code> property. If the value is not provided the teams of the current user are used. No <pre><code>plugin:\nname: applicationgroups\ntype: core\noptions:\ngroups:\n- namespace\n- name\n</code></pre>"},{"location":"plugins/#applicationinsights","title":"<code>applicationinsights</code>","text":"<p>The <code>applicationinsights</code> plugin can be used to display the insights of an application within a dashboard. The plugin requires the following options:</p> Field Type Description Required cluster string The cluster of the application. Yes namespace string The namespace of the application. Yes name string The name of the application. Yes direction string The direction in which the insight panels should be displayed. Must be <code>column</code> or <code>row</code>. The default value is <code>column</code>. No <pre><code>plugin:\nname: applicationinsights\ntype: core\noptions:\ncluster: \"&lt;% $.cluster %&gt;\"\nnamespace: \"&lt;% $.namespace %&gt;\"\nname: \"&lt;% $.name %&gt;\"\ndirection: row\n</code></pre>"},{"location":"plugins/#topology","title":"<code>topology</code>","text":"<p>The <code>topology</code> plugin can be used to display the topology graph of an application within a dashboard. The plugin requires the following options:</p> Field Type Description Required cluster string The cluster of the application. Yes namespace string The namespace of the application. Yes name string The name of the application Yes <pre><code>plugin:\nname: topology\ntype: core\noptions:\ncluster: \"&lt;% $.cluster %&gt;\"\nnamespace: \"&lt;% $.namespace %&gt;\"\nname: \"&lt;% $.name %&gt;\"\n</code></pre>"},{"location":"plugins/#teams","title":"<code>teams</code>","text":"<p>The <code>teams</code> plugin can be used to display a list of teams for the currently authenticated user.</p> <pre><code>plugin:\nname: teams\ntype: core\n</code></pre>"},{"location":"plugins/#dashboards","title":"<code>dashboards</code>","text":"<p>The <code>dashboards</code> plugin can be used to display a list of links to dashboards within a dashboard. Each link can contain multiple dashboards.</p> Field Type Description Required title string The title of the page for the dashboards. Yes description string The description of the page for the dashboards. Yes dashboards []Dashboard A list of dashboards which will be shown on the linked page. Yes <pre><code>plugin:\nname: dashboards\ntype: core\noptions:\n- title: My Dashboards Page\ndescription: My Dashboards Page Description\ndashboards:\n- title: Dashboard 1\ncluster: cluster1\nnamespace: namespace1\nname: name1\n- title: Dashboard 2\ncluster: cluster2\nnamespace: namespace2\nname: name2\n</code></pre>"},{"location":"plugins/#resources","title":"<code>resources</code>","text":"<p>The <code>resources</code> plugin can be used to display Kubernetes resources within a dashboard. The plugin can be used in the notifications or in a panel within a dashboard.</p>"},{"location":"plugins/#panel-options","title":"Panel Options","text":"Field Type Description Required clusters []string A list of clusters for which the resources should be shown. Yes namespaces []string A list of namespaces for which the resources should be shown. Yes resources []string A list of resources for which the resources should be shown. The following strings can be used as resource: <code>cronjobs</code>, <code>daemonsets</code>, <code>deployments</code>, <code>jobs</code>, <code>pods</code>, <code>replicasets</code>, <code>statefulsets</code>, <code>endpoints</code>, <code>horizontalpodautoscalers</code>, <code>ingresses</code>, <code>networkpolicies</code>, <code>services</code>, <code>configmaps</code>, <code>persistentvolumeclaims</code>, <code>persistentvolumes</code>, <code>poddisruptionbudgets</code>, <code>secrets</code>, <code>serviceaccounts</code>, <code>storageclasses</code>, <code>clusterrolebindings</code>, <code>clusterroles</code>, <code>rolebindings</code>, <code>roles</code>, <code>events</code>, <code>nodes</code>. A Custom Resource can be used as follows <code>&lt;name&gt;.&lt;group&gt;</code> (e.g. <code>vaultsecrets.ricoberger.de</code>). Yes paramName string The name of the parameter which should be used for filtering the resources. Must be <code>labelSelector</code> or <code>fieldSelector</code>. No param string The parameter which is used to filter the resources. No columns []Column An optional list of columns to customize the shown fields for a resource. No filter string An optional filter using JSONPath to filter the list of resources. No"},{"location":"plugins/#column","title":"Column","text":"Field Type Description Required title string A title for the column. Yes resource string The name of the resource for which the column should be used. Yes jsonPath string The JSONPath which should be used to select the value from the resource manifest file. Yes type string An optional type for formatting the column values. Currently only <code>date</code> is supported as special formatter. No"},{"location":"plugins/#examples","title":"Examples","text":"<pre><code>plugin:\nname: resources\ntype: core\noptions:\nclusters:\n- kobs\nnamespaces:\n- bookinfo\nresources:\n- pods\n- deployments\n- services\nparamName: labelSelector\nparam: app=productpage\n</code></pre> <p>Note</p> <p>If you want to display Kubernetes resources from the same cluster / namespace as it is used in an application / user / team / dashboard you can use the following JSONPath to set the values: <code>&lt;% $.cluster %&gt;</code>, <code>&lt;% $.namespace %&gt;</code> and <code>&lt;% $.name %&gt;</code>. For example the following configuration would display all pods and deployments with from the same satellite, cluster and namespace where the application lives.</p> <pre><code>plugin:\nname: resources\ntype: core\noptions:\nclusters:\n- \"&lt;% $.cluster %&gt;\"\nnamespaces:\n- \"&lt;% $.namespace %&gt;\"\nresources:\n- pods\n- deployments\nparamName: labelSelector\nparam: app.kubernetes.io/name=\"&lt;% $.name %&gt;\"\n</code></pre> Example 1 with Custom Columns <pre><code>plugin:\nname: resources\ntype: core\noptions:\nclusters:\n- \"&lt;% $.cluster %&gt;\"\nnamespaces:\n- bookinfo\nresources:\n- pods\n- deployments\nparamName: labelSelector\nparam: app=reviews\ncolumns:\n- title: Image\nresource: pods\njsonPath: \"$.spec.containers[?(@.name==='bookinfo')].image\"\n- title: Creation Time\nresource: pods\njsonPath: \"$.metadata.creationTimestamp\"\ntype: date\n- title: Image\nresource: deployments\njsonPath: \"$.spec.template.spec.containers[*].image\"\n</code></pre> Example 2 with Custom Columns <pre><code>plugin:\nname: resources\ntype: core\noptions:\nclusters:\n- \"&lt;% $.cluster %&gt;\"\nnamespaces:\n- bookinfo\nresources:\n- vaultsecrets.ricoberger.de/v1alpha1\ncolumns:\n- title: Status\nresource: vaultsecrets.ricoberger.de/v1alpha1\njsonPath: \"$.status.conditions[*].status\"\n- title: Reason\nresource: vaultsecrets.ricoberger.de/v1alpha1\njsonPath: \"$.status.conditions[*].reason\"\n- title: Type\nresource: vaultsecrets.ricoberger.de/v1alpha1\njsonPath: \"$.status.conditions[*].type\"\n- title: Message\nresource: vaultsecrets.ricoberger.de/v1alpha1\njsonPath: \"$.status.conditions[*].message\"\n- title: Last Transition Time\nresource: vaultsecrets.ricoberger.de/v1alpha1\njsonPath: \"$.status.conditions[*].lastTransitionTime\"\ntype: date\n</code></pre>"},{"location":"plugins/#static","title":"<code>static</code>","text":"<p>The <code>static</code> plugin can be used within the variables section of a dashboard, to define a static list of variable values. The options for this plugin is a list of strings with the possible values for the variable:</p> <pre><code>variables:\n- name: var_reporter\nlabel: Reporter\nplugin:\nname: static\ntype: core\noptions:\n- destination\n- source\n</code></pre>"},{"location":"plugins/azure/","title":"Azure","text":"<p>The Azure plugin can be used to view your Azure resources like Container Instances within kobs.</p> <p></p>"},{"location":"plugins/azure/#configuration","title":"Configuration","text":"<p>The Azure plugin can only be used within the <code>hub</code>. To use the Azure plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Azure plugin instance. Yes type <code>azure</code> The type for the Azure plugin. Yes options.credentials.subscriptionID string The id of your Azure subscription. Yes options.credentials.tenantID string The tenant id. Yes options.credentials.clientID string The client id. Yes options.credentials.clientSecret string The client secret. Yes <pre><code>plugins:\n- name: azure\ntype: azure\noptions:\ncredentials:\nsubscriptionID:\ntenantID:\nclientID:\nclientSecret:\n</code></pre>"},{"location":"plugins/azure/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Azure plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/azure/#variable-options","title":"Variable Options","text":"Field Type Description Required type string The type of the variable, this could be <code>Resource Groups</code>, <code>Kubernetes Services</code>, <code>Virtual Machine Scale Sets</code> or <code>Virtual Machine Scale Sets - Virtual Machines</code>. Yes resourceGroup string The name of the resource group for which the resources should be retrieved. No virtualMachineScaleSet string The name of the Virtual Machine Scale Set, when the type is <code>Virtual Machine Scale Sets - Virtual Machines</code>. No"},{"location":"plugins/azure/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Azure plugin:</p> Field Type Description Required service string The service which should be used within the panel. This must be <code>Cost Management</code> or <code>Metrics</code>. Yes resourceGroup string The name of the resource group for which the resources should be retrieved. No provider string The metrics provider when the selected service is <code>Metrics</code>. No metric string The name of the metric which should be shown in a panel when the selected service is <code>Metrics</code>. No aggregationType string The aggregation type of the metric. This could be <code>None</code>, <code>Average</code>, <code>Count</code>, <code>Minimum</code>, <code>Maximum</code> or <code>Total</code>. No"},{"location":"plugins/azure/#usage","title":"Usage","text":"<p>kobs supports all Azure metrics in the dashboard panels. To get a metric the provider, metric name and aggregation type must be provided. To get a list of all metrics the Azure Cli can be used, e.g.:</p> <ul> <li>Container Instances: <code>az monitor metrics list-definitions --resource /subscriptions/&lt;SUBSCRIPTION&gt;/resourceGroups/&lt;RESOURCE-GROUP&gt;/providers/Microsoft.ContainerInstance/containerGroups/&lt;CONTAINER-GROUP&gt;</code></li> <li>Kubernetes Services: <code>az monitor metrics list-definitions --resource /subscriptions/&lt;SUBSCRIPTION&gt;/resourceGroups/&lt;RESOURCE-GROUP&gt;/providers/Microsoft.ContainerService/managedClusters/&lt;MANAGED-CLUSTER&gt;</code></li> <li>Virtual Machine Scale Sets: <code>az monitor metrics list-definitions --resource /subscriptions/&lt;SUBSCRIPTION&gt;/resourceGroups/&lt;RESOURCE-GROUP&gt;/providers/Microsoft.Compute/virtualMachineScaleSets/&lt;VIRTUAL-MACHINE-SCALE-SET&gt;</code></li> <li>Virtual Machine Scale Sets (Virtual Machine): <code>az monitor metrics list-definitions --resource /subscriptions/&lt;SUBSCRIPTION&gt;/resourceGroups/&lt;RESOURCE-GROUP&gt;/providers/Microsoft.Compute/virtualMachineScaleSets/&lt;VIRTUAL-MACHINE-SCALE-SET&gt;/virtualMachines/&lt;VIRTUAL-MACHINE&gt;</code></li> </ul> Example 1 <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Azure\ninline:\nvariables:\n- name: var_resource_group\nlabel: Resource Group\nincludeAllOption: false\nplugin:\nname: azure\ntype: azure\ncluster: hub\noptions:\ntype: Resource Groups\n- name: var_vmss\nlabel: Virtual Machine Scale Set\nincludeAllOption: false\nplugin:\nname: azure\ntype: azure\ncluster: hub\noptions:\ntype: Virtual Machine Scale Sets\nresourceGroup: '{% .var_resource_group %}'\n- name: var_vm\nlabel: Virtual Machine\nincludeAllOption: false\nplugin:\nname: azure\ntype: azure\ncluster: hub\noptions:\ntype: Virtual Machine Scale Sets - Virtual Machines\nresourceGroup: '{% .var_resource_group %}'\nvirtualMachineScaleSet: '{% .var_vmss %}'\nrows:\n- autoHeight: true\npanels:\n- title: CPU Usage\nplugin:\nname: azure\ntype: azure\ncluster: hub\noptions:\nservice: Metrics\nresourceGroup: '{% .var_resource_group %}'\nprovider: &gt;-\nMicrosoft.Compute/virtualMachineScaleSets/{% .var_vmss\n%}/virtualMachines/{% .var_vm %}\nmetric: Percentage CPU\naggregationType: Average\nh: 6\nw: 6\nx: 0\n'y': 0\n- title: Available Memory\nplugin:\nname: azure\ntype: azure\ncluster: hub\noptions:\nservice: Metrics\nresourceGroup: '{% .var_resource_group %}'\nprovider: &gt;-\nMicrosoft.Compute/virtualMachineScaleSets/{% .var_vmss\n%}/virtualMachines/{% .var_vm %}\nmetric: Available Memory Bytes\naggregationType: Average\nh: 6\nw: 6\nx: 6\n'y': 0\n</code></pre> <p></p>"},{"location":"plugins/datadog/","title":"Datadog","text":"<p>The Datadog plugin can be used to access your logs and metrics from Datadog.</p> <p></p> <p></p>"},{"location":"plugins/datadog/#configuration","title":"Configuration","text":"<p>The Datadog plugin can only be used within the <code>hub</code>. To use the Datadog plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Datadog plugin instance. Yes type <code>datadog</code> The type for the Datadog plugin. Yes options.address string The address of the Datadog instance (e.g. <code>datadoghq.com</code> or <code>datadoghq.eu</code>). Yes options.apiKey string The API Key for your Datadog instance. Yes options.appKey string The App Key for your Datadog instance. Yes <pre><code>plugins:\n- name: datadog\ntype: datadog\noptions:\naddress:\napiKey:\nappKey:\n</code></pre>"},{"location":"plugins/datadog/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Datadog plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/datadog/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Datadog plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/datadog/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Datadog plugin:</p> Field Type Description Required type string The panel type. This could be <code>logs</code> or <code>metrics</code>. Yes showChart boolean If this is <code>true</code> the chart with the distribution of the log lines in the selected time range will be shown. No queries []Query A list of queries, which can be selected by the user. This is only required for type <code>logs</code>. Yes query string The Datadog query which is used to get the metrics, e.g. <code>sum:aws.apigateway.4xxerror{*} by {apiname}.as_count()</code>. This is only required for type <code>metrics</code>. Yes"},{"location":"plugins/datadog/#query","title":"Query","text":"Field Type Description Required name string A name for the Datadog query. Yes query string The query which should be run against Datadog. Yes fields []string A list of fields to display in the results table. If this field is omitted, the whole document is displayed in the results table. No"},{"location":"plugins/elasticsearch/","title":"Elasticsearch","text":"<p>The Elasticsearch plugin can be used to retrieve logs from a configured Elasticsearch instance. You can specify a query, which is used to retireve all documents from Elasticsearch. You can also select a list of fields, to display the results in a table. From this table you can also select a single document to view the complete json representation of this document.</p> <p></p> <p></p>"},{"location":"plugins/elasticsearch/#configuration","title":"Configuration","text":"<p>The Elasticsearch plugin can be used within the <code>hub</code> or <code>cluster</code>. To use the Elasticsearch plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Elasticsearch plugin instance. Yes type <code>elasticsearch</code> The type for the Elasticsearch plugin. Yes options.address string Address of the Elasticsearch instance. Yes options.username string Username to access an Elasticsearch instance via basic authentication. No options.password string Password to access an Elasticsearch instance via basic authentication. No options.token string Token to access an Elasticsearch instance via token based authentication. No frontendOptions.dataViews.[].name string The name of the data view. A data view is required to access the Elasticsearch data that you want to explore. A data view can point to one or more indices. Yes frontendOptions.dataViews.[].indexPattern string The pattern to match your indicies (e.g. <code>fielbeat-*</code>). Yes frontendOptions.dataViews.[].timestampField string An optional timestamp field. If you are working with logs this field should be provided. If you are working with other data like search data this field must not be provided. No <pre><code>plugins:\n- name: elasticsearch\ntype: elasticsearch\noptions:\naddress:\nusername:\npassword:\ntoken:\nfrontendOptions:\ndataViews:\n- name: filebeat-*\nindexPattern: filebeat-*\ntimestampField: \"@timestamp\"\n</code></pre>"},{"location":"plugins/elasticsearch/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Elasticsearch plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/elasticsearch/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Elasticsearch plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/elasticsearch/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Elasticsearch plugin:</p> Field Type Description Required type string The panel type. This must be <code>logs</code>. Yes showChart boolean If this is <code>true</code> the chart with the distribution of the log lines in the selected time range will be shown. No queries []Query A list of queries, which can be selected by the user. This is only required for type <code>logs</code>. Yes"},{"location":"plugins/elasticsearch/#query","title":"Query","text":"Field Type Description Required name string A name for the Elasticsearch query, which is displayed in the select box. Yes dataView string The name of the data view which should be used for the query. Yes query string The Elasticsearch query. We are using the Query String Syntax for Elasticsearch. Yes fields []string A list of fields to display in the results table. If this field is omitted, the whole document is displayed in the results table. No"},{"location":"plugins/elasticsearch/#usage","title":"Usage","text":""},{"location":"plugins/elasticsearch/#query-string-syntax","title":"Query String Syntax","text":"<p>The Elasticsearch plugins uses the query string syntax for filtering log lines.</p>"},{"location":"plugins/elasticsearch/#field-names","title":"Field Names","text":"<p>You can specify fields to search in the query syntax:</p> <ul> <li>where the <code>status</code> field contains <code>active</code></li> </ul> <pre><code>status:active\n</code></pre> <ul> <li>where the <code>title</code> field contains <code>quick</code> or <code>brown</code></li> </ul> <pre><code>title:(quick OR brown)\n</code></pre> <ul> <li>where the <code>author</code> field contains the exact phrase <code>\"john smith\"</code></li> </ul> <pre><code>author:\"John Smith\"\n</code></pre> <ul> <li>where the <code>first name</code> field contains <code>Alice</code> (note how we need to escape the space with a backslash)</li> </ul> <pre><code>first\\ name:Alice\n</code></pre> <ul> <li>where any of the fields <code>book.title</code>, <code>book.content</code> or <code>book.date</code> contains <code>quick</code> or <code>brown</code> (note how we need to escape the <code>*</code> with a backslash):</li> </ul> <pre><code>book.\\*:(quick OR brown)\n</code></pre> <ul> <li>where the field <code>title</code> has any non-null value:</li> </ul> <pre><code>_exists_:title\n</code></pre>"},{"location":"plugins/elasticsearch/#wildcards","title":"Wildcards","text":"<p>Wildcard searches can be run on individual terms, using <code>?</code> to replace a single character, and <code>*</code> to replace zero or more characters:</p> <pre><code>qu?ck bro*\n</code></pre>"},{"location":"plugins/elasticsearch/#regular-expressions","title":"Regular Expressions","text":"<p>Regular expression patterns can be embedded in the query string by wrapping them in forward-slashes (<code>\"/\"</code>):</p> <pre><code>name:/joh?n(ath[oa]n)/\n</code></pre>"},{"location":"plugins/elasticsearch/#fuzziness","title":"Fuzziness","text":"<p>We can search for terms that are similar to, but not exactly like our search terms, using the \"fuzzy\" operator:</p> <pre><code>quikc~ brwn~ foks~\n</code></pre>"},{"location":"plugins/elasticsearch/#ranges","title":"Ranges","text":"<p>Ranges can be specified for date, numeric or string fields. Inclusive ranges are specified with square brackets <code>[min TO max]</code> and exclusive ranges with curly brackets <code>{min TO max}</code>.</p> <ul> <li>All days in 2012:</li> </ul> <pre><code>date:[2012-01-01 TO 2012-12-31]\n</code></pre> <ul> <li>Numbers 1..5</li> </ul> <pre><code>count:[1 TO 5]\n</code></pre> <ul> <li>Tags between <code>alpha</code> and <code>omega</code>, excluding <code>alpha</code> and <code>omega</code>:</li> </ul> <pre><code>tag:{alpha TO omega}\n</code></pre> <ul> <li>Numbers from 10 upwards</li> </ul> <pre><code>count:[10 TO *]\n</code></pre> <ul> <li>Dates before 2012</li> </ul> <pre><code>date:{* TO 2012-01-01}\n</code></pre>"},{"location":"plugins/elasticsearch/#boolean-operators","title":"Boolean operators","text":"<p>By default, all terms are optional, as long as one term matches.  A search for <code>foo bar baz</code> will find any document that contains one or more of <code>foo</code> or <code>bar</code> or <code>baz</code>.  We have already discussed the <code>default_operator</code> above which allows you to force all terms to be required, but there are also boolean operators which can be used in the query string itself to provide more control.</p> <p>The preferred operators are <code>+</code> (this term must be present) and <code>-</code> (this term must not be present). All other terms are optional. For example, this query:</p> <pre><code>quick brown +fox -news\n</code></pre>"},{"location":"plugins/elasticsearch/#grouping","title":"Grouping","text":"<p>Multiple terms or clauses can be grouped together with parentheses, to form sub-queries:</p> <pre><code>(quick OR brown) AND fox\n</code></pre>"},{"location":"plugins/flux/","title":"Flux","text":"<p>The Flux plugin can be used to retrieve, display and reconcile Flux resources.</p> <p></p>"},{"location":"plugins/flux/#configuration","title":"Configuration","text":"<p>The Flux plugin can only be used within the <code>hub</code>. To use the Flux plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Flux plugin instance. Yes type <code>flux</code> The type for the Flux plugin. Yes <pre><code>plugins:\n- name: flux\ntype: flux\n</code></pre>"},{"location":"plugins/flux/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Flux plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/flux/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Flux plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/flux/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Flux plugin:</p> Field Type Description Required type string The Flux resource which should be displayed. This must be <code>gitrepositories</code>, <code>helmrepositories</code>, <code>buckets</code>, <code>kustomizations</code> or <code>helmreleases</code>. Yes clusters []string The cluster for which the resources should be displayed. Yes namespace []string The namespace for which the resources should be displayed. Yes paramName string The name of the parameter which should be used for filtering the resources. Must be <code>labelSelector</code> or <code>fieldSelector</code>. No param string The parameter which is used to filter the resources. No"},{"location":"plugins/flux/#usage","title":"Usage","text":"<p>For example the following dashboard shows the Kustomization, Helm Release and Helm Repository for the <code>cert-manager</code>:</p> <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Flux\ninline:\nrows:\n- autoHeight: true\npanels:\n- title: Kustomization\nplugin:\nname: flux\ntype: flux\ncluster: hub\noptions:\ntype: kustomizations\nclusters:\n- \"&lt;% $.cluster %&gt;\"\nnamespaces:\n- flux-system\nparamName: fieldSelector\nparam: metadata.name=cert-manager\nh: 6\nw: 12\nx: 0\n'y': 0\n- title: HelmReleases\nplugin:\nname: flux\ntype: flux\ncluster: hub\noptions:\ntype: helmreleases\nclusters:\n- \"&lt;% $.cluster %&gt;\"\nnamespaces:\n- cert-manager\nh: 6\nw: 6\nx: 6\n'y': 6\n- title: HelmRepositories\nplugin:\nname: flux\ntype: flux\ncluster: hub\noptions:\ntype: helmrepositories\nclusters:\n- \"&lt;% $.cluster %&gt;\"\nnamespaces:\n- flux-system\nparamName: fieldSelector\nparam: metadata.name=jetstack\nh: 6\nw: 6\nx: 0\n'y': 6\n</code></pre> <p></p>"},{"location":"plugins/github/","title":"GitHub","text":"<p>The GitHub plugin can be used to access the Pull Requests and Issues for your repositories or your organization.</p> <p></p>"},{"location":"plugins/github/#configuration","title":"Configuration","text":"<p>The GitHub plugin can only be used within the <code>hub</code>. To use the GitHub plugin the following configuration is needed:</p> Field Type Description Required name string The name of the GitHub plugin instance. Yes type <code>github</code> The type for the GitHub plugin. Yes options.organization string The name of your organization on GitHub. Yes options.oauth.clientID string The Client ID of your OAuth App. Yes options.oauth.clientSecret string The Client Secret of your OAuth App. Yes options.oauth.state string A random string used to verify the OAuth Redirects. Yes options.session.token string The token must be a random string which is used to sign the JWT token, which is generated when a user is authenticated. No options.session.duration string The duration defines the lifetime of the generated token. When the token is expired the user must authenticate again. The default value is <code>720h</code> No <pre><code>plugins:\n- name: github\ntype: github\noptions:\norganization:\noauth:\nclientID:\nclientSecret:\nstate:\nsession:\ntoken:\nduration:\n</code></pre>"},{"location":"plugins/github/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The GitHub plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/github/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The GitHub plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/github/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the GitHub plugin:</p> Field Type Description Required type string The type of the panel which should be shown. This could be <code>orgpullrequests</code>, <code>orgrepositories</code>, <code>teammembers</code>, <code>teamrepositories</code>, <code>repositoryissues</code>, <code>repositorypullrequests</code>, <code>repositoryworkflowruns</code>, <code>userpullrequests</code>. Yes team string The name of the GitHub team from your organization. This is required if the type is <code>teammembers</code> or <code>teamrepositories</code>. No repository string The name of the GitHub repository from your organization. This is required if the type is <code>repositoryissues</code>, <code>repositorypullrequests</code> or <code>repositoryworkflowruns</code>. No"},{"location":"plugins/github/#usage","title":"Usage","text":""},{"location":"plugins/github/#setup-an-oauth-app","title":"Setup an OAuth App","text":"<p>To setup an OAuth App on GitHub for kobs go to the settings page of your organization and select OAuth Apps in the Developer settings section. Then click on Register an application. Provide the following information:</p> <ul> <li>Application name: Provide a name for the application, e.g. <code>kobs</code></li> <li>Homepage URL: Provide the homepage url for your kobs instance, e.g. <code>kobs.myorganization.com</code></li> <li>Authorization callback URL: Provide the redirect url for the GitHub plugin instance, e.g. <code>https://kobs.myorganization.com/plugins/hub/github/github/oauth/callback</code></li> </ul> <p>On the next page you can find the Client ID and you can generate a Client Secret for the GitHub plugin. You can also select an icon (e.g. the kobs logo) and a badge background color (e.g. <code>#1b2635</code>).</p>"},{"location":"plugins/github/#examples","title":"Examples","text":""},{"location":"plugins/github/#team-dashboard","title":"Team Dashboard","text":"Manifest <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: GitHub\ninline:\nrows:\n- autoHeight: true\npanels:\n- title: Team Members\nplugin:\nname: github\ntype: github\ncluster: hub\noptions:\ntype: teammembers\nteam: maintainers\nh: 6\nw: 6\nx: 0\n'y': 0\n- title: Team Repositories\nplugin:\nname: github\ntype: github\ncluster: hub\noptions:\ntype: teamrepositories\nteam: maintainers\nh: 6\nw: 6\nx: 6\n'y': 0\n</code></pre>"},{"location":"plugins/github/#repository-dashboard","title":"Repository Dashboard","text":"Manifest <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: GitHub\ninline:\nrows:\n- autoHeight: true\npanels:\n- title: Pull Requests\nplugin:\nname: github\ntype: github\ncluster: hub\noptions:\ntype: repositorypullrequests\nrepository: kobs\nh: 6\nw: 6\nx: 0\n'y': 0\n- title: Workflow Runs\nplugin:\nname: github\ntype: github\ncluster: hub\noptions:\ntype: repositoryworkflowruns\nrepository: kobs\nh: 6\nw: 6\nx: 6\n'y': 0\n</code></pre>"},{"location":"plugins/grafana/","title":"Grafana","text":"<p>The Grafana plugin can be used to search through all your Grafana dashboards and to show a list of dashboards or embed a Grafana panel within a kobs dashboard.</p> <p></p>"},{"location":"plugins/grafana/#configuration","title":"Configuration","text":"<p>The Grafana plugin can be used within the <code>hub</code> or <code>cluster</code>. To use the Grafana plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Grafana plugin instance. Yes type <code>grafana</code> The type for the Grafana plugin. Yes options.address string Address of the Grafana instance. Yes options.username string Username to access an Grafana instance via basic authentication. No options.password string Password to access an Grafana instance via basic authentication. No options.token string Token to access an Grafana instance via token based authentication. No frontendOptions.address string The address of the Grafana instance, which can be accessed by the user. No <pre><code>plugins:\n- name: grafana\ntype: grafana\noptions:\naddress:\nusername:\npassword:\ntoken:\nfrontendOptions:\naddress:\n</code></pre>"},{"location":"plugins/grafana/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Grafana plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/grafana/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Grafana plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/grafana/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Grafana plugin:</p> Field Type Description Required type string The panel type. This could be <code>dashboards</code> or <code>panel</code>. No dashboards []string A list of dashboard ids to show, when the type is <code>dashboards</code>. To pass variables to a dashboard the following can be used: <code>&lt;dashboard-id&gt;?myvar=myvarvalue</code> Yes panel Panel The panel which should be displayed, when the type is <code>panel</code>. Yes"},{"location":"plugins/grafana/#panel","title":"Panel","text":"Field Type Description Required dashboardID string The id of the dashboard. Yes panelID string The id of the panel. Yes variables map A map of variables, with the name of the variable as key and the value of the variable as value. No"},{"location":"plugins/grafana/#usage","title":"Usage","text":"<p>The following dashboards shows some panels from a Grafana plugin and a list of dashboards from this instance. The dashboard also uses some variables, which are then passed to the panels from Grafana.</p> <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Grafana\ninline:\nrows:\n- autoHeight: true\npanels:\n- title: Global Request Volume\nplugin:\nname: grafana\ntype: grafana\noptions:\ntype: panel\npanel:\ndashboardID: G8wLrJIZk\npanelID: '20'\nh: 4\nw: 3\nx: 0\n'y': 0\n- title: Global Success Rate\nplugin:\nname: grafana\ntype: grafana\noptions:\ntype: panel\npanel:\ndashboardID: G8wLrJIZk\npanelID: '21'\nh: 4\nw: 3\nx: 3\n'y': 0\n- title: 4xx\nplugin:\nname: grafana\ntype: grafana\noptions:\ntype: panel\npanel:\ndashboardID: G8wLrJIZk\npanelID: '22'\nh: 4\nw: 3\nx: 6\n'y': 0\n- title: 5xx\nplugin:\nname: grafana\ntype: grafana\noptions:\ntype: panel\npanel:\ndashboardID: G8wLrJIZk\npanelID: '23'\nh: 4\nw: 3\nx: 9\n'y': 0\n\n- autoHeight: true\npanels:\n- title: Incoming Request Volume\nplugin:\nname: grafana\ntype: grafana\noptions:\ntype: panel\npanel:\ndashboardID: UbsSZTDik\npanelID: '12'\nvariables:\nvar-datasource: default\nvar-namespace: backend\nvar-workload: backend\nvar-qrep: destination\nvar-srcns: All\nvar-srcwl: All\nvar-dstsvc: All\nh: 6\nw: 4\nx: 0\n'y': 0\n- title: Incoming Success Rate\nplugin:\nname: grafana\ntype: grafana\noptions:\ntype: panel\npanel:\ndashboardID: UbsSZTDik\npanelID: '14'\nvariables:\nvar-datasource: default\nvar-namespace: backend\nvar-workload: backend\nvar-qrep: destination\nvar-srcns: All\nvar-srcwl: All\nvar-dstsvc: All\nh: 6\nw: 4\nx: 4\n'y': 0\n- title: Request Duration\nplugin:\nname: grafana\ntype: grafana\noptions:\ntype: panel\npanel:\ndashboardID: UbsSZTDik\npanelID: '87'\nvariables:\nvar-datasource: default\nvar-namespace: backend\nvar-workload: backend\nvar-qrep: destination\nvar-srcns: All\nvar-srcwl: All\nvar-dstsvc: All\nh: 6\nw: 4\nx: 8\n'y': 0\n\n- autoHeight: true\npanels:\n- title: Dashboards\nplugin:\nname: grafana\ntype: grafana\noptions:\ntype: dashboards\ndashboards:\n- 3--MLVZZk\n- G8wLrJIZk\n- vu8e0VWZk\n- LJ_uJAvmk\n- UbsSZTDik\nh: 6\nw: 12\nx: 0\n'y': 0\n</code></pre>"},{"location":"plugins/harbor/","title":"Harbor","text":"<p>The Harbor plugin can be used to access all your projects, repositories and artifacts from a Harbor instance. You can also show your projects, repositories and artifacts on kobs dashboards.</p> <p></p> <p></p>"},{"location":"plugins/harbor/#configuration","title":"Configuration","text":"<p>The Harbor plugin can only be used within the <code>hub</code>. To use the Harbor plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Harbor plugin instance. Yes type <code>harbor</code> The type for the Harbor plugin. Yes options.address string Address of the Harbor instance. Yes options.username string Username to access an Harbor instance via basic authentication. No options.password string Password to access an Harbor instance via basic authentication. No options.token string Token to access an Harbor instance via token based authentication. No frontendOptions.address string Address of the Harbor instance. Yes <pre><code>plugins:\n- name: harbor\ntype: harbor\noptions:\naddress:\nusername:\npassword:\ntoken:\nfrontendOptions:\naddress:\n</code></pre>"},{"location":"plugins/harbor/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Harbor plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/harbor/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Harbor plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/harbor/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Harbor plugin:</p> Field Type Description Required type string The panel type. This could be <code>projects</code>, <code>repositories</code> or <code>artifacts</code>. Yes repositories Repositories Details for the panel, when the type is <code>repositories</code>. No artifacts Artifacts Details for the panel, when the type is <code>artifacts</code>. No"},{"location":"plugins/harbor/#repositories","title":"Repositories","text":"Field Type Description Required projectName string The name of the project, for which the repositories should be displayed. Yes query string An optional query to filter the repositories by their name. No"},{"location":"plugins/harbor/#artifacts","title":"Artifacts","text":"Field Type Description Required projectName string The name of the project, for which the repositories should be displayed. Yes repositoryName string The name of the repository in the project, for which the artifacts should be displayed. Yes query string An optional query to filter the artifacts by their tags. No"},{"location":"plugins/harbor/#usage","title":"Usage","text":"<p>The following dashboard shows all projects, all repositories from the <code>public</code> project and all artifacts from the <code>kobs</code> repository in the <code>public</code> project, where the tag contains <code>dev</code>.</p> <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Harbor\ninline:\nrows:\n- autoHeight: true\npanels:\n- title: Projects\nplugin:\nname: harbor\ntype: harbor\ncluster: hub\noptions:\ntype: projects\nh: 6\nw: 12\nx: 0\n'y': 0\n- title: Repositories\nplugin:\nname: harbor\ntype: harbor\ncluster: hub\noptions:\ntype: repositories\nrepositories:\nprojectName: public\nh: 6\nw: 6\nx: 6\n'y': 6\n- title: HelmRepositories\nplugin:\nname: harbor\ntype: harbor\ncluster: hub\noptions:\ntype: artifacts\nartifacts:\nprojectName: public\nrepositoryName: kobs\nquery: dev\nh: 6\nw: 6\nx: 0\n'y': 6\n</code></pre>"},{"location":"plugins/helm/","title":"Helm","text":"<p>The Helm plugin can be used to manage Helm releases within kobs.</p> <p></p> <p></p>"},{"location":"plugins/helm/#configuration","title":"Configuration","text":"<p>The Helm plugin can only be used within the <code>hub</code>. To use the Helm plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Helm plugin instance. Yes type <code>helm</code> The type for the Helm plugin. Yes <pre><code>plugins:\n- name: helm\ntype: helm\n</code></pre>"},{"location":"plugins/helm/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Helm plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/helm/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Helm plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/helm/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Helm plugin:</p> Field Type Description Required type string The panel type. This could be <code>releases</code> or <code>releasehistory</code>. Yes clusters []string A list of cluster for which the Helm releases should be shown. Yes namespaces []string A list of namespaces for which the Helm releases should be shown. Yes name string The name of the Helm release for whih the history should be shown, when the type is <code>releasehistory</code>. No"},{"location":"plugins/helm/#usage","title":"Usage","text":""},{"location":"plugins/helm/#permissions","title":"Permissions","text":"<p>A user can only use the Helm plugin when he has the permissions to view all secrets in a cluster / namespace, e.g.</p> <pre><code>---\napiVersion: kobs.io/v1\nkind: User\nmetadata:\nname: ricoberger\nnamespace: kobs\nspec:\n# The following permissions are required for the user to use the Helm plugin.\npermissions:\nplugins:\n- cluster: \"*\"\nname: \"*\"\ntype: \"*\"\nresources:\n- clusters:\n- \"*\"\nnamespaces:\n- \"*\"\nresources:\n- \"secrets\"\nverbs:\n- \"get\"\n</code></pre>"},{"location":"plugins/helm/#example-dashboard","title":"Example Dashboard","text":"<p>The following dashboards shows all Helm releases from the <code>kobs</code> and <code>monitoring</code> namespace and the history of the <code>kobs</code> and <code>prometheus-operator</code> releases.</p> <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Helm\ninline:\nrows:\n- autoHeight: true\npanels:\n- title: Helm Releases\nplugin:\nname: helm\ntype: helm\ncluster: hub\noptions:\ntype: releases\nclusters:\n- \"&lt;% $.cluster %&gt;\"\nnamespaces:\n- kobs\n- cert-manager\n- monitoring\nh: 6\nw: 12\nx: 0\n'y': 0\n- title: History of kobs\nplugin:\nname: helm\ntype: helm\ncluster: hub\noptions:\ntype: releasehistory\nclusters:\n- \"&lt;% $.cluster %&gt;\"\nnamespaces:\n- kobs\nname: kobs\nh: 6\nw: 6\nx: 6\n'y': 6\n- title: History of cert-manager\nplugin:\nname: helm\ntype: helm\ncluster: hub\noptions:\ntype: releasehistory\nclusters:\n- \"&lt;% $.cluster %&gt;\"\nnamespaces:\n- cert-manager\nname: cert-manager\nh: 6\nw: 6\nx: 0\n'y': 6\n</code></pre> <p></p>"},{"location":"plugins/jaeger/","title":"Jaeger","text":"<p>The Jaeger plugin can be used to retrieve traces from a configured Jaeger instance. You can specify the service, operation and tags for which you want to retrieve traces. You can also view the details of a trace and compare it with another trace.</p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"plugins/jaeger/#configuration","title":"Configuration","text":"<p>The Jaeger plugin can be used within the <code>hub</code> or <code>cluster</code>. To use the Jaeger plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Jaeger plugin instance. Yes type <code>jaeger</code> The type for the Jaeger plugin. Yes options.address string Address of the Jaeger instance. Yes options.username string Username to access a Jaeger instance via basic authentication. No options.password string Password to access a Jaeger instance via basic authentication. No options.token string Token to access a Jaeger instance via token based authentication. No frontendOptions.address string The address of the Jaeger instance, which can be accessed by the user. No <pre><code>plugins:\n- name: jaeger\ntype: jaeger\noptions:\naddress:\nusername:\npassword:\ntoken:\nfrontendOptions:\naddress:\n</code></pre>"},{"location":"plugins/jaeger/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Jaeger plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/jaeger/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Jaeger plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/jaeger/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Jaeger plugin:</p> Field Type Description Required showChart boolean If this is <code>true</code> the chart with the traces will be shown. No queries []Query A list of Jaeger queries, which can be selected by the user. No metrics Metrics The configuration to show the metrics for the Service Performance Monitoring. No"},{"location":"plugins/jaeger/#query","title":"Query","text":"Field Type Description Required name string A name for the Jaeger query, which is displayed in the select box. Yes limit string The maximum number of traces which should be shown. The default value is <code>20</code>. No maxDuration string The maximum duration for the retrieved traces (e.g. <code>1s</code>). No minDuration string The minimum duration for the retrieved traces (e.g. <code>100ms</code>). No service string The service to retrieve traces for. Yes operation string An optional operation to retrieve traces for. No tags string Tags, which the traces must be contain. No"},{"location":"plugins/jaeger/#metrics","title":"Metrics","text":"Field Type Description Required type string The metrics type which should be displayed. Must be one of the following: <code>servicelatency</code>, <code>serviceerrors</code>, <code>servicecalls</code> or <code>operations</code>. Yes service string The service for which the selected metrics should be displayed. Yes spanKinds string A list of span kinds for which the selected metrics should be displayed. By default it includes all span kinds: <code>unspecified</code>, <code>internal</code>, <code>server</code>, <code>client</code>, <code>producer</code> and <code>consumer</code>. No"},{"location":"plugins/jaeger/#usage","title":"Usage","text":"<pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Helm\ninline:\nrows:\n- panels:\n- title: Latency (ms)\nplugin:\nname: jaeger\ntype: jaeger\noptions:\nmetrics:\ntype: servicelatency\nservice: hub\nh: 6\nw: 4\nx: 0\n'y': 0\n- title: Errors (%)\nplugin:\nname: jaeger\ntype: jaeger\noptions:\nmetrics:\ntype: serviceerrors\nservice: hub\nh: 6\nw: 4\nx: 4\n'y': 0\n- title: Request Rate (req/s)\nplugin:\nname: jaeger\ntype: jaeger\noptions:\nmetrics:\ntype: servicecalls\nservice: hub\nh: 6\nw: 4\nx: 8\n'y': 0\n- autoHeight: true\npanels:\n- title: Traces\nplugin:\nname: jaeger\ntype: jaeger\noptions:\nshowChart: true\nqueries:\n- name: All Traces\nservice: hub\n- name: Error Traces\nservice: hub\ntags: error=true\nh: 6\nw: 12\nx: 0\n'y': 0\n</code></pre>"},{"location":"plugins/jira/","title":"Jira","text":"<p>The Jira plugin can be used to issues from your Jira instance.</p> <p></p>"},{"location":"plugins/jira/#configuration","title":"Configuration","text":"<p>The Jira plugin can only be used within the <code>hub</code>. To use the Jira plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Jira plugin instance. Yes type <code>jira</code> The type for the Jira plugin. Yes options.url string The URL of your Jira instance. Yes options.session.token string The token must be a random string which is used to sign the JWT token, which is generated when a user is authenticated. No options.session.duration string The duration defines the lifetime of the generated token. When the token is expired the user must authenticate again. The default value is <code>720h</code> No <pre><code>plugins:\n- name: jira\ntype: jira\noptions:\nurl:\nsession:\ntoken:\nduration:\n</code></pre>"},{"location":"plugins/jira/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Jira plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/jira/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Jira plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/jira/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Jira plugin:</p> Field Type Description Required jql string The JQL filter to get issues from your Jira instance. Yes"},{"location":"plugins/kiali/","title":"Kiali","text":"<p>The Kiali plugin can be used to visualize your Istio service mesh within kobs. You can select a list of namespaces for which the topology graph from Kiali should be retrieved. When you select a node or edge in the topology graph you can view the detailed metrics for the selected edge or node.</p> <p></p> <p></p>"},{"location":"plugins/kiali/#configuration","title":"Configuration","text":"<p>The Kiali plugin can be used within the <code>hub</code> or <code>cluster</code>. To use the Kiali plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Kiali plugin instance. Yes type <code>kiali</code> The type for the Kiali plugin. Yes options.address string Address of the Kiali instance. Yes options.username string Username to access a Kiali instance via basic authentication. No options.password string Password to access a Kiali instance via basic authentication. No options.token string Token to access a Kiali instance via token based authentication. No options.traffic.failure number Threshold to mark edges with failures. This must be a number between <code>0</code> and <code>100</code>. The default value is <code>5</code>. No options.traffic.degraded number Threshold to mark edges with degraded performance. This must be a number between <code>0</code> and <code>100</code>. The default value is <code>1</code>. No <pre><code>plugins:\n- name: kiali\ntype: kiali\noptions:\naddress:\nusername:\npassword:\ntoken:\ntraffic:\ndegraded: 1\nfailure: 5\n</code></pre>"},{"location":"plugins/kiali/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Kiali plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/kiali/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Kiali plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/kiali/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Kiali plugin:</p> Field Type Description Required namespaces []string A list of namespaces for which the topology graph should be shown. Yes application string The name of an application to show the topology graph only for this application. When an application is provided the <code>namespaces</code> property must contain exactly one namespace. No"},{"location":"plugins/kiali/#usage","title":"Usage","text":"<pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Flux\ninline:\nrows:\n- panels:\n- title: Topology Graph\nplugin:\nname: kiali\ntype: kiali\noptions:\nnamespaces:\n- wams\napplication: wams\nh: 14\nw: 12\nx: 0\n'y': 0\n</code></pre>"},{"location":"plugins/klogs/","title":"klogs","text":"<p>The klogs plugin can be used together with the kobsio/klogs output plugin for Fluent Bit. You can then use the specified Query Syntax to get the logs from ClickHouse.</p> <p></p>"},{"location":"plugins/klogs/#configuration","title":"Configuration","text":"<p>The klogs plugin can be used within the <code>hub</code> or <code>cluster</code>. To use the klogs plugin the following configuration is needed:</p> Field Type Description Required name string The name of the klogs plugin instance. Yes type <code>klogs</code> The type for the klogs plugin. Yes options.address string Address of the ClickHouse instance. Yes options.database string The name of the database. Yes options.username string Username to access a ClickHouse instance. No options.password string Password to access a ClickHouse instance. No options.dialTimeout string ClickHouse dial timeout. The default value is <code>10s</code>. No options.connMaxLifetime string ClickHouse maximum connection lifetime. The default value is <code>1h</code>. No options.maxIdleConns number ClickHouse maximum number of idle connections. The default value is <code>5</code>. No options.maxOpenConns number ClickHouse maximum number of open connections. The default value is <code>10</code>. No options.materializedColumns []string A list of materialized columns. See kobsio/klogs for more information. No <pre><code>plugins:\n- name: klogs\ntype: klogs\noptions:\naddress:\ndatabase:\nusername:\npassword:\ndialTimeout:\nconnMaxLifetime:\nmaxIdleConns:\nmaxOpenConns:\nmaterializedColumns:\n</code></pre>"},{"location":"plugins/klogs/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The klogs plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/klogs/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The klogs plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/klogs/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the klogs plugin:</p> Field Type Description Required type string Set the type which should be used to visualize your logs. This can be <code>logs</code> or <code>aggregation</code>. Yes showChart boolean If this is <code>true</code> the chart with the distribution of the log lines in the selected time range will be shown. No queries []Query A list of queries, which can be selected by the user. This is only required for type <code>logs</code>. Yes aggregation Aggregation Options for the aggregation. This is only required for type <code>aggregation</code>. Yes"},{"location":"plugins/klogs/#query","title":"Query","text":"Field Type Description Required name string A name for the klogs query, which is displayed in the select box. Yes query string The query which should be run against ClickHouse. See Query Syntax for more information on the syntax. Yes fields []string A list of fields to display in the results table. If this field is omitted, the whole document is displayed in the results table. No order string Order for the returned logs. Must be <code>ascending</code> or <code>descending</code>. The default value for this field is <code>descending</code>. No orderBy string The name of the field, by which the results should be orderd. The default value for this field is <code>timestamp</code>. No"},{"location":"plugins/klogs/#aggregation","title":"Aggregation","text":"Field Type Description Required query string The query, which should be used for the aggregation. Yes chart string The visualization type for the aggregation. This can be <code>pie</code>, <code>bar</code>, <code>line</code> or <code>area</code>. Yes sliceBy string Field which should be used for slicing in a <code>pie</code> chart. No sizeByOperation string Operation to size the slices. This can be <code>count</code>, <code>min</code>, <code>max</code>, <code>sum</code> or <code>avg</code>. No sizeByField string When the sizeByOperation is <code>min</code>, <code>max</code>, <code>sum</code> or <code>avg</code>, this must be the name of a field for the sizing of the slices. No horizontalAxisOperation string The operation for the chart. This must be <code>time</code> or <code>top</code>. No horizontalAxisField string The name of the field for the horizontal axis. No horizontalAxisOrder string The order of the top values. Must be <code>ascending</code> or <code>descending</code>. No horizontalAxisLimit number The maximum number of top values, which should be shown. No verticalAxisOperation string The operation for the vertical axis. This can be <code>count</code>, <code>min</code>, <code>max</code>, <code>sum</code> or <code>avg</code>. No verticalAxisField string When the verticalAxisOperation is <code>min</code>, <code>max</code>, <code>sum</code> or <code>avg</code>, this must be the name of a field for the vertical axis. No breakDownByFields []string A list of field names, which should be used to break down the data. No breakDownByFilters []string A list of filters, which should be used to break down the data. No"},{"location":"plugins/klogs/#usage","title":"Usage","text":""},{"location":"plugins/klogs/#query-syntax","title":"Query Syntax","text":""},{"location":"plugins/klogs/#operators","title":"Operators","text":"<p>kobs supports multiple operators which can be used in a query to retrieve logs from ClickHouse:</p> Operator Description Example <code>(</code> and <code>)</code> Multiple terms or clauses can be grouped together with parentheses, to form sub-queries. <code>cluster='kobs-demo' _and_ (namespace='bookinfo' _or_ namespace='istio-system')</code> <code>_not_</code> Exclude the term from the query. <code>cluster='kobs-demo' _and_ _not_ namespace='bookinfo'</code> <code>_and_</code> Both terms must be included in the results. <code>namespace='bookinfo' _and_ app='bookinfo'</code> <code>_or_</code> The result can contain one of the given terms. <code>namespace='bookinfo' _or_ namespace='istio-system'</code> <code>_exists_</code> The field can not be <code>null</code> <code>container_name='istio-proxy' _and_ _exists_ content_request_id</code> <code>=</code> The field must have this value. <code>namespace='bookinfo'</code> <code>!=</code> The field should not have this value. <code>namespace!='bookinfo'</code> <code>&gt;</code> The value of the field must be greater than the specified value. <code>content_response_code&gt;499</code> <code>&gt;=</code> The value of the field must be greater than or equal to the specified value. <code>content_response_code&gt;=500</code> <code>&lt;</code> The value of the field must be lower than the specified value. <code>content_response_code&lt;500</code> <code>&lt;=</code> The value of the field must be lower than or equal to the specified value. <code>content_response_code&lt;=499</code> <code>=~</code> The value of the field is compared using <code>ILIKE</code>. <code>content_upstream_cluster=~'inbound%'</code> <code>!~</code> The value of the field is compared using <code>NOT ILIKE</code>. <code>content_upstream_cluster!~'inbound%'</code> <code>~</code> The value of the field must match the regular expression. The syntax of the <code>re2</code> regular expressions can be found here. <code>content_upstream_cluster~'inbound.*'</code>"},{"location":"plugins/klogs/#default-fields","title":"Default Fields","text":"<p>In the following you can find a list of fields which are available for each log line. Consider to filter you logs by these fields, to keep your queries fast:</p> <ul> <li><code>timestamp</code>: The timestamp for when the log line was written.</li> <li><code>cluster</code>: The name of the cluster as it is set by Fluent Bit.</li> <li><code>namespace</code>: The namespace of the Pod.</li> <li><code>app</code>: The value of the <code>app</code> or <code>k8s-app</code> label of the Pod.</li> <li><code>pod_name</code>: The name of the Pod.</li> <li><code>container_name</code>: The name of the container from the Pod.</li> <li><code>host</code>: The name of the host where the Pod is running on.</li> <li><code>log</code>: The complete log line as it was written by the container.</li> </ul>"},{"location":"plugins/klogs/#examples","title":"Examples","text":"Logs <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Logs\ninline:\nrows:\n- autoHeight: true\npanels:\n- title: Istio Logs\nplugin:\nname: klogs\ntype: klogs\noptions:\ntype: logs\nshowChart: true\nqueries:\n- name: Istio Logs\nquery: &gt;-\nnamespace='kobs' _and_ app='hub' _and_\ncontainer_name='istio-proxy' _and_\ncontent_upstream_cluster~'inbound.*'\nfields:\n- pod_name\n- content_authority\n- content_route_name\n- content_protocol\n- content_method\n- content_path\n- content_response_code\n- content_upstream_service_time\n- content_bytes_received\n- content_bytes_sent\nh: 6\nw: 12\nx: 0\n'y': 0\n</code></pre> Aggregations <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Logs\ninline:\nrows:\n- panels:\n- title: Number of Logs per App\nplugin:\nname: klogs\ntype: klogs\noptions:\ntype: aggregation\naggregation:\nquery: cluster='dev-de1'\nchart: bar\nhorizontalAxisOperation: top\nhorizontalAxisField: app\nhorizontalAxisOrder: descending\nhorizontalAxisLimit: 10\nverticalAxisOperation: count\nh: 7\nw: 6\nx: 0\n'y': 0\n- title: Log Levels for MyApplication\nplugin:\nname: klogs\ntype: klogs\noptions:\ntype: aggregation\naggregation:\nquery: &gt;-\ncluster='dev-de1' _and_ app='myapplication' _and_\ncontainer_name='myapplication'\nchart: pie\nsliceBy: content_level\nsizeByOperation: count\nh: 7\nw: 6\nx: 6\n'y': 0\n- title: Request Duration for MyApplication by Response Code\nplugin:\nname: klogs\ntype: klogs\noptions:\ntype: aggregation\naggregation:\nquery: &gt;-\ncluster='dev-de1' _and_ app='myapplication' _and_\ncontainer_name='istio-proxy' _and_ content_response_code&gt;0\nchart: line\nhorizontalAxisOperation: time\nverticalAxisOperation: avg\nverticalAxisField: content_duration\nbreakDownByFields:\n- content_response_code\nh: 7\nw: 12\nx: 0\n'y': 7\n</code></pre>"},{"location":"plugins/mongodb/","title":"Mongodb","text":"<p>The MongoDB plugin can be used to access data from a MongoDB instance via kobs.</p> <p></p>"},{"location":"plugins/mongodb/#configuration","title":"Configuration","text":"<p>The MongoDB plugin can be used within the <code>hub</code> or <code>cluster</code>. To use the MongoDB plugin the following configuration is needed:</p> Field Type Description Required name string The name of the MongoDB plugin instance. Yes type <code>mongodb</code> The type for the MongoDB plugin. Yes options.connectionString string The connection string to the MongoDB instance. Yes options.databaseName string The name of the MongoDB database. Yes <pre><code>plugins:\n- name: MongoDB\ntype: MongoDB\noptions:\nconnectionString: mongodb://username:password@localhost:27017/?directconnection=true\ndatabaseName: admin\n</code></pre>"},{"location":"plugins/mongodb/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The MongoDB plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/mongodb/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The MongoDB plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/mongodb/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the MongoDB plugin:</p> Field Type Description Required operation string The operation which should be run against MongoDB. Must be <code>db</code>, <code>collections</code>, <code>count</code>, <code>find</code>, <code>findOne</code> or <code>aggregate</code>. Yes collectionName string The name of the collection for a <code>count</code>, <code>find</code>, <code>findOne</code> or <code>aggregate</code> query. Yes filter string The filter which should be executed. The default value is <code>{}</code>. No limit string The maximum amount of documents which should be returned. The default is <code>50</code>. No sort string The sort order for the returned documents. The default is <code>{\"_id\" : -1}</code>. No pipeline string The pipeline which should be executed when the operation is <code>aggregate</code>. No"},{"location":"plugins/mongodb/#usage","title":"Usage","text":""},{"location":"plugins/mongodb/#tree-view","title":"Tree View","text":""},{"location":"plugins/mongodb/#bson-view","title":"BSON View","text":""},{"location":"plugins/opsgenie/","title":"Opsgenie","text":"<p>The Opsgenie plugin can be used to retrieve alerts and incidents from Opsgenie.</p> <p></p> <p></p>"},{"location":"plugins/opsgenie/#configuration","title":"Configuration","text":"<p>The Opsgenie plugin can only be used within the <code>hub</code>. To use the Opsgenie plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Opsgenie plugin instance. Yes type <code>opsgenie</code> The type for the Opsgenie plugin. Yes options.apiKey string API Key for the Opsgenie API. More information can be found at API key management. Yes options.apiUrl string API URL for the Opsgenie API. Must be <code>api.opsgenie.com</code> or <code>api.eu.opsgenie.com</code>. Yes frontendOptions.url string The address for the Opsgenie account of your organisation. No frontendOptions.integrations.runbook.plugin.cluster string The cluster for the runbooks plugin. No frontendOptions.integrations.runbook.plugin.name string The name of the runbooks plugin. No frontendOptions.integrations.runbook.plugin.type <code>runbooks</code> The type of the runbooks plugin. Must be <code>runbooks</code>. No frontendOptions.integrations.runbook.options.alertname string The details field from an alert, which should be used to select a runbook. No frontendOptions.integrations.runbook.options.alertgroup string The details field from an alert, which should be used to select a runbook. No <pre><code>plugins:\n- name: opsgenie\ntype: opsgenie\noptions:\napiKey:\napiUrl:\nfrontendOptions:\nurl:\n# The integrations can be used to add a runbook to the Opsgenie alerts in\n# the UI.\n#\n# To use this integration you must also configure a runbooks plugin and\n# set the plugin which should be used in the \"plugin\" section.\n#\n# To select a runbook from the configured runbooks plugin, you must\n# configure the details field from an Opsgenie alert which should be used\n# for the \"alertname\" and \"alertgroup\" values of the runbook.\nintegrations:\nrunbook:\nplugin:\ncluster: hub\nname: runbooks\ntype: runbooks\noptions:\nalertname: \"alertname\"\nalertgroup: \"alertgroup\"\n</code></pre>"},{"location":"plugins/opsgenie/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Opsgenie plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/opsgenie/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Opsgenie plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/opsgenie/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Opsgenie plugin:</p> Field Type Description Required type string Specify if you want to show <code>alerts</code> or <code>incidents</code>. Yes queries []string The Opsgenie queries. The documentation for the query language can be found in the Opsgenie Documentation. Yes interval number An optional interval in seconds, which should be used instead of the selected time range in the Dashboard to get the alerts / incidents for. No <p>Note</p> <p>kobs automatically adds the <code>createdAt &gt;= &lt;selected-start-time&gt; AND createdAt &lt;= &lt;selected-end-time&gt;</code> to all Opsgenie queries, so that only results for the selected time range are shown.</p> <p>This behaviour can be overwritten with the <code>interval</code> property. If the <code>interval</code> property is provided, we add <code>createdAt &gt;= &lt;now - interval&gt; AND createdAt &lt;= &lt;now&gt;</code>.</p>"},{"location":"plugins/prometheus/","title":"Prometheus","text":"<p>The Prometheus plugin can be used to retrieve metrics from a configured Prometheus instance.</p> <p></p> <p></p>"},{"location":"plugins/prometheus/#configuration","title":"Configuration","text":"<p>The Prometheus plugin can be used within the <code>hub</code> or <code>cluster</code>. To use the Prometheus plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Prometheus plugin instance. Yes type <code>prometheus</code> The type for the Prometheus plugin. Yes options.address string Address of the Prometheus instance. Yes options.username string Username to access a Prometheus instance via basic authentication. No options.password string Password to access a Prometheus instance via basic authentication. No options.token string Token to access a Prometheus instance via token based authentication. No <pre><code>plugins:\n- name: prometheus\ntype: prometheus\noptions:\naddress:\nusername:\npassword:\ntoken:\n</code></pre>"},{"location":"plugins/prometheus/#insight-options","title":"Insight Options","text":"Field Type Description Required query string The PromQL query. Yes"},{"location":"plugins/prometheus/#variable-options","title":"Variable Options","text":"Field Type Description Required type string The query type to get the values for the variable. At the moment this must be <code>labelValues</code> Yes label string The Prometheus label which should be used to get the values for the variable. Yes query string The PromQL query. Yes Example <pre><code>variables:\n- name: var_pod\nlabel: Pod\nincludeAllOption: false\nplugin:\nname: prometheus\ntype: prometheus\noptions:\ntype: labelValues\nlabel: pod\nquery: container_cpu_usage_seconds_total{namespace=\"{% .namespace %}\", image!=\"\", pod=~\"{% .pod %}\", container!=\"POD\", container!=\"\"}\n</code></pre>"},{"location":"plugins/prometheus/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Prometheus plugin:</p> Field Type Description Required type string The type of the chart. Must be <code>sparkline</code>, <code>line</code>, <code>area</code>, <code>bar</code> or <code>table</code>. Yes unit string An optional unit for the y axis of the chart. No stacked boolean When this is <code>true</code> all time series in the chart will be stacked. No legend string The type which should be used for the legend. Currently only <code>table</code> and <code>table-large</code> is supported as legend. If the value is not set, no legend will be shown. No yAxis yAxis Set the scale of the y axis. No mappings map Specify value mappings for your data. Note: The value must be provided as string (e.g. <code>\"1\": \"Green\"</code>). No queries []Query A list of queries, which are used to get the data for the chart. Yes columns []Column A list of columns, which must be provided, when the type of the chart is <code>table</code> No"},{"location":"plugins/prometheus/#yaxis","title":"yAxis","text":"Field Type Description Required min <code>auto</code>, <code>min</code>, number The minimum value for the y axis. This could be <code>auto</code>, <code>min</code> (minimum value accross all displayed metrics) or a custom number. The default is <code>auto</code>. No max <code>auto</code>, <code>max</code>, number The minimum value for the y axis. This could be <code>auto</code>, <code>max</code> (maximum value accross all displayed metrics) or a custom number. The default is <code>auto</code>. No"},{"location":"plugins/prometheus/#query","title":"Query","text":"Field Type Description Required query string The PromQL query. Yes label string The label the results. The label can use the value of a variable or a label of the returned time series, e.g. <code>{% .&lt;prometheus-label&gt; %}</code>. If you want to use a Prometheus label make sure that the label name doesn't conflict with a variable name. Yes <p>Note</p> <p>In <code>sparkline</code> charts the label must not be provided. If the label is provided in a <code>sparkline</code> chart the label will be displayed instead of the current value.</p>"},{"location":"plugins/prometheus/#column","title":"Column","text":"Field Type Description Required name string The name of a column must be a returned label from the specified queries. To get the result of a query the special column <code>value-N</code>, where <code>N</code> is the index of the query. Yes header string An optional value for the header of the column. When this is not specified the name will be used as header for the column. No unit string An optional unit for the column values. No mappings map Specify value mappings for the column. Note: The value must be provided as string (e.g. <code>\"1\": \"Green\"</code>). No"},{"location":"plugins/prometheus/#usage","title":"Usage","text":"<p>The following dashboard, shows the CPU and Memory usage of a selected Pod. When this dashboard is used in via a team or application, it is possible to set the namespace and a regular expression to pre select all the Pods. These values are then used to get the names of all Pods and a user can then select the name of a Pod via the <code>var_pod</code> variable.</p> <pre><code>---\napiVersion: kobs.io/v1\nkind: Dashboard\nmetadata:\nname: resource-usage\nnamespace: kobs\nspec:\ndescription: Resources Usage of Pods\nplaceholders:\n- name: namespace\ndescription: |\nThe namespace of the application, e.g.\nnamespace: \"&lt;% $.namespace %&gt;\"\n- name: pod\ndescription: |\nA selector for the Pods of the application,\nmust be a valid PromQL selector, e.g.\npod: \"&lt;% $.name %&gt;-.*\"\n- name: verticalpodautoscaler\ndescription: |\nThe identifier for the VerticalPodAutoscaler,\nmust be a valid PromQL selector, e.g.\nverticalpodautoscaler: \"&lt;% $.name %&gt;\"\nvariables:\n- name: var_pod\nlabel: Pod\nincludeAllOption: false\nplugin:\nname: prometheus\ntype: prometheus\noptions:\ntype: labelValues\nlabel: pod\nquery: container_cpu_usage_seconds_total{namespace=\"{% .namespace %}\", image!=\"\", pod=~\"{% .pod %}\", container!=\"POD\", container!=\"\"}\n- name: var_container\nlabel: Container\nincludeAllOption: true\nplugin:\nname: prometheus\ntype: prometheus\noptions:\ntype: labelValues\nlabel: container\nquery: container_cpu_usage_seconds_total{namespace=\"{% .namespace %}\", image!=\"\", pod=~\"{% .var_pod %}\", container!=\"POD\", container!=\"\"}\nrows:\n- panels:\n- title: CPU Usage\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- query: &gt;-\nsum(rate(container_cpu_usage_seconds_total{namespace=\"{%\n.namespace %}\", image!=\"\", pod=~\"{% .var_pod %}\",\ncontainer!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}[2m]))\ntype: sparkline\nunit: Cores\nh: 4\nw: 4\nx: 0\n'y': 0\n- title: Memory Usage\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- query: &gt;-\nsum(container_memory_working_set_bytes{namespace=\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\", container!=\"POD\",\ncontainer!=\"\", container=~\"{% .var_container %}\"}) /\n1024 / 1024\ntype: sparkline\nunit: MiB\nh: 4\nw: 4\nx: 4\n'y': 0\n- title: Restarts\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- query: &gt;-\nkube_pod_container_status_restarts_total{namespace=\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\", container=~\"{%\n.var_container %}\"}\ntype: sparkline\nh: 4\nw: 4\nx: 8\n'y': 0\n- panels:\n- title: CPU Usage\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: 'Usage: {% .container %}'\nquery: &gt;-\nsum(rate(container_cpu_usage_seconds_total{namespace=\"{%\n.namespace %}\", image!=\"\", pod=~\"{% .var_pod %}\",\ncontainer!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}[2m])) by (container)\n- label: 'Request: {% .container %}'\nquery: &gt;-\nsum(kube_pod_container_resource_requests{namespace=\"{%\n.namespace %}\", resource=\"cpu\", pod=~\"{% .var_pod %}\",\ncontainer!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}) by (container)\ntype: line\nunit: Cores\nh: 9\nw: 6\nx: 0\n'y': 0\n- title: Memory Usage\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: 'Usage: {% .container %}'\nquery: &gt;-\nsum(container_memory_working_set_bytes{namespace=\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\", container!=\"POD\",\ncontainer!=\"\", container=~\"{% .var_container %}\"}) by\n(container) / 1024 / 1024\n- label: 'Request: {% .container %}'\nquery: &gt;-\nsum(kube_pod_container_resource_requests{namespace=\"{%\n.namespace %}\", resource=\"memory\", pod=~\"{% .var_pod\n%}\", container!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}) by (container) / 1024 / 1024\n- label: 'Limits: {% .container %}'\nquery: &gt;-\nsum(kube_pod_container_resource_limits{namespace=\"{%\n.namespace %}\", resource=\"memory\", pod=~\"{% .var_pod\n%}\", container!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}) by (container) / 1024 / 1024\ntype: line\nunit: MiB\nh: 9\nw: 6\nx: 6\n'y': 0\n- panels:\n- title: Ressource Recommendations\nplugin:\ntype: prometheus\nname: prometheus\noptions:\ncolumns:\n- name: target_name\ntitle: Target\n- name: container\ntitle: Container\n- name: value-1\ntitle: Recommended CPU\nunit: m\n- name: value-2\ntitle: Recommended Memory\nunit: Mi\nqueries:\n- label: '{% .target_name %} - {% .container %}'\nquery: &gt;-\nmax(max_over_time(kube_verticalpodautoscaler_status_recommendation_containerrecommendations_target{namespace=\"{%\n.namespace %}\", container!=\"POD\", container!=\"\", container=~\"{% .var_container %}\",\nresource=\"cpu\", verticalpodautoscaler=~\"{%\n.verticalpodautoscaler %}\"}[7d]) * 1000) by\n(target_name, container)\n- label: '{% .target_name %} - {% .container %}'\nquery: &gt;-\nmax(round(max_over_time(kube_verticalpodautoscaler_status_recommendation_containerrecommendations_target{namespace=\"{%\n.namespace %}\", container!=\"POD\", container!=\"\", container=~\"{% .var_container %}\",\nresource=\"memory\", verticalpodautoscaler=~\"{%\n.verticalpodautoscaler %}\"}[7d]) / 1000 / 1000)) by\n(target_name, container)\ntype: table\nh: 9\nw: 12\nx: 0\n'y': 0\nautoHeight: true\ndescription: ''\nif: '\"{% .verticalpodautoscaler %}\" !== \"\"'\n- title: Network\npanels:\n- title: Bandwidth\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- label: Received\nquery: &gt;-\nsum(irate(container_network_receive_bytes_total{namespace=\"{%\n.namespace %}\", pod=\"{% .var_pod %}\"}[2m])) by (pod)\n- label: Transmitted\nquery: &gt;-\n-sum(irate(container_network_transmit_bytes_total{namespace=\"{%\n.namespace %}\", pod=\"{% .var_pod %}\"}[2m])) by (pod)\ntype: area\nunit: bytes/s\nh: 9\nw: 12\nx: 0\n'y': 0\n- title: Rate of Packets\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- label: Received\nquery: &gt;-\nsum(irate(container_network_receive_packets_total{namespace=~\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\"}[2m])) by (pod)\n- label: Transmitted\nquery: &gt;-\n-sum(irate(container_network_transmit_packets_total{namespace=~\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\"}[2m])) by (pod)\ntype: area\nunit: p/s\nh: 9\nw: 6\nx: 0\n'y': 9\n- title: Rate of Packets Dropped\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- label: Received\nquery: &gt;-\nsum(irate(container_network_receive_packets_dropped_total{namespace=~\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\"}[2m])) by (pod)\n- label: Transmitted\nquery: &gt;-\n-sum(irate(container_network_transmit_packets_dropped_total{namespace=~\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\"}[2m])) by (pod)\ntype: area\nunit: p/s\nh: 9\nw: 6\nx: 6\n'y': 9\n</code></pre> <p></p>"},{"location":"plugins/rss/","title":"RSS","text":"<p>The RSS plugin can be used to show the latest status updates of third party services, from a list of sepcified RSS feeds.</p> <p></p> <p></p>"},{"location":"plugins/rss/#configuration","title":"Configuration","text":"<p>The RSS plugin can only be used within the <code>hub</code>. To use the RSS plugin the following configuration is needed:</p> Field Type Description Required name string The name of the RSS plugin instance. Yes type <code>rss</code> The type for the RSS plugin. Yes <pre><code>plugins:\n- name: rss\ntype: rss\n</code></pre>"},{"location":"plugins/rss/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The RSS plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/rss/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The RSS plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/rss/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the RSS plugin:</p> Field Type Description Required urls []string A list of RSS feed URLs. Yes sortBy string Set the field by which the retrieved feed items should be sorted. This can be <code>feed</code>, <code>title</code>, <code>updated</code> or <code>published</code>. The default value is <code>published</code>. No"},{"location":"plugins/rss/#usage","title":"Usage","text":"<pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Flux\ninline:\nrows:\n- autoHeight: true\npanels:\n- title: RSS Feeds\nplugin:\nname: rss\ntype: rss\ncluster: hub\noptions:\nurls:\n- https://www.githubstatus.com/history.rss\n- https://status.aws.amazon.com/rss/route53.rss\n- https://azurestatuscdn.azureedge.net/de-de/status/feed/\n- https://www.cloudflarestatus.com/history.atom\nsortBy: updated\nh: 6\nw: 12\nx: 0\n'y': 0\n</code></pre>"},{"location":"plugins/runbooks/","title":"Runbooks","text":"<p>The Runbooks plugin can be used to manage runbooks within the Prometheus Operator CRDs or similar CRDs. To add a runbook to an PrometheusRule an <code>runbook</code> annotation must be added. The runbooks are markdown formatted and can use the same features as the TechDocs plugin.</p> <p></p> <p></p>"},{"location":"plugins/runbooks/#configuration","title":"Configuration","text":"<p>The Runbooks plugin can only be used within the <code>hub</code>. To use the Runbooks plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Runbooks plugin instance. Yes type <code>runbooks</code> The type for the Runbooks plugin. Yes options.path string The Kubernetes API path for the resource, which should be used for the runbooks. Yes options.resource string The Kubernetes API resource, which should be used for the runbooks. Yes <pre><code>plugins:\n- name: runbooks\ntype: runbooks\noptions:\n## The path and resource fields could also point to another PrometheusRule compatible resource, e.g. the VictoriaMetrics rules:\n#   path: /apis/operator.victoriametrics.com/v1beta1\n#   resource: vmrules\npath: /apis/monitoring.coreos.com/v1\nresource: prometheusrule\n</code></pre>"},{"location":"plugins/runbooks/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Runbooks plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/runbooks/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Runbooks plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/runbooks/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Runbooks plugin:</p> Field Type Description Required type string The type for the Runbooks panel. This must be <code>list</code> to render a list of runbooks or <code>details</code> to render a single runbook. No query string A search query to render the list of runbooks. No alert string The name of the alert. No group string The groups of the alert. No"},{"location":"plugins/runbooks/#usage","title":"Usage","text":"<p>The following example shows a <code>VMRule</code> with a runbook:</p> <pre><code>---\napiVersion: operator.victoriametrics.com/v1beta1\nkind: VMRule\nmetadata:\nname: clickhouse-alert-rules\nnamespace: monitoring\nspec:\ngroups:\n- name: ClickHouseOperatorRules\nrules:\n- alert: ClickHouseServerDown\nexpr: chi_clickhouse_metric_fetch_errors{fetch_type='system.metrics'} &gt; 0\nfor: 5m\nlabels:\nnamespace: \"{{ $labels.exported_namespace }}\"\nseverity: error\nannotations:\nmessage: \"clickhouse-server {{ $labels.exported_namespace }}/{{ $labels.hostname }} possible down\"\nrunbook_url: https://backstage.staffbase.com/docs/default/Component/redbook/runbooks/clickhouse-alerts/#ClickHouseServerDown\nrunbook: |\nThe `metrics-exporter` failed to fetch metrics. The ClickHouse Server might be down.\n\n```kobs:dashboard\n- title: 'ClickHouseServerDown'\ninline:\nvariables:\n- name: var_cluster\nlabel: Cluster\nincludeAllOption: false\nplugin:\nname: static\ntype: core\noptions:\n- dev-de1\n- stage-de1\n- prod-de1\n- prod-us1\n- name: var_namespace\nlabel: Pod\nincludeAllOption: false\nplugin:\ntype: prometheus\nname: prometheus\ncluster: \"{% .var_cluster %}\"\noptions:\ntype: labelValues\nlabel: namespace\nquery: chi_clickhouse_metric_fetch_errors\n- name: var_pod\nlabel: Pod\nincludeAllOption: false\nplugin:\ntype: prometheus\nname: prometheus\ncluster: \"{% .var_cluster %}\"\noptions:\ntype: labelValues\nlabel: pod\nquery: chi_clickhouse_metric_fetch_errors\nrows:\n- panels:\n- title: Metrics Fetch Errors\nplugin:\ntype: prometheus\nname: prometheus\ncluster: \"{% .var_cluster %}\"\noptions:\nlegend: table\nqueries:\n- label: \"system.metrics\"\nquery: sum(chi_clickhouse_metric_fetch_errors{fetch_type=\"system.metrics\", namespace=\"{% .var_namespace %}\", pod=\"{% .var_pod %}\"})\ntype: line\nh: 9\nw: 12\nx: 0\n'y': 0\n- autoHeight: true\npanels:\n- title: Logs\nplugin:\ntype: klogs\nname: klogs\ncluster: \"{% .var_cluster %}\"\noptions:\ntype: logs\nqueries:\n- name: Instance Logs\nquery: \"namespace='{% .var_namespace %}' _and_ pod_name='{% .var_pod %}' _and_ container_name='clickhouse'\"\nh: 9\nw: 12\nx: 0\n'y': 0\n```\n</code></pre>"},{"location":"plugins/signalsciences/","title":"Signal Sciences","text":"<p>The Signal Sciences plugin can be used to view sites, agents and requests from Signal Sciences within kobs.</p> <p></p>"},{"location":"plugins/signalsciences/#configuration","title":"Configuration","text":"<p>The Signal Sciences plugin can only be used within the <code>hub</code>. To use the Signal Sciences plugin the following configuration is needed:</p> Field Type Description Required name string The name of the Signal Sciences plugin instance. Yes type <code>signalsciences</code> The type for the Signal Sciences plugin. Yes options.corpName string The name of your organization. Yes options.email string The email address of a user to access the API. Yes options.password string The token of a user to access the API. Yes <pre><code>plugins:\n- name: signalsciences\ntype: signalsciences\noptions:\ncorpName:\nemail:\ntoken:\n</code></pre>"},{"location":"plugins/signalsciences/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The Signal Sciences plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/signalsciences/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The Signal Sciences plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/signalsciences/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the Signal Sciences plugin:</p> Field Type Description Required type string The type which should be used for the panel. Must be <code>overview</code>, <code>requests</code> or <code>agents</code>. Yes site string If the type is <code>requests</code> or <code>agents</code> this is the site name for which the requests or agents should be shown. No query string If the type is <code>requests</code> this is the query to filter the requests (Search Syntax). No"},{"location":"plugins/signalsciences/#usage","title":"Usage","text":""},{"location":"plugins/sonarqube/","title":"SonarQube","text":"<p>The SonarQube plugin can be used to view all projects with the measures from a SonarQube instance or SonarCloud.</p> <p></p>"},{"location":"plugins/sonarqube/#configuration","title":"Configuration","text":"<p>The Opsgenie plugin can only be used within the <code>hub</code>. To use the Opsgenie plugin the following configuration is needed:</p> Field Type Description Required name string The name of the SonarQube plugin instance. Yes type <code>sonarqube</code> The type for the SonarQube plugin. Yes options.address string Address of the SonarQube instance. Yes options.username string Username to access a SonarQube instance via basic authentication. No options.password string Password to access a SonarQube instance via basic authentication. No options.organization string The name of the organization for which the projects should be shown. No options.metricKeys []string An optional list of metric keys which should be displayed for all projects. If this value is not provided the following list will be used: <code>alert_status</code>, <code>bugs</code>, <code>reliability_rating</code>, <code>vulnerabilities</code>, <code>security_rating</code>, <code>security_hotspots_reviewed</code>, <code>security_review_rating</code>, <code>code_smells</code>, <code>sqale_rating</code>, <code>coverage</code>, <code>duplicated_lines_density</code>. No frontendOptions.address string The address of the SonarQube instance, which can be accessed by the user. No <pre><code>plugins:\n- name: sonarqube\ntype: sonarqube\noptions:\naddress:\nusername:\npassword:\norganization:\nmetricKeys:\nfrontendOptions:\naddress:\n</code></pre>"},{"location":"plugins/sonarqube/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The SonarQube plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/sonarqube/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The SonarQube plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/sonarqube/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the SonarQube plugin:</p> Field Type Description Required project string The key of the SonarQube project. Yes metricKeys []string An optional list of metric keys, which should be displayed for the project. If this value is not provided the globally configured default value will be used. A list of all available metrics can be retrieved from the <code>/api/metrics/search</code> API endpoint of a SonarQube instance. No"},{"location":"plugins/sql/","title":"SQL","text":"<p>The SQL plugin can be used to get run queries against a SQL database. Currently we are supporting ClickHouse, Postgres and MySQL databases.</p> <p></p>"},{"location":"plugins/sql/#configuration","title":"Configuration","text":"<p>The SQL plugin can be used within the <code>hub</code> or <code>cluster</code>. To use the SQL plugin the following configuration is needed:</p> Field Type Description Required name string The name of the SQL plugin instance. Yes type <code>sql</code> The type for the SQL plugin. Yes options.driver string The driver which should be used for the database instance. This must be <code>clickhouse</code>, <code>postgres</code>, <code>mysql</code> or <code>bigquery</code>. Yes options.address string The connection string, to connect to a SQL database. Yes options.database string The name of the database. Yes <pre><code>plugins:\n- name: sql\ntype: sql\noptions:\ndriver:\naddress:\ndatabase:\n</code></pre>"},{"location":"plugins/sql/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The SQL plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/sql/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The SQL plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/sql/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the SQL plugin:</p> Field Type Description Required type string The type which should be used to visualize the data. This can be <code>table</code> or <code>chart</code>. Yes queries []Query A list of queries, which can be selected by the user. This is required when the <code>type</code> is set to <code>table</code>. No chart Chart Settings to render the results of a query in a chart. This is required when the <code>type</code> is set to <code>chart</code>. No"},{"location":"plugins/sql/#query","title":"Query","text":"Field Type Description Required name string A name for the SQL query, which is displayed in the select box. Yes query string The query which should be run against the configured SQL database. Yes columns mapColumn&gt; A map of columns to format the returned data for a query. The key must match the returned column name. No"},{"location":"plugins/sql/#column","title":"Column","text":"Field Type Description Required title string Set a title for the column. No unit string A unit which should be displayed behind the column value. If this is <code>time</code> we automatically try to auto format the column to the users local time. No"},{"location":"plugins/sql/#chart","title":"Chart","text":"Field Type Description Required type string The chart type. This could be <code>pie</code>, <code>line</code>, <code>area</code>, <code>bar</code> or <code>singlestats</code>. Yes query string The query which which results should be used in the chart. Yes pieLabelColumn string The name of the column which should be used for the labels in the pie chart. This is required when the type is <code>pie</code>. No pieValueColumn string The name of the column which should be used for the values in the pie chart. This is required when the type is <code>pie</code>. No xAxisColumn string The column which should be used for the x axis. This is required when the type is <code>line</code> or <code>area</code>. No xAxisType string The type for the x axis. This could be empty or <code>time</code>. No xAxisUnit string The unit which should be used for the x axis. No yAxisColumns []string A list of columns which should be shown for the y axis. This is required when the type is <code>line</code> or <code>area</code>. No yAxisUnit string The unit for the y axis. No yAxisGroup string The name of the column, which values should be used to group the data. No yAxisStacked boolean When this is <code>true</code> the values of the y axis are stacked. No legend map A map of string pairs, to set the displayed title for a column in the legend. The key is the column name as returned by the query and the value is the shown title. No thresholds map A map of string pairs, to set the background color in a <code>singlestats</code> chart. No"},{"location":"plugins/sql/#usage","title":"Usage","text":"Example 1 <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Latency\ninline:\nrows:\n- panels:\n- title: Raw Data\nplugin:\nname: clickhouse-logging\ntype: sql\noptions:\ntype: table\nqueries:\n- name: Duration and Upstream Service Time\nquery: |\nSELECT\ntoStartOfInterval(timestamp, INTERVAL 60 second) AS time,\navg(fields_number['content_duration']) as avg_duration,\navg(fields_number['content_upstream_service_time']) as avg_ust,\navg_duration - avg_ust as avg_diff\nFROM\nlogs.logs\nWHERE\ntimestamp &gt;= FROM_UNIXTIME({% .__timeStart %})\nAND timestamp &lt;= FROM_UNIXTIME({% .__timeEnd %})\nAND namespace='myservice'\nAND app='myservice'\nAND container_name='istio-proxy'\nAND match(fields_string['content_upstream_cluster'], '^inbound.*')\nGROUP BY\ntime\nORDER BY\ntime\ncolumns:\ntime:\ntitle: Time\nunit: time\navg_duration:\ntitle: Duration\nunit: ms\navg_ust:\ntitle: Upstream Service Time\nunit: ms\navg_diff:\ntitle: Difference\nunit: ms\nh: 14\nw: 6\nx: 0\n'y': 0\n- title: Difference\nplugin:\nname: clickhouse-logging\ntype: sql\noptions:\ntype: chart\nchart:\ntype: line\nquery: |\nSELECT\ntoStartOfInterval(timestamp, INTERVAL 60 second) AS time,\navg(fields_number['content_duration']) - avg(fields_number['content_upstream_service_time']) as avg_diff\nFROM\nlogs.logs\nWHERE\ntimestamp &gt;= FROM_UNIXTIME({% .__timeStart %})\nAND timestamp &lt;= FROM_UNIXTIME({% .__timeEnd %})\nAND namespace='myservice'\nAND app='myservice'\nAND container_name='istio-proxy'\nAND match(fields_string['content_upstream_cluster'], '^inbound.*')\nGROUP BY\ntime\nORDER BY\ntime\nxAxisColumn: time\nxAxisType: time\nyAxisColumns:\n- avg_diff\nyAxisUnit: ms\nyAxisStacked: false\nlegend:\navg_diff: Difference\nh: 7\nw: 6\nx: 6\n'y': 0\n- title: Duration vs Upstream Service Time\nplugin:\nname: clickhouse-logging\ntype: sql\noptions:\ntype: chart\nchart:\ntype: line\nquery: |\nSELECT\ntoStartOfInterval(timestamp, INTERVAL 60 second) AS time,\navg(fields_number['content_duration']) as avg_duration,\navg(fields_number['content_upstream_service_time']) as avg_ust\nFROM\nlogs.logs\nWHERE\ntimestamp &gt;= FROM_UNIXTIME({% .__timeStart %})\nAND timestamp &lt;= FROM_UNIXTIME({% .__timeEnd %})\nAND namespace='myservice'\nAND app='myservice'\nAND container_name='istio-proxy'\nAND match(fields_string['content_upstream_cluster'], '^inbound.*')\nGROUP BY\ntime\nORDER BY\ntime\nxAxisColumn: time\nxAxisType: time\nyAxisColumns:\n- avg_duration\n- avg_ust\nyAxisUnit: ms\nyAxisStacked: false\nlegend:\navg_duration: Duration\navg_ust: Upstream Service Time\nh: 7\nw: 6\nx: 6\n'y': 7\n</code></pre> Example 2 <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Log Levels\ninline:\nrows:\n- panels:\n- title: Log Levels\nplugin:\nname: clickhouse-logging\ntype: sql\noptions:\ntype: table\nqueries:\n- name: Log Levels\nquery: |\nSELECT\ncontent_level,\ncount(content_level) as count_data\nFROM\nlogs.logs\nWHERE\ntimestamp &gt;= FROM_UNIXTIME({% .__timeStart %})\nAND timestamp &lt;= FROM_UNIXTIME({% .__timeEnd %})\nAND namespace='myservice'\nAND app='myservice'\nAND container_name='myservice'\nGROUP BY\ncontent_level\ncolumns:\ncontent_level:\ntitle: Level\ncount_data:\ntitle: Count\nh: 8\nw: 6\nx: 0\n'y': 0\n- title: Log Level Distribution\nplugin:\nname: clickhouse-logging\ntype: sql\noptions:\ntype: chart\nchart:\ntype: pie\nquery: |\nSELECT\ncontent_level,\ncount(content_level) as count_data\nFROM\nlogs.logs\nWHERE\ntimestamp &gt;= FROM_UNIXTIME({% .__timeStart %})\nAND timestamp &lt;= FROM_UNIXTIME({% .__timeEnd %})\nAND namespace='myservice'\nAND app='myservice'\nAND container_name='myservice'\nGROUP BY\ncontent_level\npieLabelColumn: content_level\npieValueColumn: count_data\nh: 8\nw: 6\nx: 6\n'y': 0\n</code></pre> Example 3 <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: default\nnamespace: default\nspec:\ndescription: The default application is an application to test all available kobs plugins.\ndashboards:\n- title: Latency\ninline:\nrows:\n- panels:\n- title: Current Latency\nplugin:\nname: clickhouse-tracing\ntype: sql\noptions:\ntype: chart\nchart:\ntype: singlestats\nquery: |\nSELECT\nfloor(quantile(0.5)(JSONExtractInt(model, 'duration')) / 1000000, 2) as p50,\nfloor(quantile(0.95)(JSONExtractInt(model, 'duration')) / 1000000, 2) as p95,\nfloor(quantile(0.99)(JSONExtractInt(model, 'duration')) / 1000000, 2) as p99\nFROM\n(\nSELECT * FROM jaeger_spans\nWHERE\ntimestamp &gt;= FROM_UNIXTIME({% .__timeStart %})\nAND timestamp &lt;= FROM_UNIXTIME({% .__timeEnd %})\nAND JSONExtractString(model, 'operation_name') = 'async envoy.service.auth.v3.Authorization.Check egress'\n)\nyAxisColumns:\n- p50\n- p95\n- p99\nyAxisUnit: ms\nlegend:\np50: P50\np95: P95\np99: P99\nthresholds:\n'4': '#F0AB00'\n'6': '#C9190B'\n'-1024': '#3E8635'\nh: 4\nw: 12\nx: 0\n'y': 0\n- title: Latency over Time\nplugin:\nname: clickhouse-tracing\ntype: sql\noptions:\ntype: chart\nchart:\ntype: line\nquery: |\nSELECT\ntoStartOfInterval(timestamp, INTERVAL 60 second) AS time,\nfloor(quantile(0.5)(JSONExtractInt(model, 'duration')) / 1000000, 2) as p50,\nfloor(quantile(0.95)(JSONExtractInt(model, 'duration')) / 1000000, 2) as p95,\nfloor(quantile(0.99)(JSONExtractInt(model, 'duration')) / 1000000, 2) as p99\nFROM\n(\nSELECT * FROM jaeger_spans\nWHERE\ntimestamp &gt;= FROM_UNIXTIME({% .__timeStart %})\nAND timestamp &lt;= FROM_UNIXTIME({% .__timeEnd %})\nAND JSONExtractString(model, 'operation_name') = 'async envoy.service.auth.v3.Authorization.Check egress'\n)\nGROUP BY time\nORDER BY time\nxAxisColumn: time\nxAxisType: time\nyAxisColumns:\n- p50\n- p95\n- p99\nyAxisUnit: ms\nlegend:\np50: P50\np95: P95\np99: P99\nh: 9\nw: 12\nx: 0\n'y': 4\n</code></pre>"},{"location":"plugins/techdocs/","title":"TechDocs","text":"<p>The TechDocs plugin allows your engineers to write their documentation in markdown files which live together with their code and display them in kobs.</p> <p></p>"},{"location":"plugins/techdocs/#configuration","title":"Configuration","text":"<p>The TechDocs plugin can only be used within the <code>hub</code>. To use the TechDocs plugin the following configuration is needed:</p> Field Type Description Required name string The name of the TechDocs plugin instance. Yes type <code>techdocs</code> The type for the TechDocs plugin. Yes options.provider.type string The provider type. Must be <code>local</code>, <code>s3</code> or <code>azure</code> Yes options.provider.local.rootDirectory string The path to the directory, which contains all the folders with your TechDocs for your services. Yes options.provider.s3.endpoint string The endpoint for your S3 bucket. Yes options.provider.s3.accessKeyID string The access key id for your S3 bucket. Yes options.provider.s3.secretAccessKey string The secret access key for your S3 bucket. Yes options.provider.s3.bucket string The name of the S3 bucket with your TechDocs. Yes options.provider.s3.useSSL boolean Use SSL to access the S3 bucket. No options.provider.azure.accountName boolean The name of the Azure storage account. Yes options.provider.azure.accountKey boolean The key for the Azure storage account. Yes <pre><code>plugins:\n- name: techdocs\ntype: techdocs\noptions:\nprovider:\ntype: local\nlocal:\nrootDirectory:\n# type: s3\n# s3:\n#   endpoint:\n#   accessKeyID:\n#   secretAccessKey:\n#   bucket:\n#   useSSL\n# type: azure\n# azure:\n#   accountName:\n#   accountKey:\n</code></pre>"},{"location":"plugins/techdocs/#insight-options","title":"Insight Options","text":"<p>Note</p> <p>The TechDocs plugin can not be used within the insights section of an application.</p>"},{"location":"plugins/techdocs/#variable-options","title":"Variable Options","text":"<p>Note</p> <p>The TechDocs plugin can not be used to get a list of variable values.</p>"},{"location":"plugins/techdocs/#panel-options","title":"Panel Options","text":"<p>The following options can be used for a panel with the TechDocs plugin:</p> Field Type Description Required type string The type which should be used for the TechDocs panel. Must be <code>services</code> to render the list of all available services, <code>service-toc</code> to render the table of contents for a service, <code>service-markdown</code> to render the TechDocs for a service or <code>markdown</code> to render a markdown text. Yes service string The name of the service. This value is required when the type is <code>service-toc</code> or <code>service-markdown</code>. No service string The markdown text. This value is required when the type is <code>markdown</code>. No"},{"location":"plugins/techdocs/#usage","title":"Usage","text":"<p>The TechDocs plugin renders the markdown files for your service. For that you have to provide the files for kobs via S3 or via a file system which kobs can access.</p>"},{"location":"plugins/techdocs/#file-structure","title":"File Structure","text":"<p>The TechDocs for all of your service must live in their own folder. Lets say we have four services <code>productpage</code>, <code>details</code>, <code>ratings</code> and <code>reviews</code>. All of these services have their own documentation, so that the final structure for kobs should look as follows:</p> <pre><code>techdocs\n\u251c\u2500\u2500 details\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.yaml\n\u251c\u2500\u2500 productpage\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 configuration\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 addbooks.md\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 getting-started.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.yaml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 installation\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 helm.md\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 kustomize.md\n\u251c\u2500\u2500 ratings\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.yaml\n\u2514\u2500\u2500 reviews\n    \u2514\u2500\u2500 index.yaml\n</code></pre> <p>As you can see each folder must also contain a <code>index.yaml</code> file with the following content:</p> <pre><code># The key should be a unique identifier for all of your TechDocs.\n# It must have the same name as the folder, where the TechDocs for the service are stored for kobs.\nkey: productpage\n# The name of your service and a short description of your service.\nname: Productpage\ndescription: The productpage for the bookinfo application.\n# The first markdown file which should be shown, when a user opens the TechDocs for the service.\nhome: index.md\n# The table of contents for your service, with links to all the markdown files should can be accessed by a user.\ntoc:\n- Home: index.md\n- Installation:\n- Helm: installation/helm.md\n- Kustomize: installation/kustomize.md\n- Configuration:\n- Getting Started: configuration/getting-started.md\n- Add Books: configuration/addbooks.md\n</code></pre>"},{"location":"plugins/techdocs/#admonitions","title":"Admonitions","text":"<p>The TechDocs plugin supports admonitions. The syntax to add admonitions to your markdown files is as follows:</p> <pre><code>:::info{title=\"My info title\"}\nMy info text\n:::\n</code></pre> <pre><code>:::success{title=\"My success title\"}\nMy success text\n:::\n</code></pre> <pre><code>:::warning{title=\"My warning title\"}\nMy warning text\n:::\n</code></pre> <pre><code>:::error{title=\"My error title\"}\nMy error text\n:::\n</code></pre> <p>Admonitions can also be collapsed by adding the <code>collapse=\"true\"</code> property:</p> <pre><code>:::info{title=\"My info title\" collapse=\"true\"}\nMy info text\n:::\n</code></pre> <pre><code>:::success{title=\"My success title\" collapse=\"true\"}\nMy success text\n:::\n</code></pre> <pre><code>:::warning{title=\"My warning title\" collapse=\"true\"}\nMy warning text\n:::\n</code></pre> <pre><code>:::error{title=\"My error title\" collapse=\"true\"}\nMy error text\n:::\n</code></pre>"},{"location":"plugins/techdocs/#embed-kobs-panels","title":"Embed kobs Panels","text":"<p>You can add kobs panels to your TechDocs in the same way how they are used within applications, dashboards, teams and users. To add a panel to your documentation you have to use a code block with the <code>kobs:panel</code> language.</p> <pre><code># Resource Usage\n\nThe `container_cpu_usage_seconds_total` and `container_memory_working_set_bytes` metrics can be used to show the number of used CPU Cores and the used Memory of your application.\n\n```kobs:panel\ntitle: CPU Usage\nplugin:\ntype: prometheus\nname: prometheus\ncluster: prod-de1\noptions:\nqueries:\n- query: &gt;-\navg(rate(container_cpu_usage_seconds_total{namespace=\"backend\", image!=\"\", pod=~\"backend-.*\",\ncontainer!=\"POD\", container!=\"\", container=~\"backend\"}[2m]))\ntype: sparkline\nunit: Cores\n```\n\n```kobs:panel\ntitle: Memory Usage\nplugin:\ntype: prometheus\nname: prometheus\ncluster: prod-de1\noptions:\nqueries:\n- query: &gt;-\navg(container_memory_working_set_bytes{namespace=\"backend\", pod=~\"backend-.*\", container!=\"POD\",\ncontainer!=\"\", container=~\"backend\"}) /\n1024 / 1024\ntype: sparkline\nunit: MiB\n```\n</code></pre> <p></p>"},{"location":"plugins/techdocs/#embed-kobs-dashboards","title":"Embed kobs Dashboards","text":"<p>Similar to the panels you can also embed complete dashboards within your documentation. To add a dashboard you have to use a code block with the <code>kobs:dashboard</code> annotation.</p> <pre><code># Resource Usage\n\nThe `container_cpu_usage_seconds_total` and `container_memory_working_set_bytes` metrics can be used to show the number of used CPU Cores and the used Memory of your application.\n\n```kobs:dashboard\n- title: 'Resource Usage'\ninline:\nvariables:\n- name: var_pod\nlabel: Pod\nincludeAllOption: false\nplugin:\ntype: prometheus\nname: prometheus\ncluster: prod-de1\noptions:\ntype: labelValues\nlabel: pod\nquery: container_cpu_usage_seconds_total{namespace=\"backend\", image!=\"\", pod=~\"backend-.*\", container!=\"POD\", container!=\"\"}\n- name: var_container\nlabel: Container\nincludeAllOption: true\nplugin:\ntype: prometheus\nname: prometheus\ncluster: prod-de1\noptions:\ntype: labelValues\nlabel: container\nquery: container_cpu_usage_seconds_total{namespace=\"backend\", image!=\"\", pod=~\"{% .var_pod %}\", container!=\"POD\", container!=\"\"}\nrows:\n- panels:\n- title: CPU Usage\nplugin:\ntype: prometheus\nname: prometheus\ncluster: prod-de1\noptions:\nqueries:\n- query: &gt;-\nsum(rate(container_cpu_usage_seconds_total{namespace=\"backend\", image!=\"\", pod=~\"{% .var_pod %}\",\ncontainer!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}[2m]))\ntype: sparkline\nunit: Cores\nh: 4\nw: 4\nx: 0\n'y': 0\n- title: Memory Usage\nplugin:\ntype: prometheus\nname: prometheus\ncluster: prod-de1\noptions:\nqueries:\n- query: &gt;-\nsum(container_memory_working_set_bytes{namespace=\"backend\", pod=~\"{% .var_pod %}\", container!=\"POD\",\ncontainer!=\"\", container=~\"{% .var_container %}\"}) /\n1024 / 1024\ntype: sparkline\nunit: MiB\nh: 4\nw: 4\nx: 4\n'y': 0\n- title: Restarts\nplugin:\ntype: prometheus\nname: prometheus\ncluster: prod-de1\noptions:\nqueries:\n- query: &gt;-\nkube_pod_container_status_restarts_total{namespace=\"backend\", pod=~\"{% .var_pod %}\", container=~\"{%\n.var_container %}\"}\ntype: sparkline\nh: 4\nw: 4\nx: 8\n'y': 0\n- panels:\n- title: CPU Usage\nplugin:\ntype: prometheus\nname: prometheus\ncluster: prod-de1\noptions:\nlegend: table\nqueries:\n- label: 'Usage: {% .container %}'\nquery: &gt;-\nsum(rate(container_cpu_usage_seconds_total{namespace=\"backend\", image!=\"\", pod=~\"{% .var_pod %}\",\ncontainer!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}[2m])) by (container)\n- label: 'Request: {% .container %}'\nquery: &gt;-\nsum(kube_pod_container_resource_requests{namespace=\"backend\", resource=\"cpu\", pod=~\"{% .var_pod %}\",\ncontainer!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}) by (container)\ntype: line\nunit: Cores\nh: 9\nw: 6\nx: 0\n'y': 0\n- title: Memory Usage\nplugin:\ntype: prometheus\nname: prometheus\ncluster: prod-de1\noptions:\nlegend: table\nqueries:\n- label: 'Usage: {% .container %}'\nquery: &gt;-\nsum(container_memory_working_set_bytes{namespace=\"backend\", pod=~\"{% .var_pod %}\", container!=\"POD\",\ncontainer!=\"\", container=~\"{% .var_container %}\"}) by\n(container) / 1024 / 1024\n- label: 'Request: {% .container %}'\nquery: &gt;-\nsum(kube_pod_container_resource_requests{namespace=\"backend\", resource=\"memory\", pod=~\"{% .var_pod\n%}\", container!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}) by (container) / 1024 / 1024\n- label: 'Limits: {% .container %}'\nquery: &gt;-\nsum(kube_pod_container_resource_limits{namespace=\"backend\", resource=\"memory\", pod=~\"{% .var_pod\n%}\", container!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}) by (container) / 1024 / 1024\ntype: line\nunit: MiB\nh: 9\nw: 6\nx: 6\n'y': 0\n```\n</code></pre> <p></p>"},{"location":"resources/","title":"Getting Started","text":"<p>kobs allows you to access all your Kubernetes Resources via a Web UI. Besides that kobs also allows you to improve you observability around you applications via Custom Resource Definitions.</p> <ul> <li> Kubernetes Resources</li> <li>\ufeff  Applications</li> <li> Users</li> <li> Teams</li> <li> Dashboards</li> </ul>"},{"location":"resources/applications/","title":"Applications","text":"<p>Applications are defined via the Application Custom Resource Definition. Applications can be used to improve the observability of your Kubernetes workloads. For that you can add metrics, logs, traces and other information via the different plugins to your Kubernetes resources.</p> <p>Applications can be accessed via the Applications page. By default it shows all the Applications, which are owned by a Team a User is part of. It is also possible to filter the list of Applications by clusters, namespaces, tags or search for them by their name.</p> <p></p> <p>You can also use the topology page to view the topology graph of your applications. For that you can use the <code>topology.dependencies</code> field in the Application CR to define the dependencies for an Application.</p> <p></p>"},{"location":"resources/applications/#specification","title":"Specification","text":"Field Type Description Required description string Provide a descriptions for the application with additional details. No tags []string A list of tags to describe the application. No links []Link A list of links (e.g. a link to the GitHub repository for this application). No teams []string A list of teams to define the ownership for the application. The provided names must match a <code>group</code> field in a defined Team CR. No topology Topology Set the topology settings for your application. This can be used to define dependencies or to add Application which are running outside of Kubernetes. No insights []Insight A list of insights for an Application, e.g. the most important metrics. No dashboards []Dashboard A list of dashboards, which should be shown for this application. No"},{"location":"resources/applications/#link","title":"Link","text":"Field Type Description Required title string Title for the link Yes link string The actuall link Yes"},{"location":"resources/applications/#topology","title":"Topology","text":"Field Type Description Required external boolean When this <code>true</code> the application will be marked as external. This means that we do not show the cluster and namespace of the Application CR in the UI, to allow users to also add Applications which are not running in a Kubernetes cluster. No dependencies []Dependency Add other applications as dependencies for this application. This can be used to render a topology graph for your applications. No"},{"location":"resources/applications/#dependency","title":"Dependency","text":"Field Type Description Required cluster string Cluster of the application, which should be added as dependency. If this field is omitted kobs will look in the same cluster as the application was created in. No namespace string Namespace of the application, which should be added as dependency. If this field is omitted kobs will look in the same namespace as the application was created in. No name string Name of the application, which should be added as dependency. Yes description string The description can be used to explain, why this application is a dependency of the current application. No"},{"location":"resources/applications/#insight","title":"Insight","text":"Field Type Description Required title string The title for the defined insight metric. Yes type string The type which should be used to display the insight metric. Currently the only valid value is <code>sparkline</code>. Yes unit string An optional unit for the metric. No mappings map A map of mappings, which should be displayed instead of the current metric value. No plugin Plugin The plugin, which should be used for the preview. Yes"},{"location":"resources/applications/#dashboard","title":"Dashboard","text":"<p>Define the dashboards, which should be used for the application.</p> Field Type Description Required cluster string Cluster of the dashboard. If this field is omitted kobs will look in the same cluster as the application was created in. No namespace string Namespace of the dashboard. If this field is omitted kobs will look in the same namespace as the application was created in. No name string Name of the dashboard. Note: You have not to provide a name, if you use the inline property. Yes title string Title for the dashboard Yes description string The description can be used to explain the content of the dashboard. No placeholders map A map of placeholders, whith the name as key and the value for the placeholder as value. More information for placeholders can be found in the documentation for Dashboards. No inline Inline Specify a complete dashboard within the reference. This can be used if you just use the dashboard within one application. No"},{"location":"resources/applications/#inline","title":"Inline","text":"Field Type Description Required hideToolbar boolean If this is <code>true</code> the toolbar will be hidden in the dashboard. No defaultTime boolean Set the default time interval used for a dashboard. Must be <code>last12Hours</code>, <code>last15Minutes</code>, <code>last1Day</code>, <code>last1Hour</code>, <code>last1Year</code>, <code>last2Days</code>, <code>last30Days</code>, <code>last30Minutes</code>, <code>last3Hours</code>, <code>last5Minutes</code>, <code>last6Hours</code>, <code>last6Months</code>, <code>last7Days</code> or <code>last90Days</code>. The default value is <code>last15Minutes</code>. No variables []Variable A list of variables, where the values are loaded by the specified plugin. No rows []Row A list of rows for the dashboard. Yes"},{"location":"resources/applications/#example","title":"Example","text":"<p>The following Application CR defines an kobs Application for Fluent Bit, to display, the resources, metrics and logs for Fluent Bit.</p> Application <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: fluent-bit\nnamespace: logging\nspec:\ndescription: Fluent Bit is a super fast, lightweight, and highly scalable logging and metrics processor and forwarder. It is the preferred choice for cloud and containerized environments.\ntags:\n- core-platform\n- observability\n- logging\nlinks:\n- title: GitHub\nlink: https://github.com/fluent/fluent-bit\n- title: Website\nlink: https://fluentbit.io\n- title: \"GitHub: klogs\"\nlink: https://github.com/kobsio/klogs\nteams:\n- product-diablo@staffbase.com\ntopology:\ndependencies:\n- name: clickhouse-logging\n\ninsights:\n- title: \"Fluent Bit: No Input\"\ntype: sparkline\nplugin:\nname: prometheus\ntype: prometheus\noptions:\nquery: count(sum(rate(fluentbit_input_bytes_total{namespace=\"logging\", pod=~\"fluent-bit-.*\", name=\"tail.0\"}[5m])) by (pod, name) == 0) or vector(0)\n- title: \"Fluent Bit: Output Errors\"\ntype: sparkline\nplugin:\nname: prometheus\ntype: prometheus\noptions:\nquery: sum(rate(fluentbit_output_errors_total[1m]))\n- title: \"klogs: Errors\"\ntype: sparkline\nplugin:\nname: prometheus\ntype: prometheus\noptions:\nquery: sum(rate(klogs_errors_total{namespace=\"logging\", pod=~\"fluent-bit-.*\"}[5m]))\n\ndashboards:\n- namespace: kobs\nname: overview\ntitle: Overview\nplaceholders:\ncluster: \"&lt;% $.cluster %&gt;\"\nnamespace: \"&lt;% $.namespace %&gt;\"\nname: \"&lt;% $.name %&gt;\"\nresources: |\n- pods\n- daemonsets\nparam: app=&lt;% $.name %&gt;\n- namespace: kobs\nname: resource-usage\ntitle: Resource Usage\nplaceholders:\nnamespace: \"&lt;% $.namespace %&gt;\"\npod: \"&lt;% $.name %&gt;-.*\"\nverticalpodautoscaler: \"&lt;% $.name %&gt;\"\n- title: Metrics\ninline:\nrows:\n- panels:\n- title: Fluent Bits\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- query: &gt;-\nsum(kube_pod_info{namespace=\"logging\",\npod=~\"fluent-bit-.*\"})\ntype: sparkline\nh: 4\nw: 6\nx: 0\n'y': 0\n- title: Ready Nodes\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- query: &gt;-\nsum(kube_node_status_condition{condition=\"Ready\",status=\"true\"})\ntype: sparkline\nh: 4\nw: 6\nx: 6\n'y': 0\n- title: Input / Output Diff\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- label: Input / Output Diff\nquery: &gt;-\nabs(sum(rate(fluentbit_input_records_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) -\nsum(rate(klogs_batch_size_sum{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])))\nstacked: true\ntype: area\nh: 4\nw: 12\nx: 0\n'y': 4\n- title: Fluent Bit\npanels:\n- title: Input Bytes Processing Rate\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: '{% .name %}'\nquery: &gt;-\nsum(rate(fluentbit_input_bytes_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (name) / 1024 / 1024\nstacked: true\ntype: area\nunit: MiB/s\nh: 9\nw: 6\nx: 0\n'y': 0\n- title: Output Bytes Processing Rate\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: '{% .name %}'\nquery: &gt;-\nsum(rate(fluentbit_output_proc_bytes_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (name) / 1024 / 1024\nstacked: true\ntype: area\nunit: MiB/s\nh: 9\nw: 6\nx: 6\n'y': 0\n- title: Input Records Processing Rate\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: '{% .name %}'\nquery: &gt;-\nsum(rate(fluentbit_input_records_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (name)\nstacked: true\ntype: area\nunit: rps\nh: 9\nw: 6\nx: 0\n'y': 9\n- title: Output Record Processing Rate\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: '{% .name %}'\nquery: &gt;-\nsum(rate(fluentbit_output_proc_records_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (name)\nstacked: true\ntype: area\nunit: rps\nh: 9\nw: 6\nx: 6\n'y': 9\n- title: Output Retry/Failed-Rytry Rate\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: Retries to {% .name %}\nquery: &gt;-\nsum(rate(fluentbit_output_retries_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (name)\n- label: Failed Retries to {% .name %}\nquery: &gt;-\nsum(rate(fluentbit_output_retries_failed_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (name)\nstacked: true\ntype: area\nh: 9\nw: 6\nx: 0\n'y': 18\n- title: Output Error Rate\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: '{% .name %}'\nquery: &gt;-\nsum(rate(fluentbit_output_errors_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (name)\nstacked: true\ntype: area\nh: 9\nw: 6\nx: 6\n'y': 18\n- title: klogs\npanels:\n- title: Input Records Processing Rate\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: Input Rate\nquery: &gt;-\nsum(rate(klogs_input_records_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m]))\nstacked: true\ntype: area\nunit: rps\nh: 9\nw: 6\nx: 0\n'y': 0\n- title: Output Record Processing Rate\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: Output Rate\nquery: &gt;-\nsum(rate(klogs_batch_size_sum{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m]))\nstacked: true\ntype: area\nunit: rps\nh: 9\nw: 6\nx: 6\n'y': 0\n- title: Errors\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: Errors\nquery: &gt;-\nsum(rate(klogs_errors_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m]))\nstacked: true\ntype: area\nunit: rps\nh: 9\nw: 6\nx: 0\n'y': 9\n- title: Avg. Flush Time\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: Flush Time\nquery: &gt;-\nsum(rate(klogs_flush_time_seconds_sum{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) /\nsum(rate(klogs_flush_time_seconds_count{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m]))\nstacked: true\ntype: area\nunit: s\nh: 9\nw: 6\nx: 6\n'y': 9\n- title: Hosts\nautoHeight: true\npanels:\n- title: Stats\nplugin:\ntype: prometheus\nname: prometheus\noptions:\ncolumns:\n- name: instance\ntitle: Host\n- name: value-2\ntitle: Fluent Bit Input Records Processing Rate\nunit: rps\n- name: value-3\ntitle: Fluent Bit Output Records Processing Rate\nunit: rps\n- name: value-4\ntitle: Fluent Bit Output Error Rate\n- name: value-5\ntitle: klogs Input Records Processing Rate\nunit: rps\n- name: value-6\ntitle: klogs Output Records Processing Rate\nunit: rps\n- name: value-7\ntitle: klogs Output Error Rate\nqueries:\n- label: '{% .instance %}'\nquery: sum(node_exporter_build_info) by (instance)\n- label: '{% .instance %}'\nquery: &gt;-\nsum(rate(fluentbit_input_records_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (instance)\n- label: '{% .instance %}'\nquery: &gt;-\nsum(rate(fluentbit_output_proc_records_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (instance)\n- label: '{% .instance %}'\nquery: &gt;-\nsum(rate(fluentbit_output_errors_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (instance)\n- label: '{% .instance %}'\nquery: &gt;-\nsum(rate(klogs_input_records_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (instance)\n- label: '{% .instance %}'\nquery: &gt;-\nsum(rate(klogs_batch_size_sum{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (instance)\n- label: '{% .instance %}'\nquery: &gt;-\nsum(rate(klogs_errors_total{namespace=\"logging\",\npod=~\"fluent-bit-.*\"}[5m])) by (instance)\ntype: table\nh: 9\nw: 12\nx: 0\n'y': 0\n- panels:\n- title: Number of Logs\nplugin:\ntype: klogs\nname: klogs\noptions:\naggregation:\nchart: bar\nhorizontalAxisField: host\nhorizontalAxisLimit: 100\nhorizontalAxisOperation: top\nhorizontalAxisOrder: descending\nverticalAxisOperation: count\nquery: namespace!=''\ntype: aggregation\nh: 9\nw: 12\nx: 0\n'y': 0\n- namespace: kobs\nname: overview-logs\ntitle: Logs\nplaceholders:\ncluster: \"&lt;% $.cluster %&gt;\"\nnamespace: \"&lt;% $.namespace %&gt;\"\nname: \"&lt;% $.name %&gt;\"\nqueries: |\n- name: Fluent Bit Logs\nquery: \"namespace='logging' _and_ app='fluent-bit' _and_ container_name='fluent-bit'\"\nfields:\n- pod_name\n- host\n- log\n- name: klogs Plugin\nquery: \"namespace='logging' _and_ app='fluent-bit' _and_ container_name='fluent-bit' _and_ _exists_ content_caller\"\nfields:\n- pod_name\n- host\n- log\n- name: Fluent Bit Error, Warning and Fatal Logs\nquery: \"namespace='logging' _and_ app='fluent-bit' _and_ container_name='fluent-bit' _and_ (log=~'%warn%' _or_ log=~'%error%' _or_ log=~'%fatal%')\"\nfields:\n- pod_name\n- host\n- log\n- namespace: kobs\nname: overview-cicd\ntitle: CI/CD\nplaceholders:\ncluster: \"&lt;% $.cluster %&gt;\"\nnamespace: \"&lt;% $.namespace %&gt;\"\nname: \"&lt;% $.name %&gt;\"\ncontainer: \"&lt;% $.name %&gt;\"\ntype: daemonset\n- namespace: kobs\nname: kyverno-policies\ntitle: Policies\nplaceholders:\nnamespace: &lt;% $.namespace %&gt;\n</code></pre> <p>In the fowlling you can find some screenshots how the above application will look in kobs. The application contains the DaemonSet and Pods, which are related to Fluent Bit. It also uses the Prometheus plugin to display metrics and the klogs plugin to display the logs.</p>"},{"location":"resources/applications/#overview","title":"Overview","text":""},{"location":"resources/applications/#metrics","title":"Metrics","text":""},{"location":"resources/applications/#logs","title":"Logs","text":""},{"location":"resources/dashboards/","title":"Dashboards","text":"<p>Dashboards are defined via the Dashboard Custom Resource Definition. Dashboards are used to add additional information for applications, users and teams via all the configured plugins.</p>"},{"location":"resources/dashboards/#specification","title":"Specification","text":"Field Type Description Required description string Provide a descriptions for the dashboard with additional details. No hideToolbar boolean If this is <code>true</code> the toolbar will be hidden in the dashboard. No defaultTime boolean Set the default time interval used for a dashboard. Must be <code>last12Hours</code>, <code>last15Minutes</code>, <code>last1Day</code>, <code>last1Hour</code>, <code>last1Year</code>, <code>last2Days</code>, <code>last30Days</code>, <code>last30Minutes</code>, <code>last3Hours</code>, <code>last5Minutes</code>, <code>last6Hours</code>, <code>last6Months</code>, <code>last7Days</code> or <code>last90Days</code>. The default value is <code>last15Minutes</code>. No placeholders []Placeholder A list of placeholders, which can be directly set by the user. No variables []Variable A list of variables, where the values are loaded by the specified plugin. No rows []Row A list of rows for the dashboard. Yes"},{"location":"resources/dashboards/#placeholder","title":"Placeholder","text":"Field Type Description Required name string The name for the placeholder, which can be used in the dashboard via <code>{% .&lt;placeholder-name&gt; %}</code>. Yes description string An optional description, to provide more information how the placeholder is used. No default string A default value for the placeholder, when it is not provided in a dashboard reference. No type string The type of the placeholder value. This could be <code>string</code>, <code>number</code> or <code>object</code>. The default value is <code>string</code>. No"},{"location":"resources/dashboards/#variable","title":"Variable","text":"Field Type Description Required name string The name of the variable, which can be used in the dashboard via <code>{% .&lt;variable-name&gt; %}</code>. Yes label string An optional label, which is shown in the UI instead of the variable name. No hide boolean Hide the variable in the UI. No includeAllOption boolean Add a special value, which includes all other values for the variable No plugin Plugin The plugin, which should be used to get the values for the variable. Yes <p>Note</p> <p>Dashboards are also supporting some special variables, which always can be used and must not be defined by a users. These variables are:</p> <ul> <li><code>__timeStart</code>: The start time of the selected time range in seconds. This variable can be used via <code>{% .__timeStart %}</code> in a dashboard.</li> <li><code>__timeEnd</code>: The end time of the selected time range in seconds. This variable can be used via <code>{% .__timeEnd %}</code> in a dashboard.</li> </ul>"},{"location":"resources/dashboards/#row","title":"Row","text":"Field Type Description Required title string The title for a row. No description string The description for the row, to provide additional details about the content of the row. No if string An optional condition which must evaluate to <code>true</code> so that the row is displayed. For example the following condition checks that the <code>dashboards</code> placeholder is not empty, to display a row: <code>'\"{% .dashboards %}\" !== \"\"'</code> No autoHeight string Automatically calculate the height of all panels for a row, based on the panel content. No panels []Panel A list of panels for the row. Yes"},{"location":"resources/dashboards/#panel","title":"Panel","text":"Field Type Description Required title string The title of the panel. Yes description string An optional description with additional information about the panel. No x number The x coordinate of the panel in the row. Yes y number The y coordinate of the panel in the row. Yes w number The width of the panel. Yes h number The height of the panel. Yes plugin Plugin The plugin which should be displayed in the panel. Yes"},{"location":"resources/dashboards/#example","title":"Example","text":"<p>The following dashboard can be used to display the resource usage of the containers in a pod. It can be used within an application and can be customized via the <code>namespace</code> and <code>pod</code> placeholders.</p> Dashboard <pre><code>---\napiVersion: kobs.io/v1\nkind: Dashboard\nmetadata:\nname: resource-usage\nnamespace: kobs\nspec:\ndescription: Resources Usage of Pods\nplaceholders:\n- name: namespace\ndescription: |\nThe namespace of the application, e.g.\nnamespace: \"&lt;% $.namespace %&gt;\"\n- name: pod\ndescription: |\nA selector for the Pods of the application,\nmust be a valid PromQL selector, e.g.\npod: \"&lt;% $.name %&gt;-.*\"\n- name: verticalpodautoscaler\ndescription: |\nThe identifier for the VerticalPodAutoscaler,\nmust be a valid PromQL selector, e.g.\nverticalpodautoscaler: \"&lt;% $.name %&gt;\"\nvariables:\n- name: var_pod\nlabel: Pod\nincludeAllOption: false\nplugin:\nname: prometheus\ntype: prometheus\noptions:\ntype: labelValues\nlabel: pod\nquery: container_cpu_usage_seconds_total{namespace=\"{% .namespace %}\", image!=\"\", pod=~\"{% .pod %}\", container!=\"POD\", container!=\"\"}\n- name: var_container\nlabel: Container\nincludeAllOption: true\nplugin:\nname: prometheus\ntype: prometheus\noptions:\ntype: labelValues\nlabel: container\nquery: container_cpu_usage_seconds_total{namespace=\"{% .namespace %}\", image!=\"\", pod=~\"{% .var_pod %}\", container!=\"POD\", container!=\"\"}\nrows:\n- panels:\n- title: CPU Usage\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- query: &gt;-\nsum(rate(container_cpu_usage_seconds_total{namespace=\"{%\n.namespace %}\", image!=\"\", pod=~\"{% .var_pod %}\",\ncontainer!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}[2m]))\ntype: sparkline\nunit: Cores\nh: 4\nw: 4\nx: 0\n'y': 0\n- title: Memory Usage\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- query: &gt;-\nsum(container_memory_working_set_bytes{namespace=\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\", container!=\"POD\",\ncontainer!=\"\", container=~\"{% .var_container %}\"}) /\n1024 / 1024\ntype: sparkline\nunit: MiB\nh: 4\nw: 4\nx: 4\n'y': 0\n- title: Restarts\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- query: &gt;-\nkube_pod_container_status_restarts_total{namespace=\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\", container=~\"{%\n.var_container %}\"}\ntype: sparkline\nh: 4\nw: 4\nx: 8\n'y': 0\n- panels:\n- title: CPU Usage\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: 'Usage: {% .container %}'\nquery: &gt;-\nsum(rate(container_cpu_usage_seconds_total{namespace=\"{%\n.namespace %}\", image!=\"\", pod=~\"{% .var_pod %}\",\ncontainer!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}[2m])) by (container)\n- label: 'Request: {% .container %}'\nquery: &gt;-\nsum(kube_pod_container_resource_requests{namespace=\"{%\n.namespace %}\", resource=\"cpu\", pod=~\"{% .var_pod %}\",\ncontainer!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}) by (container)\ntype: line\nunit: Cores\nh: 9\nw: 6\nx: 0\n'y': 0\n- title: Memory Usage\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nlegend: table\nqueries:\n- label: 'Usage: {% .container %}'\nquery: &gt;-\nsum(container_memory_working_set_bytes{namespace=\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\", container!=\"POD\",\ncontainer!=\"\", container=~\"{% .var_container %}\"}) by\n(container) / 1024 / 1024\n- label: 'Request: {% .container %}'\nquery: &gt;-\nsum(kube_pod_container_resource_requests{namespace=\"{%\n.namespace %}\", resource=\"memory\", pod=~\"{% .var_pod\n%}\", container!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}) by (container) / 1024 / 1024\n- label: 'Limits: {% .container %}'\nquery: &gt;-\nsum(kube_pod_container_resource_limits{namespace=\"{%\n.namespace %}\", resource=\"memory\", pod=~\"{% .var_pod\n%}\", container!=\"POD\", container!=\"\", container=~\"{%\n.var_container %}\"}) by (container) / 1024 / 1024\ntype: line\nunit: MiB\nh: 9\nw: 6\nx: 6\n'y': 0\n- panels:\n- title: Ressource Recommendations\nplugin:\ntype: prometheus\nname: prometheus\noptions:\ncolumns:\n- name: target_name\ntitle: Target\n- name: container\ntitle: Container\n- name: value-1\ntitle: Recommended CPU\nunit: m\n- name: value-2\ntitle: Recommended Memory\nunit: Mi\nqueries:\n- label: '{% .target_name %} - {% .container %}'\nquery: &gt;-\nmax(max_over_time(kube_verticalpodautoscaler_status_recommendation_containerrecommendations_target{namespace=\"{%\n.namespace %}\", container!=\"POD\", container!=\"\", container=~\"{% .var_container %}\",\nresource=\"cpu\", verticalpodautoscaler=~\"{%\n.verticalpodautoscaler %}\"}[7d]) * 1000) by\n(target_name, container)\n- label: '{% .target_name %} - {% .container %}'\nquery: &gt;-\nmax(round(max_over_time(kube_verticalpodautoscaler_status_recommendation_containerrecommendations_target{namespace=\"{%\n.namespace %}\", container!=\"POD\", container!=\"\", container=~\"{% .var_container %}\",\nresource=\"memory\", verticalpodautoscaler=~\"{%\n.verticalpodautoscaler %}\"}[7d]) / 1000 / 1000)) by\n(target_name, container)\ntype: table\nh: 9\nw: 12\nx: 0\n'y': 0\nautoHeight: true\ndescription: ''\nif: '\"{% .verticalpodautoscaler %}\" !== \"\"'\n- title: Network\npanels:\n- title: Bandwidth\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- label: Received\nquery: &gt;-\nsum(irate(container_network_receive_bytes_total{namespace=\"{%\n.namespace %}\", pod=\"{% .var_pod %}\"}[2m])) by (pod)\n- label: Transmitted\nquery: &gt;-\n-sum(irate(container_network_transmit_bytes_total{namespace=\"{%\n.namespace %}\", pod=\"{% .var_pod %}\"}[2m])) by (pod)\ntype: area\nunit: bytes/s\nh: 9\nw: 12\nx: 0\n'y': 0\n- title: Rate of Packets\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- label: Received\nquery: &gt;-\nsum(irate(container_network_receive_packets_total{namespace=~\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\"}[2m])) by (pod)\n- label: Transmitted\nquery: &gt;-\n-sum(irate(container_network_transmit_packets_total{namespace=~\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\"}[2m])) by (pod)\ntype: area\nunit: p/s\nh: 9\nw: 6\nx: 0\n'y': 9\n- title: Rate of Packets Dropped\nplugin:\ntype: prometheus\nname: prometheus\noptions:\nqueries:\n- label: Received\nquery: &gt;-\nsum(irate(container_network_receive_packets_dropped_total{namespace=~\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\"}[2m])) by (pod)\n- label: Transmitted\nquery: &gt;-\n-sum(irate(container_network_transmit_packets_dropped_total{namespace=~\"{%\n.namespace %}\", pod=~\"{% .var_pod %}\"}[2m])) by (pod)\ntype: area\nunit: p/s\nh: 9\nw: 6\nx: 6\n'y': 9\n</code></pre> <p></p> <p>The following example shows how complex types for placeholders can be used. In the example the <code>grafana-dashboards</code> dashboard requires a list of dashboards via the <code>dashboards</code> placeholder.</p> Dashboard <pre><code>---\napiVersion: kobs.io/v1\nkind: Dashboard\nmetadata:\nname: grafana-dashboards\nnamespace: kobs\nspec:\nplaceholders:\n- name: dashboards\ntype: object\nrows:\n- if: '\"{% .dashboards %}\" !== \"\"'\nautoHeight: true\npanels:\n- title: Grafana Dashboards\nplugin:\nname: grafana\ntype: grafana\noptions:\ntype: dashboards\ndashboards: '{% .dashboards %}'\nh: 6\nw: 12\nx: 0\n'y': 0\n</code></pre> Application <pre><code>---\napiVersion: kobs.io/v1\nkind: Application\nmetadata:\nname: kobs\nnamespace: kobs\nspec:\ndashboards:\n- namespace: kobs\nname: test\ntitle: Grafana Dashboards\nplaceholders:\ndashboards: |\n- \"vErzsZIVk\"\n- \"Tf1skG8Mz\"\n- \"iyJszGUMk\"\n</code></pre>"},{"location":"resources/kubernetes-resources/","title":"Kubernetes Resources","text":"<p>kobs supports all Kubernetes objects like Pods, Deployments, StatefulSets and Custom Resources.</p> <p>Note</p> <p>Ensure that the satellite has enough permissions to retrieve all these resources from the Kubernetes API server. If you are using the Helm chart or Kustomize to install kobs, it will automatically create the correct Cluster Role and Cluster Role Binding, so that you can view, but not edit all these resources.</p> <p>On the Kubernetes Resources page in kobs you can view all the resources available in your clusters. You can filter the list by clusters, namespaces and resources. You can also specify a label or field selector.</p> <p></p> <p>By selecting an item in the table, you can view more details for this resource. All the details can be found in the \"Overview\" tab.</p> <p></p> <p>If you want to view the Yaml representation of the resource you can select the corresponding tab.</p> <p></p> <p>Next to the yaml representation, you find a second tab \"Events\", which shows all events, which are related to the selected object. The events are retrieved with a field selector and the name of the resource: <code>fieldSelector=involvedObject.name=&lt;NAME-OF-THE-RESOURCE&gt;</code>.</p> <p></p>"},{"location":"resources/kubernetes-resources/#actions","title":"Actions","text":"<p>kobs provides several actions for all Kubernetes resources. These actions can be found in the upper right corner in the details view next to the close icon. For each resource it is possible to edit and delete the selected resource.</p> <p>Next to these default actions, kobs also has some other actions for some resources:</p> <ul> <li>Scale Deployments, StatefulSets and ReplicaSets (<code>kubectl scale --replicas=3 deployment/bookinfo</code>)</li> <li>Restart DaemonSets, Deployments and StatefulSets (<code>kubectl rollout restart deployment bookinfo</code>)</li> <li>Trigger a CronJob manually (<code>kubectl create job --from=cronjob/backup backup-manual-qg0qjf</code>)</li> <li>View the logs of a Pod (<code>kubectl logs productpage-v1-55fb45c999-c8bvg</code>).</li> <li>Get a shell into a Pod (<code>kubectl exec -it productpage-v1-55fb45c999-c8bvg -c istio-proxy -- bash</code>).</li> </ul> <p></p>"},{"location":"resources/kubernetes-resources/#dashboards","title":"Dashboards","text":"<p>You can specify a list of dashboards for your Kubernetes resources, to get additional information. For example you can add a dashboard to a Pod to get the resource usage metrics from Prometheus or you can add a dashboard to a Deployment to view all the logs from Elasticsearch for this Deployment.</p> <p>The dashboards can be configured via the <code>kobs.io/dashboards</code> annotation. They follow the same syntax as they can be configured for applications, users and teams.</p> <p>You can use JSONPath within the dashboard specification, to use a value from the resource manifest in the dashboard, e.g. the name of the Pod <code>&lt;% $.metadata.name %&gt;</code>.</p> <p>Note</p> <p>We are using the jsonpath-plus to extract the content from the Kubernetes objects. A list of examples can be found within the documentation of the module.</p> <p>In the following example we are adding the <code>resource-usage</code> dashboard to the <code>fluent-bit</code> daemonset and the <code>resource-usage</code> dashboard to the pods of the daemonset. We are also using the name of a pod (<code>&lt;% $.metadata.name %&gt;</code>) as placeholder in the dashboard.</p> <pre><code>---\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\nname: fluent-bit\nnamespace: logging\nlabels:\napp: productpage\nversion: v1\nannotations:\nkobs.io/dashboards: |\n[\n{\n\"name\": \"resource-usage\",\n\"namespace\": \"kobs\",\n\"title\": \"Resource Usage\",\n\"placeholders\": {\n\"namespace\": \"&lt;% $.metadata.namespace %&gt;\",\n\"pod\": \"&lt;% $.metadata.name %&gt;-.*\"\n}\n},\n]\nspec:\nselector:\nmatchLabels:\napp: fluent-bit\ntemplate:\nmetadata:\nannotations:\nkobs.io/dashboards: |\n[\n{\n\"name\": \"resource-usage\",\n\"namespace\": \"kobs\",\n\"title\": \"Resource Usage\",\n\"placeholders\": {\n\"namespace\": \"&lt;% $.metadata.namespace %&gt;\",\n\"pod\": \"&lt;% $.metadata.name %&gt;\"\n}\n},\n]\nlabels:\napp: fluent-bit\nspec:\ncontainers:\n- name: fluent-bit\n</code></pre> <p></p>"},{"location":"resources/teams/","title":"Teams","text":"<p>Teams are defined via the Team Custom Resource Definition. Teams can be used to define the ownership for applications and to grant users access to several resources.</p> <p>You can access all teams / the teams you are allowed to see via the teams page.</p> <p></p>"},{"location":"resources/teams/#specification","title":"Specification","text":"<p>In the following you can found the specification for the Team CRD.</p> Field Type Description Required id string The id of the team. This value is also used for the refrence in Applications and User CRs. Yes description string A description for the team. No links []Link A list of links (e.g. a link to the teams Slack channel, Confluence page, etc.) No logo string The logo for the team. Must be a path to an image file. No permissions Permissions Permissions for the team when the authentication / authorization middleware is enabled. No dashboards []Dashboard A list of dashboards which will be shown on the team page. No"},{"location":"resources/teams/#link","title":"Link","text":"Field Type Description Required title string Title for the link. Yes link string The actuall link. Yes"},{"location":"resources/teams/#example","title":"Example","text":"<p>The following CR creates a team with the id <code>product-cloudpunk@kobs.io</code>. The details page for the team contains a dashboard, which shows the applications owned by the team, the teams open Opsgenie alerts and the team current sprint.</p> <p>In the CR we also define that every member of the team can view all applications, teams and all resources from the <code>backend</code>, <code>notes</code>, <code>mediaserver</code> and <code>media-analytics</code> namespace.</p> Team <pre><code>---\napiVersion: kobs.io/v1\nkind: Team\nmetadata:\nname: team-cloudpunk\nnamespace: kobs\nspec:\nid: product-cloudpunk@kobs.io\ndescription: Team Cloudpunk - the media handlers.\nlinks:\n- title: Slack\nlink: https://slack.com\n- title: GitHub\nlink: https://github.com\n- title: Confluence\nlink: https://atlassian.net\n\ndashboards:\n- namespace: kobs\nname: overview-team\ntitle: Overview\nplaceholders:\nteam: \"&lt;% $.id %&gt;\"\njira: CLP\nopsgenie: Team Cloudpunk\n\npermissions:\napplications:\n- type: all\nteams:\n- \"*\"\nplugins:\n- cluster: \"*\"\nname: \"*\"\ntype: \"*\"\nresources:\n- clusters:\n- \"*\"\nnamespaces:\n- \"backend\"\n- \"notes\"\n- \"mediaserver\"\n- \"media-analytics\"\nresources:\n- \"*\"\nverbs:\n- \"*\"\n</code></pre> Dashboard <pre><code>---\napiVersion: kobs.io/v1\nkind: Dashboard\nmetadata:\nname: overview-team\nnamespace: kobs\nspec:\nplaceholders:\n- name: team\n- name: jira\n- name: opsgenie\nhideToolbar: true\nrows:\n- panels:\n- title: Applications\nplugin:\ntype: core\nname: applications\noptions:\nteam: \"{% .team %}\"\nh: 16\nw: 6\nx: 0\n'y': 0\n- title: Open Alerts\nplugin:\ntype: opsgenie\ncluster: hub\nname: opsgenie\noptions:\ninterval: 31536000\nqueries:\n- 'status: open AND responders: \"{% .opsgenie %}\"'\ntype: alerts\nh: 8\nw: 6\nx: 6\n'y': 0\n- title: Current Sprint\nplugin:\ntype: jira\ncluster: hub\nname: jira\noptions:\njql: &gt;-\nproject = {% .jira %} and sprint in openSprints() order by\nupdatedDate\nh: 8\nw: 6\nx: 6\n'y': 8\n</code></pre> <p></p>"},{"location":"resources/users/","title":"Users","text":"<p>Users are defined via the User Custom Resource Definition. Users can be used to define the username and password for the authentication of users, their permissions within kobs, navigation and dashboards.</p> <p></p>"},{"location":"resources/users/#specification","title":"Specification","text":"<p>In the following you can found the specification for the User CRD.</p> Field Type Description Required id string The <code>id</code> of the authenticated user (e.g. the users email address). Yes displayName string The name of the user, how it should be displayed in the frontend. No password string The password of the user. A password could be generated using the following command <code>htpasswd -nBC 10 \"\" | tr -d ':\\n'</code> No teams []string A list of teams where the user is a member of. No permissions Permissions Permissions for the user when the authentication / authorization middleware is enabled. No dashboards []Dashboard A list of dashboards which will be shown on the users home page. No navigation []Navigation A list of navigation items which will be shown in the sidebar. No"},{"location":"resources/users/#permissions","title":"Permissions","text":"Field Type Description Required applications []Application Define a list of application permissions, to specify which applications can be accessed by a user Yes teams []string Define a list of teams (must match the corresponding <code>group</code> field of a team) which can be viewed by a user. The specifal character <code>*</code> can be used to allow a user to view all teams Yes plugins []Plugin A list of plugins, which can be accessed by a user. Yes resources []Resources A list of resources, which can be accessed by the user. Yes"},{"location":"resources/users/#application","title":"Application","text":"Field Type Description Required type string The type which should be used for the application permissions. This must be <code>all</code> to allow access to all applications, <code>own</code> to only allow access to applications owned by a team where the user is part of or <code>custom</code> to set the permissions based on satellites, clusters and namespaces. Yes clusters []string A list of clusters from which applications can be accessed by the user, when the permission type is <code>custom</code>. The special character <code>*</code> can be used to include all clusters. No namespaces []string A list of namespaces from which applications can be accessed by the user, when the permission type is <code>custom</code>. The special character <code>*</code> can be used to include all namespaces. No"},{"location":"resources/users/#plugin","title":"Plugin","text":"Field Type Description Required cluster string The cluster of the plugin instance, where it is configured. The special character <code>*</code> can be used to include all clusters. Yes name string The name of the plugin instance as it is defined in the configuration. The special character <code>*</code> can be used to include all names. Yes type string The type of the plugin instance as it is defined in the configuration. The special character <code>*</code> can be used to include all types. Yes permissions any The permissions, which should be grant to a user. The format of this property is different for each plugin. You can find an example for each plugin on the corresponding plugin page in the documentation. No"},{"location":"resources/users/#resources","title":"Resources","text":"Field Type Description Required clusters []string A list of clusters to allow access to. The special list entry <code>*</code> allows access to all clusters. Yes namespaces []string A list of namespaces to allow access to. The special list entry <code>*</code> allows access to all namespaces. Yes resources []string A list of resources to allow access to. The special list entry <code>*</code> allows access to all resources. Yes verbs []string A list of verbs to allow access to. The following verbs are possible: <code>get</code>, <code>patch</code>, <code>post</code>, <code>delete</code> and <code>*</code>. The special list entry <code>*</code> allows access for all verbs. Yes <p>Note</p> <p>The following strings can be used in the resources list: <code>cronjobs</code>, <code>daemonsets</code>, <code>deployments</code>, <code>jobs</code>, <code>pods</code>, <code>replicasets</code>, <code>statefulsets</code>, <code>endpoints</code>, <code>horizontalpodautoscalers</code>, <code>ingresses</code>, <code>networkpolicies</code>, <code>services</code>, <code>configmaps</code>, <code>persistentvolumeclaims</code>, <code>persistentvolumes</code>, <code>poddisruptionbudgets</code>, <code>secrets</code>, <code>serviceaccounts</code>, <code>storageclasses</code>, <code>clusterrolebindings</code>, <code>clusterroles</code>, <code>rolebindings</code>, <code>roles</code>, <code>events</code>, <code>nodes</code>.</p> <p>The special terms <code>pods/log</code> and <code>pods/exec</code> can be used to allow users to get the logs or a terminal for a Pod. To download / upload a file from / to a Pod a user also needs the <code>pods/exec</code> resource. The <code>pods/log</code> and <code>pods/exec</code> permission can only be set together with the <code>*</code> value for the <code>verbs</code> parameter.</p> <p>A Custom Resource can be specified in the following form <code>&lt;name&gt;.&lt;group&gt;/&lt;version&gt;</code> (e.g. <code>vaultsecrets.ricoberger.de/v1alpha1</code>).</p>"},{"location":"resources/users/#navigation","title":"Navigation","text":"Field Type Description Required name string The name of the navigation group as it is shown in the sidebar. No items []Item A list of sidebar items which should be displayed within this group. No"},{"location":"resources/users/#item","title":"Item","text":"Field Type Description Required name string The name for navigation item as it is shown in the sidebar. Yes icon string The icon which should be used for the sidebar item. Must be <code>apps</code>, <code>barChart</code>, <code>dashboard</code>, <code>default</code>, <code>documentation</code>, <code>donutChart</code>, <code>grid</code>, <code>home</code>, <code>kubernetes</code>, <code>lineChart</code>, <code>list</code>, <code>pieChart</code>, <code>plugin</code>, <code>search</code>, <code>table</code>, <code>team</code>, <code>topology</code>, <code>user</code> or <code>widgets</code>. No link string The link which is opened when a user clicks on the sidebar item. No page Page The page which should be opened when a user clicks on the sidebar item. No items []SubItem A list of subitems when the sidebar item should not open a link or page and is used as an additional group. No"},{"location":"resources/users/#subitem","title":"SubItem","text":"Field Type Description Required name string The name for navigation item as it is shown in the sidebar. Yes link string The link which is opened when a user clicks on the sidebar item. No page Page The page which should be opened when a user clicks on the sidebar item. No"},{"location":"resources/users/#page","title":"Page","text":"Field Type Description Required title string The title of the page. Yes description string A description of the page. Yes dashboards []Dashboard A list of dashboards which will be shown on the page. Yes"},{"location":"resources/users/#example","title":"Example","text":"<p>In the CR defines that the user with the email <code>rico@kobs.io</code> can view all applications and teams. He can also view the Helm charts in the <code>bookinfo</code> and <code>kobs</code> namespace and can use the Opsgenie plugin. Besides that he can also list, edit and delete all resources in the <code>bookinfo</code> and <code>kobs</code> namespace.</p> <p>The following CR defines a new user <code>admin@kobs.io</code> who can view all applications and teams and resources. The user also defines a custom home page and a custom navigation. A screenshot of the home page and sidebar navigation for this user can be found at the start of the page.</p> User <pre><code>---\napiVersion: kobs.io/v1\nkind: User\nmetadata:\nname: ricoberger\nnamespace: kobs\nspec:\nid: admin@kobs.io\ndisplayName: Rico Berger\n# password: admin\npassword: $2y$10$GAzb7t1vqK0BYFQb84DnwuZx1TIIjEwMhMRjK0j6uv0B3djgWuSZu\nteams:\n- product-diablo@staffbase.com\npermissions:\napplications:\n- type: all\nteams:\n- \"*\"\nplugins:\n- cluster: \"*\"\nname: \"*\"\ntype: \"*\"\nresources:\n- clusters:\n- \"*\"\nnamespaces:\n- \"*\"\nresources:\n- \"*\"\nverbs:\n- \"*\"\nnavigation:\n- name: Home\nitems:\n- name: Home\nicon: home\nlink: \"/\"\n- name: Search\nicon: search\nlink: \"/search\"\n- name: Resources\nitems:\n- name: Applications\nicon: apps\nlink: \"/applications\"\n- name: Topology\nicon: topology\nlink: \"/topology\"\n- name: Teams\nicon: team\nlink: \"/teams\"\n- name: Kubernetes Resources\nicon: kubernetes\nlink: \"/resources\"\n- name: Plugins\nicon: plugin\nlink: \"/plugins\"\n- name: Dashboards\nitems:\n- name: Cluster Overview\nicon: dashboard\nitems:\n- name: dev/de1\npage:\ntitle: dev/de1\ndescription: Cluster overview for the dev/de1 cluster\ndashboards:\n- namespace: kobs\nname: cluster-overview\ntitle: Cluster Overview\nplaceholders:\ncluster: dev/de1\n- namespace: kobs\nname: service-mesh-overview\ntitle: Service Mesh Overview\nplaceholders:\ncluster: dev/de1\n- namespace: kobs\nname: loadbalancer-overview\ntitle: Load Balancer Overview\nplaceholders:\ncluster: dev/de1\n- name: stage/de1\npage:\ntitle: stage/de1\ndescription: Cluster overview for the stage/de1 cluster\ndashboards:\n- namespace: kobs\nname: cluster-overview\ntitle: Cluster Overview\nplaceholders:\ncluster: stage/de1\n- namespace: kobs\nname: service-mesh-overview\ntitle: Service Mesh Overview\nplaceholders:\ncluster: stage/de1\n- namespace: kobs\nname: loadbalancer-overview\ntitle: Load Balancer Overview\nplaceholders:\ncluster: stage/de1\n- name: prod/de1\npage:\ntitle: prod/de1\ndescription: Cluster overview for the prod/de1 cluster\ndashboards:\n- namespace: kobs\nname: cluster-overview\ntitle: Cluster Overview\nplaceholders:\ncluster: prod/de1\n- namespace: kobs\nname: service-mesh-overview\ntitle: Service Mesh Overview\nplaceholders:\ncluster: prod/de1\n- namespace: kobs\nname: loadbalancer-overview\ntitle: Load Balancer Overview\nplaceholders:\ncluster: prod/de1\ndashboards:\n- title: Home\ninline:\nhideToolbar: true\nrows:\n- autoHeight: false\npanels:\n- title: Applications\nw: 6\nh: 19\nplugin:\ntype: core\nname: applicationgroups\noptions:\ngroups:\n- namespace\n- name\nx: 0\n'y': 0\n- title: Teams\nw: 6\nh: 5\nplugin:\ntype: core\nname: teams\nx: 6\n'y': 0\n- description: ''\nplugin:\nname: opsgenie\ntype: opsgenie\ncluster: hub\noptions:\ntype: incidents\ninterval: 31536000\nqueries:\n- 'status: open'\n- 'status: resolved'\n- 'status: closed'\ntitle: Incidents\nh: 6\nw: 6\nx: 6\n'y': 5\n- description: ''\nplugin:\nname: opsgenie\ntype: opsgenie\ncluster: hub\noptions:\ntype: alerts\ninterval: 31536000\nqueries:\n- 'status: open AND responders: \"Team Diablo\"'\ntitle: Alerts\nh: 8\nw: 6\nx: 6\n'y': 11\ndescription: ''\nif: ''\n</code></pre>"}]}