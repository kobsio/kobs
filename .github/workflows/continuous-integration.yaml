name: Continuous Integration

on:
  pull_request:

jobs:
  go:
    name: Go
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Dependencies
        run: |
          go mod download

      - name: Vet
        run: |
          make vet

      - name: Test
        run: |
          make test-coverage
          cat coverage.out | grep -v "github.com/kobsio/kobs/pkg/cluster/kubernetes/apis" | grep -v "github.com/kobsio/kobs/pkg/cluster/kubernetes/clients" | grep -v "_mock.go" > coverage_modified.out; mv coverage_modified.out coverage.out

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out

      - name: Build
        run: |
          make build

  node:
    name: Node.js
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: app
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: |
          npm clean-install

      - name: Lint
        run: |
          npm run lint

      - name: Test
        run: |
          npm run test:coverage

      # todo: use matrix to simplify this
      - name: Upload Coverage "packages/app"
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: packages/app/coverage

      - name: Upload Coverage "packages/core"
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: packages/core/coverage
