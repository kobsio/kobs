// Code generated by MockGen. DO NOT EDIT.
// Source: instance.go

// Package instance is a generated GoMock package.
package instance

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	costmanagement "github.com/kobsio/kobs/pkg/plugins/azure/instance/costmanagement"
	kubernetesservices "github.com/kobsio/kobs/pkg/plugins/azure/instance/kubernetesservices"
	monitor "github.com/kobsio/kobs/pkg/plugins/azure/instance/monitor"
	resourcegroups "github.com/kobsio/kobs/pkg/plugins/azure/instance/resourcegroups"
	virtualmachinescalesets "github.com/kobsio/kobs/pkg/plugins/azure/instance/virtualmachinescalesets"
)

// MockInstance is a mock of Instance interface.
type MockInstance struct {
	ctrl     *gomock.Controller
	recorder *MockInstanceMockRecorder
}

// MockInstanceMockRecorder is the mock recorder for MockInstance.
type MockInstanceMockRecorder struct {
	mock *MockInstance
}

// NewMockInstance creates a new mock instance.
func NewMockInstance(ctrl *gomock.Controller) *MockInstance {
	mock := &MockInstance{ctrl: ctrl}
	mock.recorder = &MockInstanceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInstance) EXPECT() *MockInstanceMockRecorder {
	return m.recorder
}

// CostManagementClient mocks base method.
func (m *MockInstance) CostManagementClient() costmanagement.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CostManagementClient")
	ret0, _ := ret[0].(costmanagement.Client)
	return ret0
}

// CostManagementClient indicates an expected call of CostManagementClient.
func (mr *MockInstanceMockRecorder) CostManagementClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CostManagementClient", reflect.TypeOf((*MockInstance)(nil).CostManagementClient))
}

// GetName mocks base method.
func (m *MockInstance) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockInstanceMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockInstance)(nil).GetName))
}

// KubernetesServicesClient mocks base method.
func (m *MockInstance) KubernetesServicesClient() kubernetesservices.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "KubernetesServicesClient")
	ret0, _ := ret[0].(kubernetesservices.Client)
	return ret0
}

// KubernetesServicesClient indicates an expected call of KubernetesServicesClient.
func (mr *MockInstanceMockRecorder) KubernetesServicesClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "KubernetesServicesClient", reflect.TypeOf((*MockInstance)(nil).KubernetesServicesClient))
}

// MonitorClient mocks base method.
func (m *MockInstance) MonitorClient() monitor.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MonitorClient")
	ret0, _ := ret[0].(monitor.Client)
	return ret0
}

// MonitorClient indicates an expected call of MonitorClient.
func (mr *MockInstanceMockRecorder) MonitorClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MonitorClient", reflect.TypeOf((*MockInstance)(nil).MonitorClient))
}

// ResourceGroupsClient mocks base method.
func (m *MockInstance) ResourceGroupsClient() resourcegroups.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResourceGroupsClient")
	ret0, _ := ret[0].(resourcegroups.Client)
	return ret0
}

// ResourceGroupsClient indicates an expected call of ResourceGroupsClient.
func (mr *MockInstanceMockRecorder) ResourceGroupsClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResourceGroupsClient", reflect.TypeOf((*MockInstance)(nil).ResourceGroupsClient))
}

// VirtualMachineScaleSetsClient mocks base method.
func (m *MockInstance) VirtualMachineScaleSetsClient() virtualmachinescalesets.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VirtualMachineScaleSetsClient")
	ret0, _ := ret[0].(virtualmachinescalesets.Client)
	return ret0
}

// VirtualMachineScaleSetsClient indicates an expected call of VirtualMachineScaleSetsClient.
func (mr *MockInstanceMockRecorder) VirtualMachineScaleSetsClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VirtualMachineScaleSetsClient", reflect.TypeOf((*MockInstance)(nil).VirtualMachineScaleSetsClient))
}
