// Code generated by MockGen. DO NOT EDIT.
// Source: providers.go

// Package providers is a generated GoMock package.
package providers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	shared "github.com/kobsio/kobs/pkg/plugins/techdocs/shared"
)

// MockProvider is a mock of Provider interface.
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *MockProviderMockRecorder
}

// MockProviderMockRecorder is the mock recorder for MockProvider.
type MockProviderMockRecorder struct {
	mock *MockProvider
}

// NewMockProvider creates a new mock instance.
func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &MockProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProvider) EXPECT() *MockProviderMockRecorder {
	return m.recorder
}

// GetFile mocks base method.
func (m *MockProvider) GetFile(ctx context.Context, service, path string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFile", ctx, service, path)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFile indicates an expected call of GetFile.
func (mr *MockProviderMockRecorder) GetFile(ctx, service, path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*MockProvider)(nil).GetFile), ctx, service, path)
}

// GetIndex mocks base method.
func (m *MockProvider) GetIndex(ctx context.Context, service string) (*shared.Index, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIndex", ctx, service)
	ret0, _ := ret[0].(*shared.Index)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIndex indicates an expected call of GetIndex.
func (mr *MockProviderMockRecorder) GetIndex(ctx, service interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIndex", reflect.TypeOf((*MockProvider)(nil).GetIndex), ctx, service)
}

// GetIndexes mocks base method.
func (m *MockProvider) GetIndexes(ctx context.Context) ([]shared.Index, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIndexes", ctx)
	ret0, _ := ret[0].([]shared.Index)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIndexes indicates an expected call of GetIndexes.
func (mr *MockProviderMockRecorder) GetIndexes(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIndexes", reflect.TypeOf((*MockProvider)(nil).GetIndexes), ctx)
}

// GetMarkdown mocks base method.
func (m *MockProvider) GetMarkdown(ctx context.Context, service, path string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMarkdown", ctx, service, path)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMarkdown indicates an expected call of GetMarkdown.
func (mr *MockProviderMockRecorder) GetMarkdown(ctx, service, path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMarkdown", reflect.TypeOf((*MockProvider)(nil).GetMarkdown), ctx, service, path)
}
