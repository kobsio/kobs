// Code generated by mockery v2.12.1. DO NOT EDIT.

package satellites

import (
	testing "testing"

	satellite "github.com/kobsio/kobs/pkg/hub/satellites/satellite"
	mock "github.com/stretchr/testify/mock"
)

// MockClient is an autogenerated mock type for the Client type
type MockClient struct {
	mock.Mock
}

// GetSatellite provides a mock function with given fields: name
func (_m *MockClient) GetSatellite(name string) satellite.Client {
	ret := _m.Called(name)

	var r0 satellite.Client
	if rf, ok := ret.Get(0).(func(string) satellite.Client); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(satellite.Client)
		}
	}

	return r0
}

// GetSatellites provides a mock function with given fields:
func (_m *MockClient) GetSatellites() []satellite.Client {
	ret := _m.Called()

	var r0 []satellite.Client
	if rf, ok := ret.Get(0).(func() []satellite.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]satellite.Client)
		}
	}

	return r0
}

// NewMockClient creates a new instance of MockClient. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockClient(t testing.TB) *MockClient {
	mock := &MockClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
