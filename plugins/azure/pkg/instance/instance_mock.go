// Code generated by mockery v2.9.4. DO NOT EDIT.

package instance

import (
	context "github.com/kobsio/kobs/pkg/api/middleware/auth/context"
	containerinstances "github.com/kobsio/kobs/plugins/azure/pkg/instance/containerinstances"

	costmanagement "github.com/kobsio/kobs/plugins/azure/pkg/instance/costmanagement"

	kubernetesservices "github.com/kobsio/kobs/plugins/azure/pkg/instance/kubernetesservices"

	mock "github.com/stretchr/testify/mock"

	monitor "github.com/kobsio/kobs/plugins/azure/pkg/instance/monitor"

	resourcegroups "github.com/kobsio/kobs/plugins/azure/pkg/instance/resourcegroups"

	virtualmachinescalesets "github.com/kobsio/kobs/plugins/azure/pkg/instance/virtualmachinescalesets"
)

// MockInstance is an autogenerated mock type for the Instance type
type MockInstance struct {
	mock.Mock
}

// CheckPermissions provides a mock function with given fields: pluginName, user, resource, resourceGroup, verb
func (_m *MockInstance) CheckPermissions(pluginName string, user *context.User, resource string, resourceGroup string, verb string) error {
	ret := _m.Called(pluginName, user, resource, resourceGroup, verb)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *context.User, string, string, string) error); ok {
		r0 = rf(pluginName, user, resource, resourceGroup, verb)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ContainerInstancesClient provides a mock function with given fields:
func (_m *MockInstance) ContainerInstancesClient() containerinstances.Client {
	ret := _m.Called()

	var r0 containerinstances.Client
	if rf, ok := ret.Get(0).(func() containerinstances.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(containerinstances.Client)
		}
	}

	return r0
}

// CostManagementClient provides a mock function with given fields:
func (_m *MockInstance) CostManagementClient() costmanagement.Client {
	ret := _m.Called()

	var r0 costmanagement.Client
	if rf, ok := ret.Get(0).(func() costmanagement.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(costmanagement.Client)
		}
	}

	return r0
}

// GetName provides a mock function with given fields:
func (_m *MockInstance) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// KubernetesServicesClient provides a mock function with given fields:
func (_m *MockInstance) KubernetesServicesClient() kubernetesservices.Client {
	ret := _m.Called()

	var r0 kubernetesservices.Client
	if rf, ok := ret.Get(0).(func() kubernetesservices.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(kubernetesservices.Client)
		}
	}

	return r0
}

// MonitorClient provides a mock function with given fields:
func (_m *MockInstance) MonitorClient() monitor.Client {
	ret := _m.Called()

	var r0 monitor.Client
	if rf, ok := ret.Get(0).(func() monitor.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(monitor.Client)
		}
	}

	return r0
}

// ResourceGroupsClient provides a mock function with given fields:
func (_m *MockInstance) ResourceGroupsClient() resourcegroups.Client {
	ret := _m.Called()

	var r0 resourcegroups.Client
	if rf, ok := ret.Get(0).(func() resourcegroups.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(resourcegroups.Client)
		}
	}

	return r0
}

// VirtualMachineScaleSetsClient provides a mock function with given fields:
func (_m *MockInstance) VirtualMachineScaleSetsClient() virtualmachinescalesets.Client {
	ret := _m.Called()

	var r0 virtualmachinescalesets.Client
	if rf, ok := ret.Get(0).(func() virtualmachinescalesets.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(virtualmachinescalesets.Client)
		}
	}

	return r0
}
